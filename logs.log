2025-04-19 19:44:20,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:44:20,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:44:20,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:44:20,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:45:13,637:INFO:PyCaret RegressionExperiment
2025-04-19 19:45:13,637:INFO:Logging name: agn_modeling
2025-04-19 19:45:13,637:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-19 19:45:13,637:INFO:version 3.0.4
2025-04-19 19:45:13,637:INFO:Initializing setup()
2025-04-19 19:45:13,637:INFO:self.USI: b21c
2025-04-19 19:45:13,637:INFO:self._variable_keys: {'html_param', 'gpu_n_jobs_param', 'y', 'X', 'gpu_param', 'log_plots_param', 'n_jobs_param', 'target_param', 'memory', 'fold_groups_param', 'seed', 'fold_generator', 'exp_name_log', 'pipeline', '_available_plots', 'idx', 'X_test', 'exp_id', 'data', 'USI', 'transform_target_param', 'y_test', 'y_train', 'X_train', 'fold_shuffle_param', '_ml_usecase', 'logging_param'}
2025-04-19 19:45:13,637:INFO:Checking environment
2025-04-19 19:45:13,637:INFO:python_version: 3.10.9
2025-04-19 19:45:13,637:INFO:python_build: ('tags/v3.10.9:1dd9be6', 'Dec  6 2022 20:01:21')
2025-04-19 19:45:13,639:INFO:machine: AMD64
2025-04-19 19:45:13,651:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-19 19:45:13,659:INFO:Memory: svmem(total=16952647680, available=4435275776, percent=73.8, used=12517371904, free=4435275776)
2025-04-19 19:45:13,659:INFO:Physical Core: 4
2025-04-19 19:45:13,659:INFO:Logical Core: 8
2025-04-19 19:45:13,659:INFO:Checking libraries
2025-04-19 19:45:13,659:INFO:System:
2025-04-19 19:45:13,659:INFO:    python: 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 20:01:21) [MSC v.1934 64 bit (AMD64)]
2025-04-19 19:45:13,659:INFO:executable: D:\College\agn\venv_py310\Scripts\python.exe
2025-04-19 19:45:13,659:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-19 19:45:13,660:INFO:PyCaret required dependencies:
2025-04-19 19:45:13,685:INFO:                 pip: 25.0.1
2025-04-19 19:45:13,685:INFO:          setuptools: 65.5.0
2025-04-19 19:45:13,685:INFO:             pycaret: 3.0.4
2025-04-19 19:45:13,685:INFO:             IPython: 8.35.0
2025-04-19 19:45:13,685:INFO:          ipywidgets: 8.1.6
2025-04-19 19:45:13,685:INFO:                tqdm: 4.67.1
2025-04-19 19:45:13,685:INFO:               numpy: 1.23.5
2025-04-19 19:45:13,685:INFO:              pandas: 1.5.3
2025-04-19 19:45:13,685:INFO:              jinja2: 3.1.6
2025-04-19 19:45:13,685:INFO:               scipy: 1.10.1
2025-04-19 19:45:13,686:INFO:              joblib: 1.2.0
2025-04-19 19:45:13,686:INFO:             sklearn: 1.2.2
2025-04-19 19:45:13,686:INFO:                pyod: 2.0.4
2025-04-19 19:45:13,686:INFO:            imblearn: 0.12.4
2025-04-19 19:45:13,686:INFO:   category_encoders: 2.7.0
2025-04-19 19:45:13,686:INFO:            lightgbm: 4.6.0
2025-04-19 19:45:13,686:INFO:               numba: 0.60.0
2025-04-19 19:45:13,686:INFO:            requests: 2.32.3
2025-04-19 19:45:13,686:INFO:          matplotlib: 3.7.1
2025-04-19 19:45:13,686:INFO:          scikitplot: 0.3.7
2025-04-19 19:45:13,686:INFO:         yellowbrick: 1.5
2025-04-19 19:45:13,686:INFO:              plotly: 5.24.1
2025-04-19 19:45:13,686:INFO:    plotly-resampler: Not installed
2025-04-19 19:45:13,686:INFO:             kaleido: 0.2.1
2025-04-19 19:45:13,686:INFO:           schemdraw: 0.15
2025-04-19 19:45:13,686:INFO:         statsmodels: 0.14.4
2025-04-19 19:45:13,686:INFO:              sktime: 0.21.1
2025-04-19 19:45:13,686:INFO:               tbats: 1.1.3
2025-04-19 19:45:13,686:INFO:            pmdarima: 2.0.4
2025-04-19 19:45:13,686:INFO:              psutil: 7.0.0
2025-04-19 19:45:13,686:INFO:          markupsafe: 3.0.2
2025-04-19 19:45:13,687:INFO:             pickle5: Not installed
2025-04-19 19:45:13,687:INFO:         cloudpickle: 3.1.1
2025-04-19 19:45:13,687:INFO:         deprecation: 2.1.0
2025-04-19 19:45:13,687:INFO:              xxhash: 3.5.0
2025-04-19 19:45:13,687:INFO:           wurlitzer: Not installed
2025-04-19 19:45:13,687:INFO:PyCaret optional dependencies:
2025-04-19 19:45:13,961:INFO:                shap: Not installed
2025-04-19 19:45:13,962:INFO:           interpret: Not installed
2025-04-19 19:45:13,962:INFO:                umap: Not installed
2025-04-19 19:45:13,962:INFO:    pandas_profiling: Not installed
2025-04-19 19:45:13,962:INFO:  explainerdashboard: Not installed
2025-04-19 19:45:13,962:INFO:             autoviz: Not installed
2025-04-19 19:45:13,962:INFO:           fairlearn: Not installed
2025-04-19 19:45:13,962:INFO:          deepchecks: Not installed
2025-04-19 19:45:13,962:INFO:             xgboost: Not installed
2025-04-19 19:45:13,962:INFO:            catboost: Not installed
2025-04-19 19:45:13,962:INFO:              kmodes: Not installed
2025-04-19 19:45:13,962:INFO:             mlxtend: Not installed
2025-04-19 19:45:13,962:INFO:       statsforecast: Not installed
2025-04-19 19:45:13,962:INFO:        tune_sklearn: Not installed
2025-04-19 19:45:13,962:INFO:                 ray: Not installed
2025-04-19 19:45:13,962:INFO:            hyperopt: Not installed
2025-04-19 19:45:13,962:INFO:              optuna: Not installed
2025-04-19 19:45:13,962:INFO:               skopt: Not installed
2025-04-19 19:45:13,962:INFO:              mlflow: 2.21.3
2025-04-19 19:45:13,962:INFO:              gradio: Not installed
2025-04-19 19:45:13,962:INFO:             fastapi: 0.115.12
2025-04-19 19:45:13,962:INFO:             uvicorn: 0.34.2
2025-04-19 19:45:13,962:INFO:              m2cgen: Not installed
2025-04-19 19:45:13,962:INFO:           evidently: Not installed
2025-04-19 19:45:13,962:INFO:               fugue: Not installed
2025-04-19 19:45:13,962:INFO:           streamlit: Not installed
2025-04-19 19:45:13,962:INFO:             prophet: Not installed
2025-04-19 19:45:13,962:INFO:None
2025-04-19 19:45:13,962:INFO:Set up data.
2025-04-19 19:45:13,967:INFO:Set up train/test split.
2025-04-19 19:45:13,969:INFO:Set up index.
2025-04-19 19:45:13,970:INFO:Set up folding strategy.
2025-04-19 19:45:13,970:INFO:Assigning column types.
2025-04-19 19:45:13,972:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-19 19:45:13,972:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 19:45:13,976:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:45:13,979:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,027:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,072:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,072:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,077:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,080:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,126:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,165:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,166:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-19 19:45:14,171:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,175:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,232:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,360:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,364:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,422:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,467:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-19 19:45:14,478:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,582:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,646:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,687:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-19 19:45:14,746:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,848:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,889:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,890:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-19 19:45:14,955:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:14,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:14,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:15,052:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:45:15,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:15,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:15,090:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-19 19:45:15,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:15,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:15,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:15,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:15,278:INFO:Preparing preprocessing pipeline...
2025-04-19 19:45:15,278:INFO:Set up target transformation.
2025-04-19 19:45:15,278:INFO:Set up simple imputation.
2025-04-19 19:45:15,278:INFO:Set up removing multicollinearity.
2025-04-19 19:45:15,278:INFO:Set up removing outliers.
2025-04-19 19:45:15,278:INFO:Set up feature normalization.
2025-04-19 19:45:15,446:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:15,761:INFO:Finished creating preprocessing pipeline.
2025-04-19 19:45:15,772:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-04-19 19:45:15,772:INFO:Creating final display dataframe.
2025-04-19 19:45:16,002:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:16,520:INFO:Setup _display_container:                     Description         Value
0                    Session id            42
1                        Target        target
2                   Target type    Regression
3           Original data shape     (7999, 6)
4        Transformed data shape     (7719, 6)
5   Transformed train set shape     (5319, 6)
6    Transformed test set shape     (2400, 6)
7              Numeric features             5
8      Rows with missing values          9.7%
9                    Preprocess          True
10              Imputation type        simple
11           Numeric imputation          mean
12       Categorical imputation          mode
13     Remove multicollinearity          True
14  Multicollinearity threshold           0.9
15              Remove outliers          True
16           Outliers threshold          0.05
17                    Normalize          True
18             Normalize method        zscore
19             Transform target          True
20      Transform target method   yeo-johnson
21               Fold Generator         KFold
22                  Fold Number            10
23                     CPU Jobs            -1
24                      Use GPU         False
25               Log Experiment         False
26              Experiment Name  agn_modeling
27                          USI          b21c
2025-04-19 19:45:16,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:16,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:16,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:16,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:45:16,720:INFO:setup() successfully completed in 3.14s...............
2025-04-19 19:45:16,720:INFO:Initializing compare_models()
2025-04-19 19:45:16,720:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, 'include': None, 'exclude': ['catboost'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=['catboost'])
2025-04-19 19:45:16,720:INFO:Checking exceptions
2025-04-19 19:45:16,722:INFO:Preparing display monitor
2025-04-19 19:45:16,726:INFO:Initializing Linear Regression
2025-04-19 19:45:16,726:INFO:Total runtime is 0.0 minutes
2025-04-19 19:45:16,726:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:16,726:INFO:Initializing create_model()
2025-04-19 19:45:16,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:16,726:INFO:Checking exceptions
2025-04-19 19:45:16,726:INFO:Importing libraries
2025-04-19 19:45:16,726:INFO:Copying training dataset
2025-04-19 19:45:16,730:INFO:Defining folds
2025-04-19 19:45:16,730:INFO:Declaring metric variables
2025-04-19 19:45:16,730:INFO:Importing untrained model
2025-04-19 19:45:16,730:INFO:Linear Regression Imported successfully
2025-04-19 19:45:16,730:INFO:Starting cross validation
2025-04-19 19:45:16,742:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:21,722:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:21,730:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:21,776:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:21,898:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:21,932:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:21,954:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:22,114:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:22,186:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:23,048:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:23,082:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:45:23,483:INFO:Calculating mean and std
2025-04-19 19:45:23,483:INFO:Creating metrics dataframe
2025-04-19 19:45:23,571:INFO:Uploading results into container
2025-04-19 19:45:23,572:INFO:Uploading model into container now
2025-04-19 19:45:23,572:INFO:_master_model_container: 1
2025-04-19 19:45:23,572:INFO:_display_container: 2
2025-04-19 19:45:23,572:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:45:23,572:INFO:create_model() successfully completed......................................
2025-04-19 19:45:23,742:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:23,742:INFO:Creating metrics dataframe
2025-04-19 19:45:23,746:INFO:Initializing Lasso Regression
2025-04-19 19:45:23,746:INFO:Total runtime is 0.11699620485305787 minutes
2025-04-19 19:45:23,747:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:23,747:INFO:Initializing create_model()
2025-04-19 19:45:23,747:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:23,747:INFO:Checking exceptions
2025-04-19 19:45:23,747:INFO:Importing libraries
2025-04-19 19:45:23,747:INFO:Copying training dataset
2025-04-19 19:45:23,752:INFO:Defining folds
2025-04-19 19:45:23,752:INFO:Declaring metric variables
2025-04-19 19:45:23,752:INFO:Importing untrained model
2025-04-19 19:45:23,753:INFO:Lasso Regression Imported successfully
2025-04-19 19:45:23,753:INFO:Starting cross validation
2025-04-19 19:45:23,760:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:24,495:INFO:Calculating mean and std
2025-04-19 19:45:24,496:INFO:Creating metrics dataframe
2025-04-19 19:45:24,584:INFO:Uploading results into container
2025-04-19 19:45:24,585:INFO:Uploading model into container now
2025-04-19 19:45:24,586:INFO:_master_model_container: 2
2025-04-19 19:45:24,586:INFO:_display_container: 2
2025-04-19 19:45:24,586:INFO:Lasso(random_state=42)
2025-04-19 19:45:24,586:INFO:create_model() successfully completed......................................
2025-04-19 19:45:24,822:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:24,822:INFO:Creating metrics dataframe
2025-04-19 19:45:24,826:INFO:Initializing Ridge Regression
2025-04-19 19:45:24,826:INFO:Total runtime is 0.13500583569208782 minutes
2025-04-19 19:45:24,826:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:24,826:INFO:Initializing create_model()
2025-04-19 19:45:24,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:24,826:INFO:Checking exceptions
2025-04-19 19:45:24,826:INFO:Importing libraries
2025-04-19 19:45:24,826:INFO:Copying training dataset
2025-04-19 19:45:24,830:INFO:Defining folds
2025-04-19 19:45:24,830:INFO:Declaring metric variables
2025-04-19 19:45:24,831:INFO:Importing untrained model
2025-04-19 19:45:24,831:INFO:Ridge Regression Imported successfully
2025-04-19 19:45:24,831:INFO:Starting cross validation
2025-04-19 19:45:24,839:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:25,554:INFO:Calculating mean and std
2025-04-19 19:45:25,555:INFO:Creating metrics dataframe
2025-04-19 19:45:25,653:INFO:Uploading results into container
2025-04-19 19:45:25,654:INFO:Uploading model into container now
2025-04-19 19:45:25,654:INFO:_master_model_container: 3
2025-04-19 19:45:25,654:INFO:_display_container: 2
2025-04-19 19:45:25,655:INFO:Ridge(random_state=42)
2025-04-19 19:45:25,655:INFO:create_model() successfully completed......................................
2025-04-19 19:45:25,754:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:25,754:INFO:Creating metrics dataframe
2025-04-19 19:45:25,759:INFO:Initializing Elastic Net
2025-04-19 19:45:25,759:INFO:Total runtime is 0.15054647127787274 minutes
2025-04-19 19:45:25,759:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:25,760:INFO:Initializing create_model()
2025-04-19 19:45:25,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:25,760:INFO:Checking exceptions
2025-04-19 19:45:25,760:INFO:Importing libraries
2025-04-19 19:45:25,760:INFO:Copying training dataset
2025-04-19 19:45:25,763:INFO:Defining folds
2025-04-19 19:45:25,764:INFO:Declaring metric variables
2025-04-19 19:45:25,764:INFO:Importing untrained model
2025-04-19 19:45:25,764:INFO:Elastic Net Imported successfully
2025-04-19 19:45:25,764:INFO:Starting cross validation
2025-04-19 19:45:25,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:26,443:INFO:Calculating mean and std
2025-04-19 19:45:26,444:INFO:Creating metrics dataframe
2025-04-19 19:45:26,526:INFO:Uploading results into container
2025-04-19 19:45:26,527:INFO:Uploading model into container now
2025-04-19 19:45:26,527:INFO:_master_model_container: 4
2025-04-19 19:45:26,528:INFO:_display_container: 2
2025-04-19 19:45:26,528:INFO:ElasticNet(random_state=42)
2025-04-19 19:45:26,528:INFO:create_model() successfully completed......................................
2025-04-19 19:45:26,622:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:26,622:INFO:Creating metrics dataframe
2025-04-19 19:45:26,626:INFO:Initializing Least Angle Regression
2025-04-19 19:45:26,626:INFO:Total runtime is 0.16500986417134605 minutes
2025-04-19 19:45:26,626:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:26,627:INFO:Initializing create_model()
2025-04-19 19:45:26,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:26,627:INFO:Checking exceptions
2025-04-19 19:45:26,627:INFO:Importing libraries
2025-04-19 19:45:26,627:INFO:Copying training dataset
2025-04-19 19:45:26,632:INFO:Defining folds
2025-04-19 19:45:26,632:INFO:Declaring metric variables
2025-04-19 19:45:26,632:INFO:Importing untrained model
2025-04-19 19:45:26,632:INFO:Least Angle Regression Imported successfully
2025-04-19 19:45:26,632:INFO:Starting cross validation
2025-04-19 19:45:26,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:27,297:INFO:Calculating mean and std
2025-04-19 19:45:27,299:INFO:Creating metrics dataframe
2025-04-19 19:45:27,379:INFO:Uploading results into container
2025-04-19 19:45:27,379:INFO:Uploading model into container now
2025-04-19 19:45:27,380:INFO:_master_model_container: 5
2025-04-19 19:45:27,380:INFO:_display_container: 2
2025-04-19 19:45:27,380:INFO:Lars(random_state=42)
2025-04-19 19:45:27,380:INFO:create_model() successfully completed......................................
2025-04-19 19:45:27,473:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:27,473:INFO:Creating metrics dataframe
2025-04-19 19:45:27,477:INFO:Initializing Lasso Least Angle Regression
2025-04-19 19:45:27,477:INFO:Total runtime is 0.17918018102645877 minutes
2025-04-19 19:45:27,477:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:27,478:INFO:Initializing create_model()
2025-04-19 19:45:27,478:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:27,478:INFO:Checking exceptions
2025-04-19 19:45:27,478:INFO:Importing libraries
2025-04-19 19:45:27,478:INFO:Copying training dataset
2025-04-19 19:45:27,481:INFO:Defining folds
2025-04-19 19:45:27,481:INFO:Declaring metric variables
2025-04-19 19:45:27,481:INFO:Importing untrained model
2025-04-19 19:45:27,481:INFO:Lasso Least Angle Regression Imported successfully
2025-04-19 19:45:27,482:INFO:Starting cross validation
2025-04-19 19:45:27,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:28,179:INFO:Calculating mean and std
2025-04-19 19:45:28,179:INFO:Creating metrics dataframe
2025-04-19 19:45:28,265:INFO:Uploading results into container
2025-04-19 19:45:28,266:INFO:Uploading model into container now
2025-04-19 19:45:28,266:INFO:_master_model_container: 6
2025-04-19 19:45:28,266:INFO:_display_container: 2
2025-04-19 19:45:28,267:INFO:LassoLars(random_state=42)
2025-04-19 19:45:28,267:INFO:create_model() successfully completed......................................
2025-04-19 19:45:28,366:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:28,366:INFO:Creating metrics dataframe
2025-04-19 19:45:28,372:INFO:Initializing Orthogonal Matching Pursuit
2025-04-19 19:45:28,372:INFO:Total runtime is 0.19410681724548343 minutes
2025-04-19 19:45:28,372:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:28,372:INFO:Initializing create_model()
2025-04-19 19:45:28,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:28,372:INFO:Checking exceptions
2025-04-19 19:45:28,372:INFO:Importing libraries
2025-04-19 19:45:28,372:INFO:Copying training dataset
2025-04-19 19:45:28,376:INFO:Defining folds
2025-04-19 19:45:28,377:INFO:Declaring metric variables
2025-04-19 19:45:28,377:INFO:Importing untrained model
2025-04-19 19:45:28,377:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 19:45:28,377:INFO:Starting cross validation
2025-04-19 19:45:28,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:29,131:INFO:Calculating mean and std
2025-04-19 19:45:29,132:INFO:Creating metrics dataframe
2025-04-19 19:45:29,220:INFO:Uploading results into container
2025-04-19 19:45:29,220:INFO:Uploading model into container now
2025-04-19 19:45:29,221:INFO:_master_model_container: 7
2025-04-19 19:45:29,221:INFO:_display_container: 2
2025-04-19 19:45:29,221:INFO:OrthogonalMatchingPursuit()
2025-04-19 19:45:29,221:INFO:create_model() successfully completed......................................
2025-04-19 19:45:29,316:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:29,316:INFO:Creating metrics dataframe
2025-04-19 19:45:29,321:INFO:Initializing Bayesian Ridge
2025-04-19 19:45:29,321:INFO:Total runtime is 0.2099156737327576 minutes
2025-04-19 19:45:29,321:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:29,322:INFO:Initializing create_model()
2025-04-19 19:45:29,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:29,322:INFO:Checking exceptions
2025-04-19 19:45:29,322:INFO:Importing libraries
2025-04-19 19:45:29,322:INFO:Copying training dataset
2025-04-19 19:45:29,325:INFO:Defining folds
2025-04-19 19:45:29,325:INFO:Declaring metric variables
2025-04-19 19:45:29,325:INFO:Importing untrained model
2025-04-19 19:45:29,325:INFO:Bayesian Ridge Imported successfully
2025-04-19 19:45:29,325:INFO:Starting cross validation
2025-04-19 19:45:29,332:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:30,241:INFO:Calculating mean and std
2025-04-19 19:45:30,241:INFO:Creating metrics dataframe
2025-04-19 19:45:30,317:INFO:Uploading results into container
2025-04-19 19:45:30,319:INFO:Uploading model into container now
2025-04-19 19:45:30,319:INFO:_master_model_container: 8
2025-04-19 19:45:30,319:INFO:_display_container: 2
2025-04-19 19:45:30,320:INFO:BayesianRidge()
2025-04-19 19:45:30,320:INFO:create_model() successfully completed......................................
2025-04-19 19:45:30,426:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:30,426:INFO:Creating metrics dataframe
2025-04-19 19:45:30,431:INFO:Initializing Passive Aggressive Regressor
2025-04-19 19:45:30,431:INFO:Total runtime is 0.2284146030743917 minutes
2025-04-19 19:45:30,431:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:30,431:INFO:Initializing create_model()
2025-04-19 19:45:30,431:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:30,431:INFO:Checking exceptions
2025-04-19 19:45:30,431:INFO:Importing libraries
2025-04-19 19:45:30,431:INFO:Copying training dataset
2025-04-19 19:45:30,435:INFO:Defining folds
2025-04-19 19:45:30,436:INFO:Declaring metric variables
2025-04-19 19:45:30,436:INFO:Importing untrained model
2025-04-19 19:45:30,436:INFO:Passive Aggressive Regressor Imported successfully
2025-04-19 19:45:30,437:INFO:Starting cross validation
2025-04-19 19:45:30,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:31,195:INFO:Calculating mean and std
2025-04-19 19:45:31,195:INFO:Creating metrics dataframe
2025-04-19 19:45:31,280:INFO:Uploading results into container
2025-04-19 19:45:31,280:INFO:Uploading model into container now
2025-04-19 19:45:31,281:INFO:_master_model_container: 9
2025-04-19 19:45:31,281:INFO:_display_container: 2
2025-04-19 19:45:31,281:INFO:PassiveAggressiveRegressor(random_state=42)
2025-04-19 19:45:31,281:INFO:create_model() successfully completed......................................
2025-04-19 19:45:31,384:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:31,384:INFO:Creating metrics dataframe
2025-04-19 19:45:31,389:INFO:Initializing Huber Regressor
2025-04-19 19:45:31,389:INFO:Total runtime is 0.24438404639561973 minutes
2025-04-19 19:45:31,389:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:31,389:INFO:Initializing create_model()
2025-04-19 19:45:31,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:31,389:INFO:Checking exceptions
2025-04-19 19:45:31,390:INFO:Importing libraries
2025-04-19 19:45:31,390:INFO:Copying training dataset
2025-04-19 19:45:31,394:INFO:Defining folds
2025-04-19 19:45:31,394:INFO:Declaring metric variables
2025-04-19 19:45:31,394:INFO:Importing untrained model
2025-04-19 19:45:31,395:INFO:Huber Regressor Imported successfully
2025-04-19 19:45:31,395:INFO:Starting cross validation
2025-04-19 19:45:31,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:32,243:INFO:Calculating mean and std
2025-04-19 19:45:32,243:INFO:Creating metrics dataframe
2025-04-19 19:45:32,343:INFO:Uploading results into container
2025-04-19 19:45:32,344:INFO:Uploading model into container now
2025-04-19 19:45:32,346:INFO:_master_model_container: 10
2025-04-19 19:45:32,346:INFO:_display_container: 2
2025-04-19 19:45:32,346:INFO:HuberRegressor()
2025-04-19 19:45:32,346:INFO:create_model() successfully completed......................................
2025-04-19 19:45:32,465:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:32,465:INFO:Creating metrics dataframe
2025-04-19 19:45:32,473:INFO:Initializing K Neighbors Regressor
2025-04-19 19:45:32,473:INFO:Total runtime is 0.2624608675638835 minutes
2025-04-19 19:45:32,473:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:32,473:INFO:Initializing create_model()
2025-04-19 19:45:32,474:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:32,474:INFO:Checking exceptions
2025-04-19 19:45:32,474:INFO:Importing libraries
2025-04-19 19:45:32,474:INFO:Copying training dataset
2025-04-19 19:45:32,479:INFO:Defining folds
2025-04-19 19:45:32,479:INFO:Declaring metric variables
2025-04-19 19:45:32,479:INFO:Importing untrained model
2025-04-19 19:45:32,479:INFO:K Neighbors Regressor Imported successfully
2025-04-19 19:45:32,479:INFO:Starting cross validation
2025-04-19 19:45:32,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:33,481:INFO:Calculating mean and std
2025-04-19 19:45:33,482:INFO:Creating metrics dataframe
2025-04-19 19:45:33,572:INFO:Uploading results into container
2025-04-19 19:45:33,573:INFO:Uploading model into container now
2025-04-19 19:45:33,573:INFO:_master_model_container: 11
2025-04-19 19:45:33,573:INFO:_display_container: 2
2025-04-19 19:45:33,573:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-19 19:45:33,573:INFO:create_model() successfully completed......................................
2025-04-19 19:45:33,672:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:33,672:INFO:Creating metrics dataframe
2025-04-19 19:45:33,677:INFO:Initializing Decision Tree Regressor
2025-04-19 19:45:33,677:INFO:Total runtime is 0.2825127561887105 minutes
2025-04-19 19:45:33,677:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:33,678:INFO:Initializing create_model()
2025-04-19 19:45:33,678:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:33,678:INFO:Checking exceptions
2025-04-19 19:45:33,678:INFO:Importing libraries
2025-04-19 19:45:33,678:INFO:Copying training dataset
2025-04-19 19:45:33,681:INFO:Defining folds
2025-04-19 19:45:33,681:INFO:Declaring metric variables
2025-04-19 19:45:33,681:INFO:Importing untrained model
2025-04-19 19:45:33,681:INFO:Decision Tree Regressor Imported successfully
2025-04-19 19:45:33,682:INFO:Starting cross validation
2025-04-19 19:45:33,694:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:34,534:INFO:Calculating mean and std
2025-04-19 19:45:34,535:INFO:Creating metrics dataframe
2025-04-19 19:45:34,630:INFO:Uploading results into container
2025-04-19 19:45:34,631:INFO:Uploading model into container now
2025-04-19 19:45:34,631:INFO:_master_model_container: 12
2025-04-19 19:45:34,631:INFO:_display_container: 2
2025-04-19 19:45:34,631:INFO:DecisionTreeRegressor(random_state=42)
2025-04-19 19:45:34,632:INFO:create_model() successfully completed......................................
2025-04-19 19:45:34,756:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:34,756:INFO:Creating metrics dataframe
2025-04-19 19:45:34,761:INFO:Initializing Random Forest Regressor
2025-04-19 19:45:34,761:INFO:Total runtime is 0.30059357086817423 minutes
2025-04-19 19:45:34,761:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:34,761:INFO:Initializing create_model()
2025-04-19 19:45:34,761:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:34,762:INFO:Checking exceptions
2025-04-19 19:45:34,762:INFO:Importing libraries
2025-04-19 19:45:34,762:INFO:Copying training dataset
2025-04-19 19:45:34,766:INFO:Defining folds
2025-04-19 19:45:34,766:INFO:Declaring metric variables
2025-04-19 19:45:34,766:INFO:Importing untrained model
2025-04-19 19:45:34,766:INFO:Random Forest Regressor Imported successfully
2025-04-19 19:45:34,767:INFO:Starting cross validation
2025-04-19 19:45:34,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:38,384:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 19:45:38,814:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.98s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 19:45:39,189:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.26s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 19:45:39,335:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2025-04-19 19:45:40,375:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2025-04-19 19:45:43,947:INFO:Calculating mean and std
2025-04-19 19:45:43,947:INFO:Creating metrics dataframe
2025-04-19 19:45:44,067:INFO:Uploading results into container
2025-04-19 19:45:44,068:INFO:Uploading model into container now
2025-04-19 19:45:44,069:INFO:_master_model_container: 13
2025-04-19 19:45:44,069:INFO:_display_container: 2
2025-04-19 19:45:44,069:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:45:44,070:INFO:create_model() successfully completed......................................
2025-04-19 19:45:44,208:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:44,208:INFO:Creating metrics dataframe
2025-04-19 19:45:44,218:INFO:Initializing Extra Trees Regressor
2025-04-19 19:45:44,218:INFO:Total runtime is 0.45819907983144126 minutes
2025-04-19 19:45:44,218:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:44,219:INFO:Initializing create_model()
2025-04-19 19:45:44,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:44,219:INFO:Checking exceptions
2025-04-19 19:45:44,219:INFO:Importing libraries
2025-04-19 19:45:44,219:INFO:Copying training dataset
2025-04-19 19:45:44,223:INFO:Defining folds
2025-04-19 19:45:44,223:INFO:Declaring metric variables
2025-04-19 19:45:44,223:INFO:Importing untrained model
2025-04-19 19:45:44,224:INFO:Extra Trees Regressor Imported successfully
2025-04-19 19:45:44,224:INFO:Starting cross validation
2025-04-19 19:45:44,231:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:46,989:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 19:45:46,998:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 19:45:47,041:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 19:45:47,109:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 19:45:48,644:INFO:Calculating mean and std
2025-04-19 19:45:48,645:INFO:Creating metrics dataframe
2025-04-19 19:45:48,764:INFO:Uploading results into container
2025-04-19 19:45:48,765:INFO:Uploading model into container now
2025-04-19 19:45:48,765:INFO:_master_model_container: 14
2025-04-19 19:45:48,765:INFO:_display_container: 2
2025-04-19 19:45:48,765:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:45:48,765:INFO:create_model() successfully completed......................................
2025-04-19 19:45:48,884:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:48,884:INFO:Creating metrics dataframe
2025-04-19 19:45:48,889:INFO:Initializing AdaBoost Regressor
2025-04-19 19:45:48,889:INFO:Total runtime is 0.5360614816347758 minutes
2025-04-19 19:45:48,889:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:48,889:INFO:Initializing create_model()
2025-04-19 19:45:48,889:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:48,889:INFO:Checking exceptions
2025-04-19 19:45:48,889:INFO:Importing libraries
2025-04-19 19:45:48,889:INFO:Copying training dataset
2025-04-19 19:45:48,893:INFO:Defining folds
2025-04-19 19:45:48,893:INFO:Declaring metric variables
2025-04-19 19:45:48,893:INFO:Importing untrained model
2025-04-19 19:45:48,893:INFO:AdaBoost Regressor Imported successfully
2025-04-19 19:45:48,893:INFO:Starting cross validation
2025-04-19 19:45:48,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:50,186:INFO:Calculating mean and std
2025-04-19 19:45:50,187:INFO:Creating metrics dataframe
2025-04-19 19:45:50,292:INFO:Uploading results into container
2025-04-19 19:45:50,292:INFO:Uploading model into container now
2025-04-19 19:45:50,292:INFO:_master_model_container: 15
2025-04-19 19:45:50,292:INFO:_display_container: 2
2025-04-19 19:45:50,293:INFO:AdaBoostRegressor(random_state=42)
2025-04-19 19:45:50,293:INFO:create_model() successfully completed......................................
2025-04-19 19:45:50,400:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:50,400:INFO:Creating metrics dataframe
2025-04-19 19:45:50,406:INFO:Initializing Gradient Boosting Regressor
2025-04-19 19:45:50,406:INFO:Total runtime is 0.5613397161165874 minutes
2025-04-19 19:45:50,406:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:50,407:INFO:Initializing create_model()
2025-04-19 19:45:50,407:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:50,407:INFO:Checking exceptions
2025-04-19 19:45:50,407:INFO:Importing libraries
2025-04-19 19:45:50,407:INFO:Copying training dataset
2025-04-19 19:45:50,412:INFO:Defining folds
2025-04-19 19:45:50,412:INFO:Declaring metric variables
2025-04-19 19:45:50,413:INFO:Importing untrained model
2025-04-19 19:45:50,413:INFO:Gradient Boosting Regressor Imported successfully
2025-04-19 19:45:50,414:INFO:Starting cross validation
2025-04-19 19:45:50,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:53,542:INFO:Calculating mean and std
2025-04-19 19:45:53,542:INFO:Creating metrics dataframe
2025-04-19 19:45:53,652:INFO:Uploading results into container
2025-04-19 19:45:53,652:INFO:Uploading model into container now
2025-04-19 19:45:53,653:INFO:_master_model_container: 16
2025-04-19 19:45:53,653:INFO:_display_container: 2
2025-04-19 19:45:53,653:INFO:GradientBoostingRegressor(random_state=42)
2025-04-19 19:45:53,653:INFO:create_model() successfully completed......................................
2025-04-19 19:45:53,763:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:53,763:INFO:Creating metrics dataframe
2025-04-19 19:45:53,772:INFO:Initializing Light Gradient Boosting Machine
2025-04-19 19:45:53,772:INFO:Total runtime is 0.61742928425471 minutes
2025-04-19 19:45:53,772:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:53,772:INFO:Initializing create_model()
2025-04-19 19:45:53,772:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:53,773:INFO:Checking exceptions
2025-04-19 19:45:53,773:INFO:Importing libraries
2025-04-19 19:45:53,773:INFO:Copying training dataset
2025-04-19 19:45:53,776:INFO:Defining folds
2025-04-19 19:45:53,776:INFO:Declaring metric variables
2025-04-19 19:45:53,777:INFO:Importing untrained model
2025-04-19 19:45:53,777:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-19 19:45:53,777:INFO:Starting cross validation
2025-04-19 19:45:53,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:56,197:INFO:Calculating mean and std
2025-04-19 19:45:56,200:INFO:Creating metrics dataframe
2025-04-19 19:45:56,356:INFO:Uploading results into container
2025-04-19 19:45:56,357:INFO:Uploading model into container now
2025-04-19 19:45:56,357:INFO:_master_model_container: 17
2025-04-19 19:45:56,357:INFO:_display_container: 2
2025-04-19 19:45:56,358:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:45:56,358:INFO:create_model() successfully completed......................................
2025-04-19 19:45:56,511:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:56,512:INFO:Creating metrics dataframe
2025-04-19 19:45:56,519:INFO:Initializing Dummy Regressor
2025-04-19 19:45:56,519:INFO:Total runtime is 0.6632161537806194 minutes
2025-04-19 19:45:56,519:INFO:SubProcess create_model() called ==================================
2025-04-19 19:45:56,520:INFO:Initializing create_model()
2025-04-19 19:45:56,520:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A204712D10>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:56,520:INFO:Checking exceptions
2025-04-19 19:45:56,520:INFO:Importing libraries
2025-04-19 19:45:56,520:INFO:Copying training dataset
2025-04-19 19:45:56,526:INFO:Defining folds
2025-04-19 19:45:56,526:INFO:Declaring metric variables
2025-04-19 19:45:56,526:INFO:Importing untrained model
2025-04-19 19:45:56,527:INFO:Dummy Regressor Imported successfully
2025-04-19 19:45:56,527:INFO:Starting cross validation
2025-04-19 19:45:56,537:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:45:57,679:INFO:Calculating mean and std
2025-04-19 19:45:57,679:INFO:Creating metrics dataframe
2025-04-19 19:45:57,788:INFO:Uploading results into container
2025-04-19 19:45:57,789:INFO:Uploading model into container now
2025-04-19 19:45:57,790:INFO:_master_model_container: 18
2025-04-19 19:45:57,790:INFO:_display_container: 2
2025-04-19 19:45:57,790:INFO:DummyRegressor()
2025-04-19 19:45:57,790:INFO:create_model() successfully completed......................................
2025-04-19 19:45:57,900:INFO:SubProcess create_model() end ==================================
2025-04-19 19:45:57,901:INFO:Creating metrics dataframe
2025-04-19 19:45:57,909:INFO:Initializing create_model()
2025-04-19 19:45:57,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:57,909:INFO:Checking exceptions
2025-04-19 19:45:57,910:INFO:Importing libraries
2025-04-19 19:45:57,910:INFO:Copying training dataset
2025-04-19 19:45:57,913:INFO:Defining folds
2025-04-19 19:45:57,913:INFO:Declaring metric variables
2025-04-19 19:45:57,913:INFO:Importing untrained model
2025-04-19 19:45:57,913:INFO:Declaring custom model
2025-04-19 19:45:57,913:INFO:Huber Regressor Imported successfully
2025-04-19 19:45:57,924:INFO:Cross validation set to False
2025-04-19 19:45:57,924:INFO:Fitting Model
2025-04-19 19:45:58,113:INFO:HuberRegressor()
2025-04-19 19:45:58,113:INFO:create_model() successfully completed......................................
2025-04-19 19:45:58,239:INFO:Initializing create_model()
2025-04-19 19:45:58,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:58,239:INFO:Checking exceptions
2025-04-19 19:45:58,240:INFO:Importing libraries
2025-04-19 19:45:58,240:INFO:Copying training dataset
2025-04-19 19:45:58,242:INFO:Defining folds
2025-04-19 19:45:58,242:INFO:Declaring metric variables
2025-04-19 19:45:58,242:INFO:Importing untrained model
2025-04-19 19:45:58,242:INFO:Declaring custom model
2025-04-19 19:45:58,242:INFO:Bayesian Ridge Imported successfully
2025-04-19 19:45:58,247:INFO:Cross validation set to False
2025-04-19 19:45:58,247:INFO:Fitting Model
2025-04-19 19:45:58,394:INFO:BayesianRidge()
2025-04-19 19:45:58,394:INFO:create_model() successfully completed......................................
2025-04-19 19:45:58,511:INFO:Initializing create_model()
2025-04-19 19:45:58,511:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:45:58,512:INFO:Checking exceptions
2025-04-19 19:45:58,512:INFO:Importing libraries
2025-04-19 19:45:58,512:INFO:Copying training dataset
2025-04-19 19:45:58,517:INFO:Defining folds
2025-04-19 19:45:58,517:INFO:Declaring metric variables
2025-04-19 19:45:58,517:INFO:Importing untrained model
2025-04-19 19:45:58,517:INFO:Declaring custom model
2025-04-19 19:45:58,519:INFO:Linear Regression Imported successfully
2025-04-19 19:45:58,528:INFO:Cross validation set to False
2025-04-19 19:45:58,528:INFO:Fitting Model
2025-04-19 19:45:58,678:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:45:58,678:INFO:create_model() successfully completed......................................
2025-04-19 19:45:58,810:INFO:_master_model_container: 18
2025-04-19 19:45:58,810:INFO:_display_container: 2
2025-04-19 19:45:58,811:INFO:[HuberRegressor(), BayesianRidge(), LinearRegression(n_jobs=-1)]
2025-04-19 19:45:58,811:INFO:compare_models() successfully completed......................................
2025-04-19 19:45:58,811:INFO:Initializing tune_model()
2025-04-19 19:45:58,811:INFO:tune_model(estimator=HuberRegressor(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>)
2025-04-19 19:45:58,811:INFO:Checking exceptions
2025-04-19 19:45:58,814:INFO:Copying training dataset
2025-04-19 19:45:58,818:INFO:Checking base model
2025-04-19 19:45:58,818:INFO:Base model : Huber Regressor
2025-04-19 19:45:58,818:INFO:Declaring metric variables
2025-04-19 19:45:58,818:INFO:Defining Hyperparameters
2025-04-19 19:45:58,942:INFO:Tuning with n_jobs=-1
2025-04-19 19:45:58,942:INFO:Initializing RandomizedSearchCV
2025-04-19 19:46:12,752:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.3, 'actual_estimator__alpha': 0.3}
2025-04-19 19:46:12,752:INFO:Hyperparameter search completed
2025-04-19 19:46:12,752:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:12,752:INFO:Initializing create_model()
2025-04-19 19:46:12,752:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A20005E950>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.3, 'alpha': 0.3})
2025-04-19 19:46:12,753:INFO:Checking exceptions
2025-04-19 19:46:12,753:INFO:Importing libraries
2025-04-19 19:46:12,753:INFO:Copying training dataset
2025-04-19 19:46:12,756:INFO:Defining folds
2025-04-19 19:46:12,756:INFO:Declaring metric variables
2025-04-19 19:46:12,756:INFO:Importing untrained model
2025-04-19 19:46:12,756:INFO:Declaring custom model
2025-04-19 19:46:12,757:INFO:Huber Regressor Imported successfully
2025-04-19 19:46:12,757:INFO:Starting cross validation
2025-04-19 19:46:12,772:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:13,891:INFO:Calculating mean and std
2025-04-19 19:46:13,891:INFO:Creating metrics dataframe
2025-04-19 19:46:13,893:INFO:Finalizing model
2025-04-19 19:46:14,115:INFO:Uploading results into container
2025-04-19 19:46:14,116:INFO:Uploading model into container now
2025-04-19 19:46:14,117:INFO:_master_model_container: 19
2025-04-19 19:46:14,117:INFO:_display_container: 3
2025-04-19 19:46:14,117:INFO:HuberRegressor(alpha=0.3, epsilon=1.3)
2025-04-19 19:46:14,117:INFO:create_model() successfully completed......................................
2025-04-19 19:46:14,261:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:14,261:INFO:choose_better activated
2025-04-19 19:46:14,261:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:14,261:INFO:Initializing create_model()
2025-04-19 19:46:14,261:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:46:14,261:INFO:Checking exceptions
2025-04-19 19:46:14,262:INFO:Importing libraries
2025-04-19 19:46:14,262:INFO:Copying training dataset
2025-04-19 19:46:14,270:INFO:Defining folds
2025-04-19 19:46:14,270:INFO:Declaring metric variables
2025-04-19 19:46:14,270:INFO:Importing untrained model
2025-04-19 19:46:14,270:INFO:Declaring custom model
2025-04-19 19:46:14,271:INFO:Huber Regressor Imported successfully
2025-04-19 19:46:14,271:INFO:Starting cross validation
2025-04-19 19:46:14,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:15,464:INFO:Calculating mean and std
2025-04-19 19:46:15,465:INFO:Creating metrics dataframe
2025-04-19 19:46:15,469:INFO:Finalizing model
2025-04-19 19:46:15,643:INFO:Uploading results into container
2025-04-19 19:46:15,644:INFO:Uploading model into container now
2025-04-19 19:46:15,644:INFO:_master_model_container: 20
2025-04-19 19:46:15,644:INFO:_display_container: 4
2025-04-19 19:46:15,644:INFO:HuberRegressor()
2025-04-19 19:46:15,644:INFO:create_model() successfully completed......................................
2025-04-19 19:46:15,810:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:15,810:INFO:HuberRegressor() result for R2 is 0.0022
2025-04-19 19:46:15,811:INFO:HuberRegressor(alpha=0.3, epsilon=1.3) result for R2 is 0.0022
2025-04-19 19:46:15,811:INFO:HuberRegressor() is best model
2025-04-19 19:46:15,811:INFO:choose_better completed
2025-04-19 19:46:15,811:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-19 19:46:15,821:INFO:_master_model_container: 20
2025-04-19 19:46:15,821:INFO:_display_container: 3
2025-04-19 19:46:15,821:INFO:HuberRegressor()
2025-04-19 19:46:15,821:INFO:tune_model() successfully completed......................................
2025-04-19 19:46:16,069:INFO:Initializing tune_model()
2025-04-19 19:46:16,069:INFO:tune_model(estimator=BayesianRidge(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>)
2025-04-19 19:46:16,069:INFO:Checking exceptions
2025-04-19 19:46:16,073:INFO:Copying training dataset
2025-04-19 19:46:16,076:INFO:Checking base model
2025-04-19 19:46:16,076:INFO:Base model : Bayesian Ridge
2025-04-19 19:46:16,077:INFO:Declaring metric variables
2025-04-19 19:46:16,077:INFO:Defining Hyperparameters
2025-04-19 19:46:16,246:INFO:Tuning with n_jobs=-1
2025-04-19 19:46:16,246:INFO:Initializing RandomizedSearchCV
2025-04-19 19:46:26,800:INFO:best_params: {'actual_estimator__lambda_2': 0.05, 'actual_estimator__lambda_1': 0.0005, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.01, 'actual_estimator__alpha_1': 0.005}
2025-04-19 19:46:26,800:INFO:Hyperparameter search completed
2025-04-19 19:46:26,800:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:26,801:INFO:Initializing create_model()
2025-04-19 19:46:26,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A20005E0E0>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.05, 'lambda_1': 0.0005, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.01, 'alpha_1': 0.005})
2025-04-19 19:46:26,801:INFO:Checking exceptions
2025-04-19 19:46:26,801:INFO:Importing libraries
2025-04-19 19:46:26,801:INFO:Copying training dataset
2025-04-19 19:46:26,805:INFO:Defining folds
2025-04-19 19:46:26,805:INFO:Declaring metric variables
2025-04-19 19:46:26,805:INFO:Importing untrained model
2025-04-19 19:46:26,805:INFO:Declaring custom model
2025-04-19 19:46:26,806:INFO:Bayesian Ridge Imported successfully
2025-04-19 19:46:26,806:INFO:Starting cross validation
2025-04-19 19:46:26,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:27,686:INFO:Calculating mean and std
2025-04-19 19:46:27,687:INFO:Creating metrics dataframe
2025-04-19 19:46:27,689:INFO:Finalizing model
2025-04-19 19:46:27,854:INFO:Uploading results into container
2025-04-19 19:46:27,855:INFO:Uploading model into container now
2025-04-19 19:46:27,855:INFO:_master_model_container: 21
2025-04-19 19:46:27,855:INFO:_display_container: 4
2025-04-19 19:46:27,855:INFO:BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05)
2025-04-19 19:46:27,855:INFO:create_model() successfully completed......................................
2025-04-19 19:46:27,968:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:27,968:INFO:choose_better activated
2025-04-19 19:46:27,970:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:27,970:INFO:Initializing create_model()
2025-04-19 19:46:27,970:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:46:27,970:INFO:Checking exceptions
2025-04-19 19:46:27,971:INFO:Importing libraries
2025-04-19 19:46:27,971:INFO:Copying training dataset
2025-04-19 19:46:27,974:INFO:Defining folds
2025-04-19 19:46:27,974:INFO:Declaring metric variables
2025-04-19 19:46:27,974:INFO:Importing untrained model
2025-04-19 19:46:27,974:INFO:Declaring custom model
2025-04-19 19:46:27,975:INFO:Bayesian Ridge Imported successfully
2025-04-19 19:46:27,975:INFO:Starting cross validation
2025-04-19 19:46:27,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:29,123:INFO:Calculating mean and std
2025-04-19 19:46:29,124:INFO:Creating metrics dataframe
2025-04-19 19:46:29,128:INFO:Finalizing model
2025-04-19 19:46:29,402:INFO:Uploading results into container
2025-04-19 19:46:29,402:INFO:Uploading model into container now
2025-04-19 19:46:29,403:INFO:_master_model_container: 22
2025-04-19 19:46:29,403:INFO:_display_container: 5
2025-04-19 19:46:29,403:INFO:BayesianRidge()
2025-04-19 19:46:29,403:INFO:create_model() successfully completed......................................
2025-04-19 19:46:29,540:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:29,541:INFO:BayesianRidge() result for R2 is -0.0027
2025-04-19 19:46:29,542:INFO:BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05) result for R2 is -0.0026
2025-04-19 19:46:29,542:INFO:BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05) is best model
2025-04-19 19:46:29,542:INFO:choose_better completed
2025-04-19 19:46:29,558:INFO:_master_model_container: 22
2025-04-19 19:46:29,559:INFO:_display_container: 4
2025-04-19 19:46:29,559:INFO:BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05)
2025-04-19 19:46:29,559:INFO:tune_model() successfully completed......................................
2025-04-19 19:46:29,823:INFO:Initializing tune_model()
2025-04-19 19:46:29,823:INFO:tune_model(estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>)
2025-04-19 19:46:29,823:INFO:Checking exceptions
2025-04-19 19:46:29,826:INFO:Copying training dataset
2025-04-19 19:46:29,827:INFO:Checking base model
2025-04-19 19:46:29,827:INFO:Base model : Linear Regression
2025-04-19 19:46:29,829:INFO:Declaring metric variables
2025-04-19 19:46:29,829:INFO:Defining Hyperparameters
2025-04-19 19:46:29,829:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2025-04-19 19:46:30,027:INFO:Tuning with n_jobs=-1
2025-04-19 19:46:30,027:INFO:Initializing GridSearchCV
2025-04-19 19:46:32,136:INFO:best_params: {'actual_estimator__fit_intercept': True}
2025-04-19 19:46:32,136:INFO:Hyperparameter search completed
2025-04-19 19:46:32,137:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:32,137:INFO:Initializing create_model()
2025-04-19 19:46:32,137:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A20005E950>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True})
2025-04-19 19:46:32,137:INFO:Checking exceptions
2025-04-19 19:46:32,137:INFO:Importing libraries
2025-04-19 19:46:32,137:INFO:Copying training dataset
2025-04-19 19:46:32,141:INFO:Defining folds
2025-04-19 19:46:32,141:INFO:Declaring metric variables
2025-04-19 19:46:32,141:INFO:Importing untrained model
2025-04-19 19:46:32,141:INFO:Declaring custom model
2025-04-19 19:46:32,142:INFO:Linear Regression Imported successfully
2025-04-19 19:46:32,142:INFO:Starting cross validation
2025-04-19 19:46:32,149:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:33,056:INFO:Calculating mean and std
2025-04-19 19:46:33,057:INFO:Creating metrics dataframe
2025-04-19 19:46:33,060:INFO:Finalizing model
2025-04-19 19:46:33,377:INFO:Uploading results into container
2025-04-19 19:46:33,377:INFO:Uploading model into container now
2025-04-19 19:46:33,379:INFO:_master_model_container: 23
2025-04-19 19:46:33,379:INFO:_display_container: 5
2025-04-19 19:46:33,379:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:46:33,379:INFO:create_model() successfully completed......................................
2025-04-19 19:46:33,523:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:33,523:INFO:choose_better activated
2025-04-19 19:46:33,524:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:33,524:INFO:Initializing create_model()
2025-04-19 19:46:33,525:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:46:33,525:INFO:Checking exceptions
2025-04-19 19:46:33,525:INFO:Importing libraries
2025-04-19 19:46:33,525:INFO:Copying training dataset
2025-04-19 19:46:33,530:INFO:Defining folds
2025-04-19 19:46:33,530:INFO:Declaring metric variables
2025-04-19 19:46:33,530:INFO:Importing untrained model
2025-04-19 19:46:33,530:INFO:Declaring custom model
2025-04-19 19:46:33,530:INFO:Linear Regression Imported successfully
2025-04-19 19:46:33,531:INFO:Starting cross validation
2025-04-19 19:46:33,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:34,687:INFO:Calculating mean and std
2025-04-19 19:46:34,687:INFO:Creating metrics dataframe
2025-04-19 19:46:34,690:INFO:Finalizing model
2025-04-19 19:46:34,970:INFO:Uploading results into container
2025-04-19 19:46:34,971:INFO:Uploading model into container now
2025-04-19 19:46:34,972:INFO:_master_model_container: 24
2025-04-19 19:46:34,972:INFO:_display_container: 6
2025-04-19 19:46:34,972:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:46:34,972:INFO:create_model() successfully completed......................................
2025-04-19 19:46:35,117:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:35,118:INFO:LinearRegression(n_jobs=-1) result for R2 is -0.0028
2025-04-19 19:46:35,118:INFO:LinearRegression(n_jobs=-1) result for R2 is -0.0028
2025-04-19 19:46:35,118:INFO:LinearRegression(n_jobs=-1) is best model
2025-04-19 19:46:35,118:INFO:choose_better completed
2025-04-19 19:46:35,119:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-19 19:46:35,141:INFO:_master_model_container: 24
2025-04-19 19:46:35,141:INFO:_display_container: 5
2025-04-19 19:46:35,141:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:46:35,142:INFO:tune_model() successfully completed......................................
2025-04-19 19:46:35,414:INFO:Initializing blend_models()
2025-04-19 19:46:35,414:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator_list=[HuberRegressor(), BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05), LinearRegression(n_jobs=-1)], fold=None, round=4, choose_better=False, optimize=R2, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 19:46:35,414:INFO:Checking exceptions
2025-04-19 19:46:35,418:INFO:Importing libraries
2025-04-19 19:46:35,418:INFO:Copying training dataset
2025-04-19 19:46:35,419:INFO:Getting model names
2025-04-19 19:46:35,419:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:35,424:INFO:Initializing create_model()
2025-04-19 19:46:35,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A2600DD000>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:46:35,424:INFO:Checking exceptions
2025-04-19 19:46:35,424:INFO:Importing libraries
2025-04-19 19:46:35,424:INFO:Copying training dataset
2025-04-19 19:46:35,429:INFO:Defining folds
2025-04-19 19:46:35,430:INFO:Declaring metric variables
2025-04-19 19:46:35,430:INFO:Importing untrained model
2025-04-19 19:46:35,430:INFO:Declaring custom model
2025-04-19 19:46:35,431:INFO:Voting Regressor Imported successfully
2025-04-19 19:46:35,431:INFO:Starting cross validation
2025-04-19 19:46:35,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:36,872:INFO:Calculating mean and std
2025-04-19 19:46:36,872:INFO:Creating metrics dataframe
2025-04-19 19:46:36,876:INFO:Finalizing model
2025-04-19 19:46:37,271:INFO:Uploading results into container
2025-04-19 19:46:37,271:INFO:Uploading model into container now
2025-04-19 19:46:37,272:INFO:_master_model_container: 25
2025-04-19 19:46:37,272:INFO:_display_container: 6
2025-04-19 19:46:37,275:INFO:VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1)
2025-04-19 19:46:37,275:INFO:create_model() successfully completed......................................
2025-04-19 19:46:37,431:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:37,445:INFO:_master_model_container: 25
2025-04-19 19:46:37,445:INFO:_display_container: 6
2025-04-19 19:46:37,448:INFO:VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1)
2025-04-19 19:46:37,448:INFO:blend_models() successfully completed......................................
2025-04-19 19:46:37,595:INFO:Initializing stack_models()
2025-04-19 19:46:37,595:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator_list=[HuberRegressor(), BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05), LinearRegression(n_jobs=-1)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 19:46:37,595:INFO:Checking exceptions
2025-04-19 19:46:37,597:INFO:Defining meta model
2025-04-19 19:46:37,599:INFO:Getting model names
2025-04-19 19:46:37,600:INFO:[('Huber Regressor', HuberRegressor()), ('Bayesian Ridge', BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05)), ('Linear Regression', LinearRegression(n_jobs=-1))]
2025-04-19 19:46:37,601:INFO:SubProcess create_model() called ==================================
2025-04-19 19:46:37,608:INFO:Initializing create_model()
2025-04-19 19:46:37,608:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A26007B580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:46:37,608:INFO:Checking exceptions
2025-04-19 19:46:37,608:INFO:Importing libraries
2025-04-19 19:46:37,608:INFO:Copying training dataset
2025-04-19 19:46:37,616:INFO:Defining folds
2025-04-19 19:46:37,616:INFO:Declaring metric variables
2025-04-19 19:46:37,617:INFO:Importing untrained model
2025-04-19 19:46:37,617:INFO:Declaring custom model
2025-04-19 19:46:37,622:INFO:Stacking Regressor Imported successfully
2025-04-19 19:46:37,622:INFO:Starting cross validation
2025-04-19 19:46:37,641:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:46:39,328:INFO:Calculating mean and std
2025-04-19 19:46:39,330:INFO:Creating metrics dataframe
2025-04-19 19:46:39,333:INFO:Finalizing model
2025-04-19 19:46:39,736:INFO:Uploading results into container
2025-04-19 19:46:39,737:INFO:Uploading model into container now
2025-04-19 19:46:39,737:INFO:_master_model_container: 26
2025-04-19 19:46:39,737:INFO:_display_container: 7
2025-04-19 19:46:39,741:INFO:StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 19:46:39,741:INFO:create_model() successfully completed......................................
2025-04-19 19:46:39,882:INFO:SubProcess create_model() end ==================================
2025-04-19 19:46:39,899:INFO:_master_model_container: 26
2025-04-19 19:46:39,900:INFO:_display_container: 7
2025-04-19 19:46:39,904:INFO:StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 19:46:39,904:INFO:stack_models() successfully completed......................................
2025-04-19 19:46:40,081:INFO:Initializing save_model()
2025-04-19 19:46:40,081:INFO:save_model(model=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), model_name=models/model_1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:46:40,081:INFO:Adding model into prep_pipe
2025-04-19 19:46:40,174:INFO:models/model_1.pkl saved in current working directory
2025-04-19 19:46:40,208:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 VotingRegressor(estimators=[('Huber Regressor',
                                              HuberRegressor()),
                                             ('Bayesian Ridge',
                                              BayesianRidge(alpha_1=0.005,
                                                            alpha_2=0.01,
                                                            lambda_1=0.0005,
                                                            lambda_2=0.05)),
                                             ('Linear Regression',
                                              LinearRegression(n_jobs=-1))],
                                 n_jobs=-1))])
2025-04-19 19:46:40,208:INFO:save_model() successfully completed......................................
2025-04-19 19:46:40,424:INFO:Initializing plot_model()
2025-04-19 19:46:40,425:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,425:INFO:Checking exceptions
2025-04-19 19:46:40,427:INFO:Initializing plot_model()
2025-04-19 19:46:40,427:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,427:INFO:Checking exceptions
2025-04-19 19:46:40,432:INFO:Initializing plot_model()
2025-04-19 19:46:40,432:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,432:INFO:Checking exceptions
2025-04-19 19:46:40,435:INFO:Initializing plot_model()
2025-04-19 19:46:40,435:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                           lambda_1=0.0005, lambda_2=0.05)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,435:INFO:Checking exceptions
2025-04-19 19:46:40,456:INFO:Initializing save_model()
2025-04-19 19:46:40,456:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), model_name=models/model_2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:46:40,456:INFO:Adding model into prep_pipe
2025-04-19 19:46:40,532:INFO:models/model_2.pkl saved in current working directory
2025-04-19 19:46:40,559:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Huber Regressor',
                                                HuberRegressor()),
                                               ('Bayesian Ridge',
                                                BayesianRidge(alpha_1=0.005,
                                                              alpha_2=0.01,
                                                              lambda_1=0.0005,
                                                              lambda_2=0.05)),
                                               ('Linear Regression',
                                                LinearRegression(n_jobs=-1))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1, passthrough=True))])
2025-04-19 19:46:40,559:INFO:save_model() successfully completed......................................
2025-04-19 19:46:40,809:INFO:Initializing plot_model()
2025-04-19 19:46:40,810:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,810:INFO:Checking exceptions
2025-04-19 19:46:40,813:INFO:Initializing plot_model()
2025-04-19 19:46:40,813:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,813:INFO:Checking exceptions
2025-04-19 19:46:40,819:INFO:Initializing plot_model()
2025-04-19 19:46:40,819:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,819:INFO:Checking exceptions
2025-04-19 19:46:40,827:INFO:Initializing plot_model()
2025-04-19 19:46:40,827:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.005, alpha_2=0.01,
                                             lambda_1=0.0005, lambda_2=0.05)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:40,827:INFO:Checking exceptions
2025-04-19 19:46:40,845:INFO:Initializing save_model()
2025-04-19 19:46:40,845:INFO:save_model(model=HuberRegressor(), model_name=models/model_3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:46:40,845:INFO:Adding model into prep_pipe
2025-04-19 19:46:40,918:INFO:models/model_3.pkl saved in current working directory
2025-04-19 19:46:40,931:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', HuberRegressor())])
2025-04-19 19:46:40,931:INFO:save_model() successfully completed......................................
2025-04-19 19:46:41,177:INFO:Initializing plot_model()
2025-04-19 19:46:41,177:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,177:INFO:Checking exceptions
2025-04-19 19:46:41,179:INFO:Initializing plot_model()
2025-04-19 19:46:41,179:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,179:INFO:Checking exceptions
2025-04-19 19:46:41,179:INFO:Initializing plot_model()
2025-04-19 19:46:41,180:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,180:INFO:Checking exceptions
2025-04-19 19:46:41,180:INFO:Initializing plot_model()
2025-04-19 19:46:41,181:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,181:INFO:Checking exceptions
2025-04-19 19:46:41,193:INFO:Initializing save_model()
2025-04-19 19:46:41,193:INFO:save_model(model=BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05), model_name=models/model_4, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:46:41,193:INFO:Adding model into prep_pipe
2025-04-19 19:46:41,272:INFO:models/model_4.pkl saved in current working directory
2025-04-19 19:46:41,289:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005,
                               lambda_2=0.05))])
2025-04-19 19:46:41,289:INFO:save_model() successfully completed......................................
2025-04-19 19:46:41,518:INFO:Initializing plot_model()
2025-04-19 19:46:41,518:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,518:INFO:Checking exceptions
2025-04-19 19:46:41,519:INFO:Initializing plot_model()
2025-04-19 19:46:41,519:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,519:INFO:Checking exceptions
2025-04-19 19:46:41,519:INFO:Initializing plot_model()
2025-04-19 19:46:41,520:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,520:INFO:Checking exceptions
2025-04-19 19:46:41,520:INFO:Initializing plot_model()
2025-04-19 19:46:41,520:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(alpha_1=0.005, alpha_2=0.01, lambda_1=0.0005, lambda_2=0.05), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,520:INFO:Checking exceptions
2025-04-19 19:46:41,538:INFO:Initializing save_model()
2025-04-19 19:46:41,539:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=models/model_5, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:46:41,539:INFO:Adding model into prep_pipe
2025-04-19 19:46:41,624:INFO:models/model_5.pkl saved in current working directory
2025-04-19 19:46:41,644:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_21', 'feature_19',
                                             'feature_49', 'feature_11',
                                             'feature_43'],
                                    transformer=Sim...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2025-04-19 19:46:41,644:INFO:save_model() successfully completed......................................
2025-04-19 19:46:41,891:INFO:Initializing plot_model()
2025-04-19 19:46:41,891:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,892:INFO:Checking exceptions
2025-04-19 19:46:41,892:INFO:Initializing plot_model()
2025-04-19 19:46:41,892:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,892:INFO:Checking exceptions
2025-04-19 19:46:41,892:INFO:Initializing plot_model()
2025-04-19 19:46:41,892:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,892:INFO:Checking exceptions
2025-04-19 19:46:41,893:INFO:Initializing plot_model()
2025-04-19 19:46:41,893:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001A26BEBB220>, system=True)
2025-04-19 19:46:41,893:INFO:Checking exceptions
2025-04-19 19:56:45,605:WARNING:D:\College\agn\venv_py310\lib\site-packages\pydantic\_internal\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
  warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

2025-04-19 19:56:45,722:WARNING:D:\College\agn\venv_py310\lib\site-packages\yellowbrick\style\colors.py:35: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  mpl_ge_150 = LooseVersion(mpl.__version__) >= "1.5.0"

2025-04-19 19:56:45,741:WARNING:D:\College\agn\venv_py310\lib\site-packages\setuptools\_distutils\version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  other = LooseVersion(other)

2025-04-19 19:56:45,744:WARNING:D:\College\agn\venv_py310\lib\site-packages\yellowbrick\style\rcmod.py:31: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  mpl_ge_150 = LooseVersion(mpl.__version__) >= "1.5.0"

2025-04-19 19:56:45,744:WARNING:D:\College\agn\venv_py310\lib\site-packages\setuptools\_distutils\version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  other = LooseVersion(other)

2025-04-19 19:56:46,054:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,056:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,056:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,057:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,057:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,058:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,059:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,060:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,060:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,060:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,061:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,061:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,062:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,063:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,063:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,064:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,064:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,065:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,065:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,067:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,068:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,069:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,069:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,071:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,072:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,072:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,073:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,073:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,074:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,074:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,075:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,075:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,076:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,076:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,077:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,077:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,078:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,078:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,079:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,080:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,080:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,081:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,081:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,082:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,083:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,083:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,084:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,087:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,089:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,089:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,090:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,091:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,092:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,092:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,093:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,093:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,094:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,094:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,094:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,095:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,095:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,097:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,097:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,098:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,098:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,099:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,100:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,100:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,100:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,101:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,101:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,102:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,103:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,105:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,106:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,106:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,107:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,108:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,108:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,109:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,109:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,109:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,109:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,111:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,112:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,112:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,113:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,114:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,115:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,115:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,116:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,116:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,117:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,117:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,117:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,118:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,119:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,119:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,120:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,121:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,122:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,122:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,123:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,123:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,123:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,123:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,124:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,124:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,125:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,125:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,126:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,127:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,127:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,127:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,128:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,128:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,129:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,130:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,131:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,131:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,132:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,132:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,133:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,133:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,134:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,134:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,135:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,135:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,136:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,137:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,137:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,138:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,138:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,139:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,139:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,139:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,140:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,140:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,141:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,141:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,141:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,142:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,143:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,143:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,144:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,144:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,145:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,145:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,146:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,146:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,147:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,147:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,148:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,148:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,149:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,149:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,150:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,150:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,151:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,151:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,152:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,153:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,153:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,154:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,154:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,154:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,156:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,156:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,157:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,157:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,157:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,158:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,159:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,159:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,159:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,160:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,160:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,161:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,161:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,163:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,163:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,164:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,165:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,166:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,166:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,167:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,167:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,168:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,169:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,172:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,173:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,175:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,176:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,177:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,178:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,179:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,179:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,181:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,181:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,182:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,182:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,185:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,185:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,186:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,187:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,188:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,189:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,191:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,191:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,192:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\utils\_dependencies.py:60: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  ver = LooseVersion(dist.metadata["Version"])

2025-04-19 19:56:46,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:56:46,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:56:46,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:56:46,193:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 19:56:46,323:WARNING:D:\College\agn\venv_py310\lib\site-packages\scikitplot\plotters.py:33: DeprecationWarning: This module was deprecated in version 0.3.0 and its functions are spread throughout different modules. Please check the documentation and update your function calls as soon as possible. This module will be removed in 0.4.0
  warnings.warn("This module was deprecated in version 0.3.0 and its functions "

2025-04-19 19:56:47,490:INFO:PyCaret RegressionExperiment
2025-04-19 19:56:47,490:INFO:Logging name: agn_modeling
2025-04-19 19:56:47,490:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-19 19:56:47,490:INFO:version 3.0.4
2025-04-19 19:56:47,490:INFO:Initializing setup()
2025-04-19 19:56:47,490:INFO:self.USI: d0cb
2025-04-19 19:56:47,491:INFO:self._variable_keys: {'exp_id', 'y_test', 'log_plots_param', 'transform_target_param', 'USI', '_available_plots', 'target_param', 'exp_name_log', 'pipeline', 'X_train', 'gpu_param', 'n_jobs_param', 'y', 'memory', 'X', 'seed', 'logging_param', '_ml_usecase', 'data', 'y_train', 'fold_groups_param', 'idx', 'fold_generator', 'fold_shuffle_param', 'X_test', 'gpu_n_jobs_param', 'html_param'}
2025-04-19 19:56:47,491:INFO:Checking environment
2025-04-19 19:56:47,491:INFO:python_version: 3.10.9
2025-04-19 19:56:47,491:INFO:python_build: ('tags/v3.10.9:1dd9be6', 'Dec  6 2022 20:01:21')
2025-04-19 19:56:47,491:INFO:machine: AMD64
2025-04-19 19:56:47,504:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-19 19:56:47,508:INFO:Memory: svmem(total=16952647680, available=4245479424, percent=75.0, used=12707168256, free=4245479424)
2025-04-19 19:56:47,508:INFO:Physical Core: 4
2025-04-19 19:56:47,509:INFO:Logical Core: 8
2025-04-19 19:56:47,509:INFO:Checking libraries
2025-04-19 19:56:47,509:INFO:System:
2025-04-19 19:56:47,509:INFO:    python: 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 20:01:21) [MSC v.1934 64 bit (AMD64)]
2025-04-19 19:56:47,509:INFO:executable: D:\College\agn\venv_py310\Scripts\python.exe
2025-04-19 19:56:47,509:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-19 19:56:47,509:INFO:PyCaret required dependencies:
2025-04-19 19:56:47,538:INFO:                 pip: 25.0.1
2025-04-19 19:56:47,538:INFO:          setuptools: 65.5.0
2025-04-19 19:56:47,538:INFO:             pycaret: 3.0.4
2025-04-19 19:56:47,538:INFO:             IPython: 8.35.0
2025-04-19 19:56:47,538:INFO:          ipywidgets: 8.1.6
2025-04-19 19:56:47,538:INFO:                tqdm: 4.67.1
2025-04-19 19:56:47,538:INFO:               numpy: 1.23.5
2025-04-19 19:56:47,538:INFO:              pandas: 1.5.3
2025-04-19 19:56:47,538:INFO:              jinja2: 3.1.6
2025-04-19 19:56:47,538:INFO:               scipy: 1.10.1
2025-04-19 19:56:47,539:INFO:              joblib: 1.2.0
2025-04-19 19:56:47,539:INFO:             sklearn: 1.2.2
2025-04-19 19:56:47,539:INFO:                pyod: 2.0.4
2025-04-19 19:56:47,539:INFO:            imblearn: 0.12.4
2025-04-19 19:56:47,539:INFO:   category_encoders: 2.7.0
2025-04-19 19:56:47,539:INFO:            lightgbm: 4.6.0
2025-04-19 19:56:47,539:INFO:               numba: 0.60.0
2025-04-19 19:56:47,539:INFO:            requests: 2.32.3
2025-04-19 19:56:47,539:INFO:          matplotlib: 3.7.1
2025-04-19 19:56:47,539:INFO:          scikitplot: 0.3.7
2025-04-19 19:56:47,539:INFO:         yellowbrick: 1.5
2025-04-19 19:56:47,539:INFO:              plotly: 5.24.1
2025-04-19 19:56:47,539:INFO:    plotly-resampler: Not installed
2025-04-19 19:56:47,539:INFO:             kaleido: 0.2.1
2025-04-19 19:56:47,539:INFO:           schemdraw: 0.15
2025-04-19 19:56:47,539:INFO:         statsmodels: 0.14.4
2025-04-19 19:56:47,539:INFO:              sktime: 0.21.1
2025-04-19 19:56:47,539:INFO:               tbats: 1.1.3
2025-04-19 19:56:47,539:INFO:            pmdarima: 2.0.4
2025-04-19 19:56:47,539:INFO:              psutil: 7.0.0
2025-04-19 19:56:47,539:INFO:          markupsafe: 3.0.2
2025-04-19 19:56:47,539:INFO:             pickle5: Not installed
2025-04-19 19:56:47,539:INFO:         cloudpickle: 3.1.1
2025-04-19 19:56:47,539:INFO:         deprecation: 2.1.0
2025-04-19 19:56:47,539:INFO:              xxhash: 3.5.0
2025-04-19 19:56:47,539:INFO:           wurlitzer: Not installed
2025-04-19 19:56:47,539:INFO:PyCaret optional dependencies:
2025-04-19 19:56:47,881:INFO:                shap: Not installed
2025-04-19 19:56:47,881:INFO:           interpret: Not installed
2025-04-19 19:56:47,882:INFO:                umap: Not installed
2025-04-19 19:56:47,882:INFO:    pandas_profiling: Not installed
2025-04-19 19:56:47,882:INFO:  explainerdashboard: Not installed
2025-04-19 19:56:47,882:INFO:             autoviz: Not installed
2025-04-19 19:56:47,882:INFO:           fairlearn: Not installed
2025-04-19 19:56:47,882:INFO:          deepchecks: Not installed
2025-04-19 19:56:47,882:INFO:             xgboost: Not installed
2025-04-19 19:56:47,882:INFO:            catboost: Not installed
2025-04-19 19:56:47,882:INFO:              kmodes: Not installed
2025-04-19 19:56:47,882:INFO:             mlxtend: Not installed
2025-04-19 19:56:47,882:INFO:       statsforecast: Not installed
2025-04-19 19:56:47,882:INFO:        tune_sklearn: Not installed
2025-04-19 19:56:47,882:INFO:                 ray: Not installed
2025-04-19 19:56:47,882:INFO:            hyperopt: Not installed
2025-04-19 19:56:47,882:INFO:              optuna: Not installed
2025-04-19 19:56:47,882:INFO:               skopt: Not installed
2025-04-19 19:56:47,882:INFO:              mlflow: 2.21.3
2025-04-19 19:56:47,882:INFO:              gradio: Not installed
2025-04-19 19:56:47,882:INFO:             fastapi: 0.115.12
2025-04-19 19:56:47,883:INFO:             uvicorn: 0.34.2
2025-04-19 19:56:47,883:INFO:              m2cgen: Not installed
2025-04-19 19:56:47,883:INFO:           evidently: Not installed
2025-04-19 19:56:47,883:INFO:               fugue: Not installed
2025-04-19 19:56:47,883:INFO:           streamlit: Not installed
2025-04-19 19:56:47,883:INFO:             prophet: Not installed
2025-04-19 19:56:47,883:INFO:None
2025-04-19 19:56:47,883:INFO:Set up data.
2025-04-19 19:56:47,899:INFO:Set up train/test split.
2025-04-19 19:56:47,901:INFO:Set up index.
2025-04-19 19:56:47,901:INFO:Set up folding strategy.
2025-04-19 19:56:47,901:INFO:Assigning column types.
2025-04-19 19:56:47,905:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-19 19:56:47,905:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 19:56:47,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:56:47,914:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,061:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,063:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,070:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,075:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,138:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,189:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,190:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-19 19:56:48,194:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,200:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,321:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,328:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,336:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,395:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,443:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,443:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-19 19:56:48,453:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,516:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,576:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,633:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,675:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,677:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-19 19:56:48,746:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:56:48,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:48,901:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-19 19:56:48,959:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:49,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:56:49,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,103:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-19 19:56:49,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,382:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:49,384:INFO:Preparing preprocessing pipeline...
2025-04-19 19:56:49,384:INFO:Set up target transformation.
2025-04-19 19:56:49,384:INFO:Set up simple imputation.
2025-04-19 19:56:49,384:INFO:Set up removing multicollinearity.
2025-04-19 19:56:49,384:INFO:Set up removing outliers.
2025-04-19 19:56:49,384:INFO:Set up feature normalization.
2025-04-19 19:56:49,666:INFO:Finished creating preprocessing pipeline.
2025-04-19 19:56:49,677:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-04-19 19:56:49,677:INFO:Creating final display dataframe.
2025-04-19 19:56:50,216:INFO:Setup _display_container:                     Description         Value
0                    Session id            42
1                        Target        target
2                   Target type    Regression
3           Original data shape      (100, 4)
4        Transformed data shape       (96, 4)
5   Transformed train set shape       (66, 4)
6    Transformed test set shape       (30, 4)
7              Numeric features             3
8                    Preprocess          True
9               Imputation type        simple
10           Numeric imputation          mean
11       Categorical imputation          mode
12     Remove multicollinearity          True
13  Multicollinearity threshold           0.9
14              Remove outliers          True
15           Outliers threshold          0.05
16                    Normalize          True
17             Normalize method        zscore
18             Transform target          True
19      Transform target method   yeo-johnson
20               Fold Generator         KFold
21                  Fold Number            10
22                     CPU Jobs            -1
23                      Use GPU         False
24               Log Experiment         False
25              Experiment Name  agn_modeling
26                          USI          d0cb
2025-04-19 19:56:50,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:50,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:50,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:50,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:56:50,411:INFO:setup() successfully completed in 3.04s...............
2025-04-19 19:56:50,411:INFO:Initializing compare_models()
2025-04-19 19:56:50,411:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, 'include': None, 'exclude': ['catboost'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=['catboost'])
2025-04-19 19:56:50,411:INFO:Checking exceptions
2025-04-19 19:56:50,413:INFO:Preparing display monitor
2025-04-19 19:56:50,416:INFO:Initializing Linear Regression
2025-04-19 19:56:50,417:INFO:Total runtime is 8.936723073323568e-06 minutes
2025-04-19 19:56:50,417:INFO:SubProcess create_model() called ==================================
2025-04-19 19:56:50,417:INFO:Initializing create_model()
2025-04-19 19:56:50,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:56:50,417:INFO:Checking exceptions
2025-04-19 19:56:50,417:INFO:Importing libraries
2025-04-19 19:56:50,417:INFO:Copying training dataset
2025-04-19 19:56:50,420:INFO:Defining folds
2025-04-19 19:56:50,420:INFO:Declaring metric variables
2025-04-19 19:56:50,421:INFO:Importing untrained model
2025-04-19 19:56:50,421:INFO:Linear Regression Imported successfully
2025-04-19 19:56:50,421:INFO:Starting cross validation
2025-04-19 19:56:50,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:56:54,985:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,026:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,089:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,100:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,117:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,156:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,218:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,402:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,792:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:55,804:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:56:56,272:INFO:Calculating mean and std
2025-04-19 19:56:56,273:INFO:Creating metrics dataframe
2025-04-19 19:56:56,386:INFO:Uploading results into container
2025-04-19 19:56:56,387:INFO:Uploading model into container now
2025-04-19 19:56:56,387:INFO:_master_model_container: 1
2025-04-19 19:56:56,387:INFO:_display_container: 2
2025-04-19 19:56:56,388:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:56:56,388:INFO:create_model() successfully completed......................................
2025-04-19 19:56:56,499:INFO:SubProcess create_model() end ==================================
2025-04-19 19:56:56,499:INFO:Creating metrics dataframe
2025-04-19 19:56:56,502:INFO:Initializing Lasso Regression
2025-04-19 19:56:56,502:INFO:Total runtime is 0.10143541892369588 minutes
2025-04-19 19:56:56,502:INFO:SubProcess create_model() called ==================================
2025-04-19 19:56:56,502:INFO:Initializing create_model()
2025-04-19 19:56:56,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:56:56,503:INFO:Checking exceptions
2025-04-19 19:56:56,503:INFO:Importing libraries
2025-04-19 19:56:56,503:INFO:Copying training dataset
2025-04-19 19:56:56,504:INFO:Defining folds
2025-04-19 19:56:56,504:INFO:Declaring metric variables
2025-04-19 19:56:56,506:INFO:Importing untrained model
2025-04-19 19:56:56,506:INFO:Lasso Regression Imported successfully
2025-04-19 19:56:56,506:INFO:Starting cross validation
2025-04-19 19:56:56,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:56:57,372:INFO:Calculating mean and std
2025-04-19 19:56:57,372:INFO:Creating metrics dataframe
2025-04-19 19:56:57,482:INFO:Uploading results into container
2025-04-19 19:56:57,483:INFO:Uploading model into container now
2025-04-19 19:56:57,483:INFO:_master_model_container: 2
2025-04-19 19:56:57,483:INFO:_display_container: 2
2025-04-19 19:56:57,484:INFO:Lasso(random_state=42)
2025-04-19 19:56:57,484:INFO:create_model() successfully completed......................................
2025-04-19 19:56:57,588:INFO:SubProcess create_model() end ==================================
2025-04-19 19:56:57,588:INFO:Creating metrics dataframe
2025-04-19 19:56:57,591:INFO:Initializing Ridge Regression
2025-04-19 19:56:57,591:INFO:Total runtime is 0.11959015925725301 minutes
2025-04-19 19:56:57,591:INFO:SubProcess create_model() called ==================================
2025-04-19 19:56:57,591:INFO:Initializing create_model()
2025-04-19 19:56:57,591:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:56:57,591:INFO:Checking exceptions
2025-04-19 19:56:57,591:INFO:Importing libraries
2025-04-19 19:56:57,591:INFO:Copying training dataset
2025-04-19 19:56:57,593:INFO:Defining folds
2025-04-19 19:56:57,593:INFO:Declaring metric variables
2025-04-19 19:56:57,593:INFO:Importing untrained model
2025-04-19 19:56:57,595:INFO:Ridge Regression Imported successfully
2025-04-19 19:56:57,595:INFO:Starting cross validation
2025-04-19 19:56:57,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:56:58,442:INFO:Calculating mean and std
2025-04-19 19:56:58,442:INFO:Creating metrics dataframe
2025-04-19 19:56:58,547:INFO:Uploading results into container
2025-04-19 19:56:58,548:INFO:Uploading model into container now
2025-04-19 19:56:58,548:INFO:_master_model_container: 3
2025-04-19 19:56:58,548:INFO:_display_container: 2
2025-04-19 19:56:58,549:INFO:Ridge(random_state=42)
2025-04-19 19:56:58,549:INFO:create_model() successfully completed......................................
2025-04-19 19:56:58,649:INFO:SubProcess create_model() end ==================================
2025-04-19 19:56:58,649:INFO:Creating metrics dataframe
2025-04-19 19:56:58,653:INFO:Initializing Elastic Net
2025-04-19 19:56:58,653:INFO:Total runtime is 0.13728763659795126 minutes
2025-04-19 19:56:58,653:INFO:SubProcess create_model() called ==================================
2025-04-19 19:56:58,654:INFO:Initializing create_model()
2025-04-19 19:56:58,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:56:58,654:INFO:Checking exceptions
2025-04-19 19:56:58,654:INFO:Importing libraries
2025-04-19 19:56:58,654:INFO:Copying training dataset
2025-04-19 19:56:58,667:INFO:Defining folds
2025-04-19 19:56:58,667:INFO:Declaring metric variables
2025-04-19 19:56:58,667:INFO:Importing untrained model
2025-04-19 19:56:58,667:INFO:Elastic Net Imported successfully
2025-04-19 19:56:58,667:INFO:Starting cross validation
2025-04-19 19:56:58,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:56:59,493:INFO:Calculating mean and std
2025-04-19 19:56:59,493:INFO:Creating metrics dataframe
2025-04-19 19:56:59,594:INFO:Uploading results into container
2025-04-19 19:56:59,594:INFO:Uploading model into container now
2025-04-19 19:56:59,595:INFO:_master_model_container: 4
2025-04-19 19:56:59,595:INFO:_display_container: 2
2025-04-19 19:56:59,595:INFO:ElasticNet(random_state=42)
2025-04-19 19:56:59,595:INFO:create_model() successfully completed......................................
2025-04-19 19:56:59,688:INFO:SubProcess create_model() end ==================================
2025-04-19 19:56:59,688:INFO:Creating metrics dataframe
2025-04-19 19:56:59,693:INFO:Initializing Least Angle Regression
2025-04-19 19:56:59,693:INFO:Total runtime is 0.15460811853408815 minutes
2025-04-19 19:56:59,694:INFO:SubProcess create_model() called ==================================
2025-04-19 19:56:59,694:INFO:Initializing create_model()
2025-04-19 19:56:59,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:56:59,694:INFO:Checking exceptions
2025-04-19 19:56:59,694:INFO:Importing libraries
2025-04-19 19:56:59,694:INFO:Copying training dataset
2025-04-19 19:56:59,696:INFO:Defining folds
2025-04-19 19:56:59,696:INFO:Declaring metric variables
2025-04-19 19:56:59,696:INFO:Importing untrained model
2025-04-19 19:56:59,696:INFO:Least Angle Regression Imported successfully
2025-04-19 19:56:59,696:INFO:Starting cross validation
2025-04-19 19:56:59,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:00,530:INFO:Calculating mean and std
2025-04-19 19:57:00,531:INFO:Creating metrics dataframe
2025-04-19 19:57:00,633:INFO:Uploading results into container
2025-04-19 19:57:00,633:INFO:Uploading model into container now
2025-04-19 19:57:00,634:INFO:_master_model_container: 5
2025-04-19 19:57:00,634:INFO:_display_container: 2
2025-04-19 19:57:00,634:INFO:Lars(random_state=42)
2025-04-19 19:57:00,634:INFO:create_model() successfully completed......................................
2025-04-19 19:57:00,727:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:00,727:INFO:Creating metrics dataframe
2025-04-19 19:57:00,731:INFO:Initializing Lasso Least Angle Regression
2025-04-19 19:57:00,731:INFO:Total runtime is 0.17192238966623943 minutes
2025-04-19 19:57:00,731:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:00,731:INFO:Initializing create_model()
2025-04-19 19:57:00,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:00,732:INFO:Checking exceptions
2025-04-19 19:57:00,732:INFO:Importing libraries
2025-04-19 19:57:00,732:INFO:Copying training dataset
2025-04-19 19:57:00,734:INFO:Defining folds
2025-04-19 19:57:00,734:INFO:Declaring metric variables
2025-04-19 19:57:00,734:INFO:Importing untrained model
2025-04-19 19:57:00,734:INFO:Lasso Least Angle Regression Imported successfully
2025-04-19 19:57:00,734:INFO:Starting cross validation
2025-04-19 19:57:00,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:01,547:INFO:Calculating mean and std
2025-04-19 19:57:01,547:INFO:Creating metrics dataframe
2025-04-19 19:57:01,648:INFO:Uploading results into container
2025-04-19 19:57:01,650:INFO:Uploading model into container now
2025-04-19 19:57:01,651:INFO:_master_model_container: 6
2025-04-19 19:57:01,651:INFO:_display_container: 2
2025-04-19 19:57:01,651:INFO:LassoLars(random_state=42)
2025-04-19 19:57:01,651:INFO:create_model() successfully completed......................................
2025-04-19 19:57:01,747:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:01,747:INFO:Creating metrics dataframe
2025-04-19 19:57:01,750:INFO:Initializing Orthogonal Matching Pursuit
2025-04-19 19:57:01,750:INFO:Total runtime is 0.18889731963475548 minutes
2025-04-19 19:57:01,751:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:01,751:INFO:Initializing create_model()
2025-04-19 19:57:01,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:01,751:INFO:Checking exceptions
2025-04-19 19:57:01,751:INFO:Importing libraries
2025-04-19 19:57:01,751:INFO:Copying training dataset
2025-04-19 19:57:01,753:INFO:Defining folds
2025-04-19 19:57:01,753:INFO:Declaring metric variables
2025-04-19 19:57:01,753:INFO:Importing untrained model
2025-04-19 19:57:01,754:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 19:57:01,754:INFO:Starting cross validation
2025-04-19 19:57:01,759:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:02,575:INFO:Calculating mean and std
2025-04-19 19:57:02,575:INFO:Creating metrics dataframe
2025-04-19 19:57:02,679:INFO:Uploading results into container
2025-04-19 19:57:02,679:INFO:Uploading model into container now
2025-04-19 19:57:02,679:INFO:_master_model_container: 7
2025-04-19 19:57:02,679:INFO:_display_container: 2
2025-04-19 19:57:02,679:INFO:OrthogonalMatchingPursuit()
2025-04-19 19:57:02,681:INFO:create_model() successfully completed......................................
2025-04-19 19:57:02,776:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:02,776:INFO:Creating metrics dataframe
2025-04-19 19:57:02,781:INFO:Initializing Bayesian Ridge
2025-04-19 19:57:02,781:INFO:Total runtime is 0.20607636769612633 minutes
2025-04-19 19:57:02,781:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:02,781:INFO:Initializing create_model()
2025-04-19 19:57:02,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:02,781:INFO:Checking exceptions
2025-04-19 19:57:02,781:INFO:Importing libraries
2025-04-19 19:57:02,781:INFO:Copying training dataset
2025-04-19 19:57:02,783:INFO:Defining folds
2025-04-19 19:57:02,783:INFO:Declaring metric variables
2025-04-19 19:57:02,783:INFO:Importing untrained model
2025-04-19 19:57:02,783:INFO:Bayesian Ridge Imported successfully
2025-04-19 19:57:02,784:INFO:Starting cross validation
2025-04-19 19:57:02,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:03,619:INFO:Calculating mean and std
2025-04-19 19:57:03,620:INFO:Creating metrics dataframe
2025-04-19 19:57:03,727:INFO:Uploading results into container
2025-04-19 19:57:03,727:INFO:Uploading model into container now
2025-04-19 19:57:03,728:INFO:_master_model_container: 8
2025-04-19 19:57:03,728:INFO:_display_container: 2
2025-04-19 19:57:03,728:INFO:BayesianRidge()
2025-04-19 19:57:03,728:INFO:create_model() successfully completed......................................
2025-04-19 19:57:03,824:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:03,824:INFO:Creating metrics dataframe
2025-04-19 19:57:03,827:INFO:Initializing Passive Aggressive Regressor
2025-04-19 19:57:03,827:INFO:Total runtime is 0.2235134363174439 minutes
2025-04-19 19:57:03,828:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:03,828:INFO:Initializing create_model()
2025-04-19 19:57:03,828:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:03,828:INFO:Checking exceptions
2025-04-19 19:57:03,828:INFO:Importing libraries
2025-04-19 19:57:03,828:INFO:Copying training dataset
2025-04-19 19:57:03,830:INFO:Defining folds
2025-04-19 19:57:03,830:INFO:Declaring metric variables
2025-04-19 19:57:03,831:INFO:Importing untrained model
2025-04-19 19:57:03,831:INFO:Passive Aggressive Regressor Imported successfully
2025-04-19 19:57:03,831:INFO:Starting cross validation
2025-04-19 19:57:03,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:04,676:INFO:Calculating mean and std
2025-04-19 19:57:04,676:INFO:Creating metrics dataframe
2025-04-19 19:57:04,777:INFO:Uploading results into container
2025-04-19 19:57:04,778:INFO:Uploading model into container now
2025-04-19 19:57:04,778:INFO:_master_model_container: 9
2025-04-19 19:57:04,778:INFO:_display_container: 2
2025-04-19 19:57:04,778:INFO:PassiveAggressiveRegressor(random_state=42)
2025-04-19 19:57:04,778:INFO:create_model() successfully completed......................................
2025-04-19 19:57:04,874:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:04,874:INFO:Creating metrics dataframe
2025-04-19 19:57:04,879:INFO:Initializing Huber Regressor
2025-04-19 19:57:04,879:INFO:Total runtime is 0.24105054537455245 minutes
2025-04-19 19:57:04,879:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:04,879:INFO:Initializing create_model()
2025-04-19 19:57:04,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:04,879:INFO:Checking exceptions
2025-04-19 19:57:04,879:INFO:Importing libraries
2025-04-19 19:57:04,879:INFO:Copying training dataset
2025-04-19 19:57:04,883:INFO:Defining folds
2025-04-19 19:57:04,883:INFO:Declaring metric variables
2025-04-19 19:57:04,883:INFO:Importing untrained model
2025-04-19 19:57:04,883:INFO:Huber Regressor Imported successfully
2025-04-19 19:57:04,883:INFO:Starting cross validation
2025-04-19 19:57:04,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:05,799:INFO:Calculating mean and std
2025-04-19 19:57:05,799:INFO:Creating metrics dataframe
2025-04-19 19:57:05,920:INFO:Uploading results into container
2025-04-19 19:57:05,920:INFO:Uploading model into container now
2025-04-19 19:57:05,921:INFO:_master_model_container: 10
2025-04-19 19:57:05,921:INFO:_display_container: 2
2025-04-19 19:57:05,921:INFO:HuberRegressor()
2025-04-19 19:57:05,921:INFO:create_model() successfully completed......................................
2025-04-19 19:57:06,019:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:06,019:INFO:Creating metrics dataframe
2025-04-19 19:57:06,023:INFO:Initializing K Neighbors Regressor
2025-04-19 19:57:06,023:INFO:Total runtime is 0.2601223746935527 minutes
2025-04-19 19:57:06,023:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:06,024:INFO:Initializing create_model()
2025-04-19 19:57:06,024:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:06,024:INFO:Checking exceptions
2025-04-19 19:57:06,024:INFO:Importing libraries
2025-04-19 19:57:06,024:INFO:Copying training dataset
2025-04-19 19:57:06,027:INFO:Defining folds
2025-04-19 19:57:06,027:INFO:Declaring metric variables
2025-04-19 19:57:06,027:INFO:Importing untrained model
2025-04-19 19:57:06,027:INFO:K Neighbors Regressor Imported successfully
2025-04-19 19:57:06,027:INFO:Starting cross validation
2025-04-19 19:57:06,034:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:06,895:INFO:Calculating mean and std
2025-04-19 19:57:06,896:INFO:Creating metrics dataframe
2025-04-19 19:57:07,003:INFO:Uploading results into container
2025-04-19 19:57:07,004:INFO:Uploading model into container now
2025-04-19 19:57:07,004:INFO:_master_model_container: 11
2025-04-19 19:57:07,004:INFO:_display_container: 2
2025-04-19 19:57:07,004:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-19 19:57:07,004:INFO:create_model() successfully completed......................................
2025-04-19 19:57:07,098:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:07,098:INFO:Creating metrics dataframe
2025-04-19 19:57:07,102:INFO:Initializing Decision Tree Regressor
2025-04-19 19:57:07,102:INFO:Total runtime is 0.2780978957811992 minutes
2025-04-19 19:57:07,102:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:07,102:INFO:Initializing create_model()
2025-04-19 19:57:07,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:07,102:INFO:Checking exceptions
2025-04-19 19:57:07,102:INFO:Importing libraries
2025-04-19 19:57:07,102:INFO:Copying training dataset
2025-04-19 19:57:07,105:INFO:Defining folds
2025-04-19 19:57:07,105:INFO:Declaring metric variables
2025-04-19 19:57:07,105:INFO:Importing untrained model
2025-04-19 19:57:07,105:INFO:Decision Tree Regressor Imported successfully
2025-04-19 19:57:07,105:INFO:Starting cross validation
2025-04-19 19:57:07,111:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:07,973:INFO:Calculating mean and std
2025-04-19 19:57:07,973:INFO:Creating metrics dataframe
2025-04-19 19:57:08,086:INFO:Uploading results into container
2025-04-19 19:57:08,087:INFO:Uploading model into container now
2025-04-19 19:57:08,087:INFO:_master_model_container: 12
2025-04-19 19:57:08,087:INFO:_display_container: 2
2025-04-19 19:57:08,088:INFO:DecisionTreeRegressor(random_state=42)
2025-04-19 19:57:08,088:INFO:create_model() successfully completed......................................
2025-04-19 19:57:08,185:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:08,185:INFO:Creating metrics dataframe
2025-04-19 19:57:08,188:INFO:Initializing Random Forest Regressor
2025-04-19 19:57:08,188:INFO:Total runtime is 0.29620311657587695 minutes
2025-04-19 19:57:08,188:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:08,189:INFO:Initializing create_model()
2025-04-19 19:57:08,189:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:08,189:INFO:Checking exceptions
2025-04-19 19:57:08,189:INFO:Importing libraries
2025-04-19 19:57:08,189:INFO:Copying training dataset
2025-04-19 19:57:08,191:INFO:Defining folds
2025-04-19 19:57:08,191:INFO:Declaring metric variables
2025-04-19 19:57:08,191:INFO:Importing untrained model
2025-04-19 19:57:08,191:INFO:Random Forest Regressor Imported successfully
2025-04-19 19:57:08,192:INFO:Starting cross validation
2025-04-19 19:57:08,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:09,551:INFO:Calculating mean and std
2025-04-19 19:57:09,552:INFO:Creating metrics dataframe
2025-04-19 19:57:09,655:INFO:Uploading results into container
2025-04-19 19:57:09,655:INFO:Uploading model into container now
2025-04-19 19:57:09,655:INFO:_master_model_container: 13
2025-04-19 19:57:09,655:INFO:_display_container: 2
2025-04-19 19:57:09,655:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:57:09,655:INFO:create_model() successfully completed......................................
2025-04-19 19:57:09,751:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:09,751:INFO:Creating metrics dataframe
2025-04-19 19:57:09,755:INFO:Initializing Extra Trees Regressor
2025-04-19 19:57:09,756:INFO:Total runtime is 0.32233115037282317 minutes
2025-04-19 19:57:09,756:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:09,756:INFO:Initializing create_model()
2025-04-19 19:57:09,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:09,756:INFO:Checking exceptions
2025-04-19 19:57:09,756:INFO:Importing libraries
2025-04-19 19:57:09,756:INFO:Copying training dataset
2025-04-19 19:57:09,759:INFO:Defining folds
2025-04-19 19:57:09,759:INFO:Declaring metric variables
2025-04-19 19:57:09,759:INFO:Importing untrained model
2025-04-19 19:57:09,759:INFO:Extra Trees Regressor Imported successfully
2025-04-19 19:57:09,759:INFO:Starting cross validation
2025-04-19 19:57:09,766:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:11,074:INFO:Calculating mean and std
2025-04-19 19:57:11,074:INFO:Creating metrics dataframe
2025-04-19 19:57:11,197:INFO:Uploading results into container
2025-04-19 19:57:11,198:INFO:Uploading model into container now
2025-04-19 19:57:11,198:INFO:_master_model_container: 14
2025-04-19 19:57:11,198:INFO:_display_container: 2
2025-04-19 19:57:11,199:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:57:11,199:INFO:create_model() successfully completed......................................
2025-04-19 19:57:11,297:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:11,297:INFO:Creating metrics dataframe
2025-04-19 19:57:11,301:INFO:Initializing AdaBoost Regressor
2025-04-19 19:57:11,301:INFO:Total runtime is 0.34809019962946586 minutes
2025-04-19 19:57:11,301:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:11,302:INFO:Initializing create_model()
2025-04-19 19:57:11,302:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:11,302:INFO:Checking exceptions
2025-04-19 19:57:11,302:INFO:Importing libraries
2025-04-19 19:57:11,302:INFO:Copying training dataset
2025-04-19 19:57:11,304:INFO:Defining folds
2025-04-19 19:57:11,304:INFO:Declaring metric variables
2025-04-19 19:57:11,304:INFO:Importing untrained model
2025-04-19 19:57:11,304:INFO:AdaBoost Regressor Imported successfully
2025-04-19 19:57:11,304:INFO:Starting cross validation
2025-04-19 19:57:11,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:12,307:INFO:Calculating mean and std
2025-04-19 19:57:12,307:INFO:Creating metrics dataframe
2025-04-19 19:57:12,428:INFO:Uploading results into container
2025-04-19 19:57:12,429:INFO:Uploading model into container now
2025-04-19 19:57:12,429:INFO:_master_model_container: 15
2025-04-19 19:57:12,429:INFO:_display_container: 2
2025-04-19 19:57:12,429:INFO:AdaBoostRegressor(random_state=42)
2025-04-19 19:57:12,429:INFO:create_model() successfully completed......................................
2025-04-19 19:57:12,523:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:12,523:INFO:Creating metrics dataframe
2025-04-19 19:57:12,527:INFO:Initializing Gradient Boosting Regressor
2025-04-19 19:57:12,536:INFO:Total runtime is 0.3686573942502341 minutes
2025-04-19 19:57:12,536:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:12,536:INFO:Initializing create_model()
2025-04-19 19:57:12,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:12,536:INFO:Checking exceptions
2025-04-19 19:57:12,536:INFO:Importing libraries
2025-04-19 19:57:12,536:INFO:Copying training dataset
2025-04-19 19:57:12,538:INFO:Defining folds
2025-04-19 19:57:12,538:INFO:Declaring metric variables
2025-04-19 19:57:12,538:INFO:Importing untrained model
2025-04-19 19:57:12,539:INFO:Gradient Boosting Regressor Imported successfully
2025-04-19 19:57:12,539:INFO:Starting cross validation
2025-04-19 19:57:12,543:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:13,567:INFO:Calculating mean and std
2025-04-19 19:57:13,568:INFO:Creating metrics dataframe
2025-04-19 19:57:13,686:INFO:Uploading results into container
2025-04-19 19:57:13,687:INFO:Uploading model into container now
2025-04-19 19:57:13,687:INFO:_master_model_container: 16
2025-04-19 19:57:13,687:INFO:_display_container: 2
2025-04-19 19:57:13,688:INFO:GradientBoostingRegressor(random_state=42)
2025-04-19 19:57:13,688:INFO:create_model() successfully completed......................................
2025-04-19 19:57:13,784:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:13,784:INFO:Creating metrics dataframe
2025-04-19 19:57:13,787:INFO:Initializing Light Gradient Boosting Machine
2025-04-19 19:57:13,787:INFO:Total runtime is 0.3895114262898764 minutes
2025-04-19 19:57:13,788:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:13,788:INFO:Initializing create_model()
2025-04-19 19:57:13,788:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:13,788:INFO:Checking exceptions
2025-04-19 19:57:13,788:INFO:Importing libraries
2025-04-19 19:57:13,788:INFO:Copying training dataset
2025-04-19 19:57:13,790:INFO:Defining folds
2025-04-19 19:57:13,791:INFO:Declaring metric variables
2025-04-19 19:57:13,791:INFO:Importing untrained model
2025-04-19 19:57:13,791:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-19 19:57:13,791:INFO:Starting cross validation
2025-04-19 19:57:13,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:14,997:INFO:Calculating mean and std
2025-04-19 19:57:14,997:INFO:Creating metrics dataframe
2025-04-19 19:57:15,114:INFO:Uploading results into container
2025-04-19 19:57:15,114:INFO:Uploading model into container now
2025-04-19 19:57:15,114:INFO:_master_model_container: 17
2025-04-19 19:57:15,114:INFO:_display_container: 2
2025-04-19 19:57:15,116:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:57:15,116:INFO:create_model() successfully completed......................................
2025-04-19 19:57:15,216:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:15,216:INFO:Creating metrics dataframe
2025-04-19 19:57:15,219:INFO:Initializing Dummy Regressor
2025-04-19 19:57:15,219:INFO:Total runtime is 0.413379720846812 minutes
2025-04-19 19:57:15,219:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:15,220:INFO:Initializing create_model()
2025-04-19 19:57:15,220:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0783580>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:15,220:INFO:Checking exceptions
2025-04-19 19:57:15,220:INFO:Importing libraries
2025-04-19 19:57:15,220:INFO:Copying training dataset
2025-04-19 19:57:15,223:INFO:Defining folds
2025-04-19 19:57:15,223:INFO:Declaring metric variables
2025-04-19 19:57:15,223:INFO:Importing untrained model
2025-04-19 19:57:15,223:INFO:Dummy Regressor Imported successfully
2025-04-19 19:57:15,223:INFO:Starting cross validation
2025-04-19 19:57:15,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:16,196:INFO:Calculating mean and std
2025-04-19 19:57:16,197:INFO:Creating metrics dataframe
2025-04-19 19:57:16,312:INFO:Uploading results into container
2025-04-19 19:57:16,312:INFO:Uploading model into container now
2025-04-19 19:57:16,313:INFO:_master_model_container: 18
2025-04-19 19:57:16,313:INFO:_display_container: 2
2025-04-19 19:57:16,313:INFO:DummyRegressor()
2025-04-19 19:57:16,313:INFO:create_model() successfully completed......................................
2025-04-19 19:57:16,405:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:16,406:INFO:Creating metrics dataframe
2025-04-19 19:57:16,410:INFO:Initializing create_model()
2025-04-19 19:57:16,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=Lasso(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:16,410:INFO:Checking exceptions
2025-04-19 19:57:16,410:INFO:Importing libraries
2025-04-19 19:57:16,410:INFO:Copying training dataset
2025-04-19 19:57:16,412:INFO:Defining folds
2025-04-19 19:57:16,412:INFO:Declaring metric variables
2025-04-19 19:57:16,413:INFO:Importing untrained model
2025-04-19 19:57:16,413:INFO:Declaring custom model
2025-04-19 19:57:16,413:INFO:Lasso Regression Imported successfully
2025-04-19 19:57:16,419:INFO:Cross validation set to False
2025-04-19 19:57:16,419:INFO:Fitting Model
2025-04-19 19:57:16,542:INFO:Lasso(random_state=42)
2025-04-19 19:57:16,542:INFO:create_model() successfully completed......................................
2025-04-19 19:57:16,639:INFO:Initializing create_model()
2025-04-19 19:57:16,639:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=ElasticNet(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:16,639:INFO:Checking exceptions
2025-04-19 19:57:16,639:INFO:Importing libraries
2025-04-19 19:57:16,641:INFO:Copying training dataset
2025-04-19 19:57:16,643:INFO:Defining folds
2025-04-19 19:57:16,644:INFO:Declaring metric variables
2025-04-19 19:57:16,644:INFO:Importing untrained model
2025-04-19 19:57:16,644:INFO:Declaring custom model
2025-04-19 19:57:16,645:INFO:Elastic Net Imported successfully
2025-04-19 19:57:16,652:INFO:Cross validation set to False
2025-04-19 19:57:16,652:INFO:Fitting Model
2025-04-19 19:57:16,772:INFO:ElasticNet(random_state=42)
2025-04-19 19:57:16,772:INFO:create_model() successfully completed......................................
2025-04-19 19:57:16,873:INFO:Initializing create_model()
2025-04-19 19:57:16,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=DummyRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:16,873:INFO:Checking exceptions
2025-04-19 19:57:16,873:INFO:Importing libraries
2025-04-19 19:57:16,873:INFO:Copying training dataset
2025-04-19 19:57:16,876:INFO:Defining folds
2025-04-19 19:57:16,876:INFO:Declaring metric variables
2025-04-19 19:57:16,876:INFO:Importing untrained model
2025-04-19 19:57:16,876:INFO:Declaring custom model
2025-04-19 19:57:16,876:INFO:Dummy Regressor Imported successfully
2025-04-19 19:57:16,883:INFO:Cross validation set to False
2025-04-19 19:57:16,883:INFO:Fitting Model
2025-04-19 19:57:16,998:INFO:DummyRegressor()
2025-04-19 19:57:16,998:INFO:create_model() successfully completed......................................
2025-04-19 19:57:17,106:INFO:_master_model_container: 18
2025-04-19 19:57:17,106:INFO:_display_container: 2
2025-04-19 19:57:17,107:INFO:[Lasso(random_state=42), ElasticNet(random_state=42), DummyRegressor()]
2025-04-19 19:57:17,107:INFO:compare_models() successfully completed......................................
2025-04-19 19:57:17,107:INFO:Initializing tune_model()
2025-04-19 19:57:17,107:INFO:tune_model(estimator=Lasso(random_state=42), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>)
2025-04-19 19:57:17,107:INFO:Checking exceptions
2025-04-19 19:57:17,109:INFO:Copying training dataset
2025-04-19 19:57:17,110:INFO:Checking base model
2025-04-19 19:57:17,110:INFO:Base model : Lasso Regression
2025-04-19 19:57:17,110:INFO:Declaring metric variables
2025-04-19 19:57:17,110:INFO:Defining Hyperparameters
2025-04-19 19:57:17,212:INFO:Tuning with n_jobs=-1
2025-04-19 19:57:17,212:INFO:Initializing RandomizedSearchCV
2025-04-19 19:57:29,893:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__alpha': 5.48}
2025-04-19 19:57:29,894:INFO:Hyperparameter search completed
2025-04-19 19:57:29,894:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:29,895:INFO:Initializing create_model()
2025-04-19 19:57:29,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=Lasso(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9A7D1330>, model_only=True, return_train_score=False, kwargs={'fit_intercept': False, 'alpha': 5.48})
2025-04-19 19:57:29,896:INFO:Checking exceptions
2025-04-19 19:57:29,896:INFO:Importing libraries
2025-04-19 19:57:29,896:INFO:Copying training dataset
2025-04-19 19:57:29,903:INFO:Defining folds
2025-04-19 19:57:29,903:INFO:Declaring metric variables
2025-04-19 19:57:29,903:INFO:Importing untrained model
2025-04-19 19:57:29,904:INFO:Declaring custom model
2025-04-19 19:57:29,904:INFO:Lasso Regression Imported successfully
2025-04-19 19:57:29,906:INFO:Starting cross validation
2025-04-19 19:57:29,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:31,758:INFO:Calculating mean and std
2025-04-19 19:57:31,759:INFO:Creating metrics dataframe
2025-04-19 19:57:31,765:INFO:Finalizing model
2025-04-19 19:57:32,173:INFO:Uploading results into container
2025-04-19 19:57:32,175:INFO:Uploading model into container now
2025-04-19 19:57:32,176:INFO:_master_model_container: 19
2025-04-19 19:57:32,176:INFO:_display_container: 3
2025-04-19 19:57:32,176:INFO:Lasso(alpha=5.48, fit_intercept=False, random_state=42)
2025-04-19 19:57:32,177:INFO:create_model() successfully completed......................................
2025-04-19 19:57:32,369:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:32,369:INFO:choose_better activated
2025-04-19 19:57:32,369:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:32,369:INFO:Initializing create_model()
2025-04-19 19:57:32,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=Lasso(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:32,369:INFO:Checking exceptions
2025-04-19 19:57:32,372:INFO:Importing libraries
2025-04-19 19:57:32,372:INFO:Copying training dataset
2025-04-19 19:57:32,378:INFO:Defining folds
2025-04-19 19:57:32,379:INFO:Declaring metric variables
2025-04-19 19:57:32,379:INFO:Importing untrained model
2025-04-19 19:57:32,379:INFO:Declaring custom model
2025-04-19 19:57:32,380:INFO:Lasso Regression Imported successfully
2025-04-19 19:57:32,380:INFO:Starting cross validation
2025-04-19 19:57:32,389:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:34,087:INFO:Calculating mean and std
2025-04-19 19:57:34,088:INFO:Creating metrics dataframe
2025-04-19 19:57:34,093:INFO:Finalizing model
2025-04-19 19:57:34,472:INFO:Uploading results into container
2025-04-19 19:57:34,473:INFO:Uploading model into container now
2025-04-19 19:57:34,474:INFO:_master_model_container: 20
2025-04-19 19:57:34,474:INFO:_display_container: 4
2025-04-19 19:57:34,474:INFO:Lasso(random_state=42)
2025-04-19 19:57:34,474:INFO:create_model() successfully completed......................................
2025-04-19 19:57:34,616:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:34,617:INFO:Lasso(random_state=42) result for R2 is -0.4117
2025-04-19 19:57:34,618:INFO:Lasso(alpha=5.48, fit_intercept=False, random_state=42) result for R2 is -0.3924
2025-04-19 19:57:34,618:INFO:Lasso(alpha=5.48, fit_intercept=False, random_state=42) is best model
2025-04-19 19:57:34,618:INFO:choose_better completed
2025-04-19 19:57:34,626:INFO:_master_model_container: 20
2025-04-19 19:57:34,626:INFO:_display_container: 3
2025-04-19 19:57:34,626:INFO:Lasso(alpha=5.48, fit_intercept=False, random_state=42)
2025-04-19 19:57:34,627:INFO:tune_model() successfully completed......................................
2025-04-19 19:57:34,920:INFO:Initializing tune_model()
2025-04-19 19:57:34,920:INFO:tune_model(estimator=ElasticNet(random_state=42), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>)
2025-04-19 19:57:34,920:INFO:Checking exceptions
2025-04-19 19:57:34,922:INFO:Copying training dataset
2025-04-19 19:57:34,924:INFO:Checking base model
2025-04-19 19:57:34,924:INFO:Base model : Elastic Net
2025-04-19 19:57:34,924:INFO:Declaring metric variables
2025-04-19 19:57:34,924:INFO:Defining Hyperparameters
2025-04-19 19:57:35,088:INFO:Tuning with n_jobs=-1
2025-04-19 19:57:35,088:INFO:Initializing RandomizedSearchCV
2025-04-19 19:57:54,315:INFO:best_params: {'actual_estimator__l1_ratio': 0.842999999999999, 'actual_estimator__fit_intercept': False, 'actual_estimator__alpha': 8.55}
2025-04-19 19:57:54,316:INFO:Hyperparameter search completed
2025-04-19 19:57:54,316:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:54,316:INFO:Initializing create_model()
2025-04-19 19:57:54,316:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=ElasticNet(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA09D87C0>, model_only=True, return_train_score=False, kwargs={'l1_ratio': 0.842999999999999, 'fit_intercept': False, 'alpha': 8.55})
2025-04-19 19:57:54,317:INFO:Checking exceptions
2025-04-19 19:57:54,317:INFO:Importing libraries
2025-04-19 19:57:54,317:INFO:Copying training dataset
2025-04-19 19:57:54,321:INFO:Defining folds
2025-04-19 19:57:54,321:INFO:Declaring metric variables
2025-04-19 19:57:54,321:INFO:Importing untrained model
2025-04-19 19:57:54,321:INFO:Declaring custom model
2025-04-19 19:57:54,322:INFO:Elastic Net Imported successfully
2025-04-19 19:57:54,323:INFO:Starting cross validation
2025-04-19 19:57:54,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:56,170:INFO:Calculating mean and std
2025-04-19 19:57:56,170:INFO:Creating metrics dataframe
2025-04-19 19:57:56,173:INFO:Finalizing model
2025-04-19 19:57:56,571:INFO:Uploading results into container
2025-04-19 19:57:56,572:INFO:Uploading model into container now
2025-04-19 19:57:56,573:INFO:_master_model_container: 21
2025-04-19 19:57:56,574:INFO:_display_container: 4
2025-04-19 19:57:56,575:INFO:ElasticNet(alpha=8.55, fit_intercept=False, l1_ratio=0.842999999999999,
           random_state=42)
2025-04-19 19:57:56,575:INFO:create_model() successfully completed......................................
2025-04-19 19:57:56,763:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:56,763:INFO:choose_better activated
2025-04-19 19:57:56,764:INFO:SubProcess create_model() called ==================================
2025-04-19 19:57:56,764:INFO:Initializing create_model()
2025-04-19 19:57:56,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>, estimator=ElasticNet(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:57:56,764:INFO:Checking exceptions
2025-04-19 19:57:56,766:INFO:Importing libraries
2025-04-19 19:57:56,766:INFO:Copying training dataset
2025-04-19 19:57:56,769:INFO:Defining folds
2025-04-19 19:57:56,769:INFO:Declaring metric variables
2025-04-19 19:57:56,769:INFO:Importing untrained model
2025-04-19 19:57:56,769:INFO:Declaring custom model
2025-04-19 19:57:56,770:INFO:Elastic Net Imported successfully
2025-04-19 19:57:56,770:INFO:Starting cross validation
2025-04-19 19:57:56,783:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:57:58,483:INFO:Calculating mean and std
2025-04-19 19:57:58,484:INFO:Creating metrics dataframe
2025-04-19 19:57:58,487:INFO:Finalizing model
2025-04-19 19:57:58,884:INFO:Uploading results into container
2025-04-19 19:57:58,886:INFO:Uploading model into container now
2025-04-19 19:57:58,886:INFO:_master_model_container: 22
2025-04-19 19:57:58,887:INFO:_display_container: 5
2025-04-19 19:57:58,887:INFO:ElasticNet(random_state=42)
2025-04-19 19:57:58,887:INFO:create_model() successfully completed......................................
2025-04-19 19:57:59,055:INFO:SubProcess create_model() end ==================================
2025-04-19 19:57:59,056:INFO:ElasticNet(random_state=42) result for R2 is -0.4117
2025-04-19 19:57:59,059:INFO:ElasticNet(alpha=8.55, fit_intercept=False, l1_ratio=0.842999999999999,
           random_state=42) result for R2 is -0.3924
2025-04-19 19:57:59,060:INFO:ElasticNet(alpha=8.55, fit_intercept=False, l1_ratio=0.842999999999999,
           random_state=42) is best model
2025-04-19 19:57:59,060:INFO:choose_better completed
2025-04-19 19:57:59,085:INFO:_master_model_container: 22
2025-04-19 19:57:59,086:INFO:_display_container: 4
2025-04-19 19:57:59,086:INFO:ElasticNet(alpha=8.55, fit_intercept=False, l1_ratio=0.842999999999999,
           random_state=42)
2025-04-19 19:57:59,086:INFO:tune_model() successfully completed......................................
2025-04-19 19:57:59,440:INFO:Initializing tune_model()
2025-04-19 19:57:59,440:INFO:tune_model(estimator=DummyRegressor(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9EA686A0>)
2025-04-19 19:57:59,440:INFO:Checking exceptions
2025-04-19 19:57:59,444:INFO:Copying training dataset
2025-04-19 19:57:59,447:INFO:Checking base model
2025-04-19 19:57:59,448:INFO:Base model : Dummy Regressor
2025-04-19 19:57:59,448:INFO:Declaring metric variables
2025-04-19 19:57:59,449:INFO:Defining Hyperparameters
2025-04-19 19:57:59,449:INFO:10 is bigger than total combinations 1, setting search algorithm to grid
2025-04-19 19:58:13,295:INFO:PyCaret RegressionExperiment
2025-04-19 19:58:13,295:INFO:Logging name: agn_modeling
2025-04-19 19:58:13,295:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-19 19:58:13,297:INFO:version 3.0.4
2025-04-19 19:58:13,297:INFO:Initializing setup()
2025-04-19 19:58:13,297:INFO:self.USI: e151
2025-04-19 19:58:13,297:INFO:self._variable_keys: {'exp_id', 'y_test', 'log_plots_param', 'transform_target_param', 'USI', '_available_plots', 'target_param', 'exp_name_log', 'pipeline', 'X_train', 'gpu_param', 'n_jobs_param', 'y', 'memory', 'X', 'seed', 'logging_param', '_ml_usecase', 'data', 'y_train', 'fold_groups_param', 'idx', 'fold_generator', 'fold_shuffle_param', 'X_test', 'gpu_n_jobs_param', 'html_param'}
2025-04-19 19:58:13,297:INFO:Checking environment
2025-04-19 19:58:13,297:INFO:python_version: 3.10.9
2025-04-19 19:58:13,297:INFO:python_build: ('tags/v3.10.9:1dd9be6', 'Dec  6 2022 20:01:21')
2025-04-19 19:58:13,297:INFO:machine: AMD64
2025-04-19 19:58:13,297:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-19 19:58:13,304:INFO:Memory: svmem(total=16952647680, available=3148140544, percent=81.4, used=13804507136, free=3148140544)
2025-04-19 19:58:13,305:INFO:Physical Core: 4
2025-04-19 19:58:13,305:INFO:Logical Core: 8
2025-04-19 19:58:13,305:INFO:Checking libraries
2025-04-19 19:58:13,305:INFO:System:
2025-04-19 19:58:13,305:INFO:    python: 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 20:01:21) [MSC v.1934 64 bit (AMD64)]
2025-04-19 19:58:13,305:INFO:executable: D:\College\agn\venv_py310\Scripts\python.exe
2025-04-19 19:58:13,305:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-19 19:58:13,305:INFO:PyCaret required dependencies:
2025-04-19 19:58:13,305:INFO:                 pip: 25.0.1
2025-04-19 19:58:13,305:INFO:          setuptools: 65.5.0
2025-04-19 19:58:13,305:INFO:             pycaret: 3.0.4
2025-04-19 19:58:13,305:INFO:             IPython: 8.35.0
2025-04-19 19:58:13,305:INFO:          ipywidgets: 8.1.6
2025-04-19 19:58:13,305:INFO:                tqdm: 4.67.1
2025-04-19 19:58:13,305:INFO:               numpy: 1.23.5
2025-04-19 19:58:13,305:INFO:              pandas: 1.5.3
2025-04-19 19:58:13,306:INFO:              jinja2: 3.1.6
2025-04-19 19:58:13,306:INFO:               scipy: 1.10.1
2025-04-19 19:58:13,306:INFO:              joblib: 1.2.0
2025-04-19 19:58:13,306:INFO:             sklearn: 1.2.2
2025-04-19 19:58:13,306:INFO:                pyod: 2.0.4
2025-04-19 19:58:13,306:INFO:            imblearn: 0.12.4
2025-04-19 19:58:13,306:INFO:   category_encoders: 2.7.0
2025-04-19 19:58:13,306:INFO:            lightgbm: 4.6.0
2025-04-19 19:58:13,306:INFO:               numba: 0.60.0
2025-04-19 19:58:13,306:INFO:            requests: 2.32.3
2025-04-19 19:58:13,306:INFO:          matplotlib: 3.7.1
2025-04-19 19:58:13,306:INFO:          scikitplot: 0.3.7
2025-04-19 19:58:13,306:INFO:         yellowbrick: 1.5
2025-04-19 19:58:13,306:INFO:              plotly: 5.24.1
2025-04-19 19:58:13,306:INFO:    plotly-resampler: Not installed
2025-04-19 19:58:13,306:INFO:             kaleido: 0.2.1
2025-04-19 19:58:13,306:INFO:           schemdraw: 0.15
2025-04-19 19:58:13,306:INFO:         statsmodels: 0.14.4
2025-04-19 19:58:13,306:INFO:              sktime: 0.21.1
2025-04-19 19:58:13,307:INFO:               tbats: 1.1.3
2025-04-19 19:58:13,307:INFO:            pmdarima: 2.0.4
2025-04-19 19:58:13,307:INFO:              psutil: 7.0.0
2025-04-19 19:58:13,307:INFO:          markupsafe: 3.0.2
2025-04-19 19:58:13,307:INFO:             pickle5: Not installed
2025-04-19 19:58:13,307:INFO:         cloudpickle: 3.1.1
2025-04-19 19:58:13,307:INFO:         deprecation: 2.1.0
2025-04-19 19:58:13,307:INFO:              xxhash: 3.5.0
2025-04-19 19:58:13,307:INFO:           wurlitzer: Not installed
2025-04-19 19:58:13,307:INFO:PyCaret optional dependencies:
2025-04-19 19:58:13,307:INFO:                shap: Not installed
2025-04-19 19:58:13,307:INFO:           interpret: Not installed
2025-04-19 19:58:13,307:INFO:                umap: Not installed
2025-04-19 19:58:13,307:INFO:    pandas_profiling: Not installed
2025-04-19 19:58:13,307:INFO:  explainerdashboard: Not installed
2025-04-19 19:58:13,307:INFO:             autoviz: Not installed
2025-04-19 19:58:13,307:INFO:           fairlearn: Not installed
2025-04-19 19:58:13,307:INFO:          deepchecks: Not installed
2025-04-19 19:58:13,308:INFO:             xgboost: Not installed
2025-04-19 19:58:13,308:INFO:            catboost: Not installed
2025-04-19 19:58:13,308:INFO:              kmodes: Not installed
2025-04-19 19:58:13,308:INFO:             mlxtend: Not installed
2025-04-19 19:58:13,308:INFO:       statsforecast: Not installed
2025-04-19 19:58:13,308:INFO:        tune_sklearn: Not installed
2025-04-19 19:58:13,308:INFO:                 ray: Not installed
2025-04-19 19:58:13,308:INFO:            hyperopt: Not installed
2025-04-19 19:58:13,308:INFO:              optuna: Not installed
2025-04-19 19:58:13,308:INFO:               skopt: Not installed
2025-04-19 19:58:13,308:INFO:              mlflow: 2.21.3
2025-04-19 19:58:13,308:INFO:              gradio: Not installed
2025-04-19 19:58:13,308:INFO:             fastapi: 0.115.12
2025-04-19 19:58:13,308:INFO:             uvicorn: 0.34.2
2025-04-19 19:58:13,308:INFO:              m2cgen: Not installed
2025-04-19 19:58:13,308:INFO:           evidently: Not installed
2025-04-19 19:58:13,309:INFO:               fugue: Not installed
2025-04-19 19:58:13,309:INFO:           streamlit: Not installed
2025-04-19 19:58:13,309:INFO:             prophet: Not installed
2025-04-19 19:58:13,309:INFO:None
2025-04-19 19:58:13,309:INFO:Set up data.
2025-04-19 19:58:13,318:INFO:Set up train/test split.
2025-04-19 19:58:13,324:INFO:Set up index.
2025-04-19 19:58:13,326:INFO:Set up folding strategy.
2025-04-19 19:58:13,326:INFO:Assigning column types.
2025-04-19 19:58:13,335:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-19 19:58:13,336:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,349:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,356:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,530:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,532:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:13,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:13,533:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,541:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,552:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,688:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,807:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:13,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:13,809:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-19 19:58:13,818:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,830:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:58:13,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,082:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,244:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,320:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,321:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-19 19:58:14,330:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,461:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,602:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,719:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:14,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:14,799:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-19 19:58:15,227:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:15,323:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:15,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,457:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:15,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 19:58:15,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,554:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-19 19:58:15,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:15,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,842:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 19:58:15,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:15,931:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-19 19:58:16,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:16,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:16,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:16,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:16,372:INFO:Preparing preprocessing pipeline...
2025-04-19 19:58:16,372:INFO:Set up target transformation.
2025-04-19 19:58:16,372:INFO:Set up simple imputation.
2025-04-19 19:58:16,372:INFO:Set up removing multicollinearity.
2025-04-19 19:58:16,373:INFO:Set up removing outliers.
2025-04-19 19:58:16,373:INFO:Set up feature normalization.
2025-04-19 19:58:16,861:INFO:Finished creating preprocessing pipeline.
2025-04-19 19:58:16,878:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-04-19 19:58:16,878:INFO:Creating final display dataframe.
2025-04-19 19:58:17,990:INFO:Setup _display_container:                     Description         Value
0                    Session id            42
1                        Target        target
2                   Target type    Regression
3           Original data shape       (80, 4)
4        Transformed data shape       (77, 4)
5   Transformed train set shape       (53, 4)
6    Transformed test set shape       (24, 4)
7              Numeric features             3
8                    Preprocess          True
9               Imputation type        simple
10           Numeric imputation          mean
11       Categorical imputation          mode
12     Remove multicollinearity          True
13  Multicollinearity threshold           0.9
14              Remove outliers          True
15           Outliers threshold          0.05
16                    Normalize          True
17             Normalize method        zscore
18             Transform target          True
19      Transform target method   yeo-johnson
20               Fold Generator         KFold
21                  Fold Number            10
22                     CPU Jobs            -1
23                      Use GPU         False
24               Log Experiment         False
25              Experiment Name  agn_modeling
26                          USI          e151
2025-04-19 19:58:18,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:18,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:18,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:18,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 19:58:18,410:INFO:setup() successfully completed in 5.28s...............
2025-04-19 19:58:18,410:INFO:Initializing compare_models()
2025-04-19 19:58:18,410:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, 'include': None, 'exclude': ['catboost'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=['catboost'])
2025-04-19 19:58:18,410:INFO:Checking exceptions
2025-04-19 19:58:18,412:INFO:Preparing display monitor
2025-04-19 19:58:18,417:INFO:Initializing Linear Regression
2025-04-19 19:58:18,417:INFO:Total runtime is 1.6955534617106118e-05 minutes
2025-04-19 19:58:18,417:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:18,417:INFO:Initializing create_model()
2025-04-19 19:58:18,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:18,417:INFO:Checking exceptions
2025-04-19 19:58:18,418:INFO:Importing libraries
2025-04-19 19:58:18,418:INFO:Copying training dataset
2025-04-19 19:58:18,424:INFO:Defining folds
2025-04-19 19:58:18,424:INFO:Declaring metric variables
2025-04-19 19:58:18,424:INFO:Importing untrained model
2025-04-19 19:58:18,424:INFO:Linear Regression Imported successfully
2025-04-19 19:58:18,426:INFO:Starting cross validation
2025-04-19 19:58:18,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:18,762:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:18,772:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:18,805:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:18,816:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:18,817:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:18,849:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:18,874:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:18,885:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:19,558:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:19,621:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 19:58:20,776:INFO:Calculating mean and std
2025-04-19 19:58:20,777:INFO:Creating metrics dataframe
2025-04-19 19:58:21,067:INFO:Uploading results into container
2025-04-19 19:58:21,068:INFO:Uploading model into container now
2025-04-19 19:58:21,068:INFO:_master_model_container: 1
2025-04-19 19:58:21,068:INFO:_display_container: 2
2025-04-19 19:58:21,069:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:58:21,069:INFO:create_model() successfully completed......................................
2025-04-19 19:58:21,340:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:21,340:INFO:Creating metrics dataframe
2025-04-19 19:58:21,347:INFO:Initializing Lasso Regression
2025-04-19 19:58:21,347:INFO:Total runtime is 0.04885043303171794 minutes
2025-04-19 19:58:21,348:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:21,348:INFO:Initializing create_model()
2025-04-19 19:58:21,348:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:21,348:INFO:Checking exceptions
2025-04-19 19:58:21,348:INFO:Importing libraries
2025-04-19 19:58:21,348:INFO:Copying training dataset
2025-04-19 19:58:21,351:INFO:Defining folds
2025-04-19 19:58:21,352:INFO:Declaring metric variables
2025-04-19 19:58:21,352:INFO:Importing untrained model
2025-04-19 19:58:21,352:INFO:Lasso Regression Imported successfully
2025-04-19 19:58:21,352:INFO:Starting cross validation
2025-04-19 19:58:21,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:23,303:INFO:Calculating mean and std
2025-04-19 19:58:23,304:INFO:Creating metrics dataframe
2025-04-19 19:58:23,593:INFO:Uploading results into container
2025-04-19 19:58:23,594:INFO:Uploading model into container now
2025-04-19 19:58:23,594:INFO:_master_model_container: 2
2025-04-19 19:58:23,594:INFO:_display_container: 2
2025-04-19 19:58:23,594:INFO:Lasso(random_state=42)
2025-04-19 19:58:23,594:INFO:create_model() successfully completed......................................
2025-04-19 19:58:23,784:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:23,784:INFO:Creating metrics dataframe
2025-04-19 19:58:23,797:INFO:Initializing Ridge Regression
2025-04-19 19:58:23,798:INFO:Total runtime is 0.08970298369725546 minutes
2025-04-19 19:58:23,798:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:23,799:INFO:Initializing create_model()
2025-04-19 19:58:23,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:23,799:INFO:Checking exceptions
2025-04-19 19:58:23,799:INFO:Importing libraries
2025-04-19 19:58:23,799:INFO:Copying training dataset
2025-04-19 19:58:23,810:INFO:Defining folds
2025-04-19 19:58:23,810:INFO:Declaring metric variables
2025-04-19 19:58:23,811:INFO:Importing untrained model
2025-04-19 19:58:23,812:INFO:Ridge Regression Imported successfully
2025-04-19 19:58:23,813:INFO:Starting cross validation
2025-04-19 19:58:23,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:25,602:INFO:Calculating mean and std
2025-04-19 19:58:25,603:INFO:Creating metrics dataframe
2025-04-19 19:58:25,871:INFO:Uploading results into container
2025-04-19 19:58:25,872:INFO:Uploading model into container now
2025-04-19 19:58:25,872:INFO:_master_model_container: 3
2025-04-19 19:58:25,873:INFO:_display_container: 2
2025-04-19 19:58:25,873:INFO:Ridge(random_state=42)
2025-04-19 19:58:25,873:INFO:create_model() successfully completed......................................
2025-04-19 19:58:26,052:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:26,052:INFO:Creating metrics dataframe
2025-04-19 19:58:26,064:INFO:Initializing Elastic Net
2025-04-19 19:58:26,064:INFO:Total runtime is 0.12748183806737265 minutes
2025-04-19 19:58:26,064:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:26,066:INFO:Initializing create_model()
2025-04-19 19:58:26,066:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:26,066:INFO:Checking exceptions
2025-04-19 19:58:26,066:INFO:Importing libraries
2025-04-19 19:58:26,067:INFO:Copying training dataset
2025-04-19 19:58:26,074:INFO:Defining folds
2025-04-19 19:58:26,074:INFO:Declaring metric variables
2025-04-19 19:58:26,075:INFO:Importing untrained model
2025-04-19 19:58:26,076:INFO:Elastic Net Imported successfully
2025-04-19 19:58:26,076:INFO:Starting cross validation
2025-04-19 19:58:26,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:28,013:INFO:Calculating mean and std
2025-04-19 19:58:28,014:INFO:Creating metrics dataframe
2025-04-19 19:58:28,278:INFO:Uploading results into container
2025-04-19 19:58:28,279:INFO:Uploading model into container now
2025-04-19 19:58:28,280:INFO:_master_model_container: 4
2025-04-19 19:58:28,280:INFO:_display_container: 2
2025-04-19 19:58:28,281:INFO:ElasticNet(random_state=42)
2025-04-19 19:58:28,281:INFO:create_model() successfully completed......................................
2025-04-19 19:58:28,432:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:28,433:INFO:Creating metrics dataframe
2025-04-19 19:58:28,439:INFO:Initializing Least Angle Regression
2025-04-19 19:58:28,440:INFO:Total runtime is 0.1670810659726461 minutes
2025-04-19 19:58:28,440:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:28,441:INFO:Initializing create_model()
2025-04-19 19:58:28,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:28,441:INFO:Checking exceptions
2025-04-19 19:58:28,441:INFO:Importing libraries
2025-04-19 19:58:28,441:INFO:Copying training dataset
2025-04-19 19:58:28,446:INFO:Defining folds
2025-04-19 19:58:28,446:INFO:Declaring metric variables
2025-04-19 19:58:28,446:INFO:Importing untrained model
2025-04-19 19:58:28,447:INFO:Least Angle Regression Imported successfully
2025-04-19 19:58:28,447:INFO:Starting cross validation
2025-04-19 19:58:28,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:30,226:INFO:Calculating mean and std
2025-04-19 19:58:30,227:INFO:Creating metrics dataframe
2025-04-19 19:58:30,516:INFO:Uploading results into container
2025-04-19 19:58:30,518:INFO:Uploading model into container now
2025-04-19 19:58:30,519:INFO:_master_model_container: 5
2025-04-19 19:58:30,519:INFO:_display_container: 2
2025-04-19 19:58:30,519:INFO:Lars(random_state=42)
2025-04-19 19:58:30,519:INFO:create_model() successfully completed......................................
2025-04-19 19:58:30,678:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:30,678:INFO:Creating metrics dataframe
2025-04-19 19:58:30,689:INFO:Initializing Lasso Least Angle Regression
2025-04-19 19:58:30,689:INFO:Total runtime is 0.20455476442972823 minutes
2025-04-19 19:58:30,690:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:30,690:INFO:Initializing create_model()
2025-04-19 19:58:30,690:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:30,690:INFO:Checking exceptions
2025-04-19 19:58:30,690:INFO:Importing libraries
2025-04-19 19:58:30,690:INFO:Copying training dataset
2025-04-19 19:58:30,696:INFO:Defining folds
2025-04-19 19:58:30,696:INFO:Declaring metric variables
2025-04-19 19:58:30,697:INFO:Importing untrained model
2025-04-19 19:58:30,698:INFO:Lasso Least Angle Regression Imported successfully
2025-04-19 19:58:30,699:INFO:Starting cross validation
2025-04-19 19:58:30,726:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:32,500:INFO:Calculating mean and std
2025-04-19 19:58:32,501:INFO:Creating metrics dataframe
2025-04-19 19:58:32,727:INFO:Uploading results into container
2025-04-19 19:58:32,728:INFO:Uploading model into container now
2025-04-19 19:58:32,729:INFO:_master_model_container: 6
2025-04-19 19:58:32,729:INFO:_display_container: 2
2025-04-19 19:58:32,730:INFO:LassoLars(random_state=42)
2025-04-19 19:58:32,731:INFO:create_model() successfully completed......................................
2025-04-19 19:58:32,899:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:32,899:INFO:Creating metrics dataframe
2025-04-19 19:58:32,906:INFO:Initializing Orthogonal Matching Pursuit
2025-04-19 19:58:32,907:INFO:Total runtime is 0.2415043393770854 minutes
2025-04-19 19:58:32,907:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:32,907:INFO:Initializing create_model()
2025-04-19 19:58:32,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:32,907:INFO:Checking exceptions
2025-04-19 19:58:32,908:INFO:Importing libraries
2025-04-19 19:58:32,908:INFO:Copying training dataset
2025-04-19 19:58:32,911:INFO:Defining folds
2025-04-19 19:58:32,911:INFO:Declaring metric variables
2025-04-19 19:58:32,912:INFO:Importing untrained model
2025-04-19 19:58:32,912:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 19:58:32,913:INFO:Starting cross validation
2025-04-19 19:58:32,927:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:34,692:INFO:Calculating mean and std
2025-04-19 19:58:34,693:INFO:Creating metrics dataframe
2025-04-19 19:58:34,980:INFO:Uploading results into container
2025-04-19 19:58:34,981:INFO:Uploading model into container now
2025-04-19 19:58:34,981:INFO:_master_model_container: 7
2025-04-19 19:58:34,982:INFO:_display_container: 2
2025-04-19 19:58:34,982:INFO:OrthogonalMatchingPursuit()
2025-04-19 19:58:34,982:INFO:create_model() successfully completed......................................
2025-04-19 19:58:35,131:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:35,131:INFO:Creating metrics dataframe
2025-04-19 19:58:35,139:INFO:Initializing Bayesian Ridge
2025-04-19 19:58:35,139:INFO:Total runtime is 0.27871711651484177 minutes
2025-04-19 19:58:35,139:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:35,140:INFO:Initializing create_model()
2025-04-19 19:58:35,140:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:35,140:INFO:Checking exceptions
2025-04-19 19:58:35,140:INFO:Importing libraries
2025-04-19 19:58:35,140:INFO:Copying training dataset
2025-04-19 19:58:35,144:INFO:Defining folds
2025-04-19 19:58:35,144:INFO:Declaring metric variables
2025-04-19 19:58:35,144:INFO:Importing untrained model
2025-04-19 19:58:35,147:INFO:Bayesian Ridge Imported successfully
2025-04-19 19:58:35,147:INFO:Starting cross validation
2025-04-19 19:58:35,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:36,948:INFO:Calculating mean and std
2025-04-19 19:58:36,949:INFO:Creating metrics dataframe
2025-04-19 19:58:37,236:INFO:Uploading results into container
2025-04-19 19:58:37,238:INFO:Uploading model into container now
2025-04-19 19:58:37,239:INFO:_master_model_container: 8
2025-04-19 19:58:37,239:INFO:_display_container: 2
2025-04-19 19:58:37,239:INFO:BayesianRidge()
2025-04-19 19:58:37,239:INFO:create_model() successfully completed......................................
2025-04-19 19:58:37,389:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:37,389:INFO:Creating metrics dataframe
2025-04-19 19:58:37,396:INFO:Initializing Passive Aggressive Regressor
2025-04-19 19:58:37,396:INFO:Total runtime is 0.3163488666216533 minutes
2025-04-19 19:58:37,396:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:37,398:INFO:Initializing create_model()
2025-04-19 19:58:37,398:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:37,398:INFO:Checking exceptions
2025-04-19 19:58:37,398:INFO:Importing libraries
2025-04-19 19:58:37,398:INFO:Copying training dataset
2025-04-19 19:58:37,401:INFO:Defining folds
2025-04-19 19:58:37,401:INFO:Declaring metric variables
2025-04-19 19:58:37,401:INFO:Importing untrained model
2025-04-19 19:58:37,401:INFO:Passive Aggressive Regressor Imported successfully
2025-04-19 19:58:37,401:INFO:Starting cross validation
2025-04-19 19:58:37,413:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:39,009:INFO:Calculating mean and std
2025-04-19 19:58:39,010:INFO:Creating metrics dataframe
2025-04-19 19:58:39,328:INFO:Uploading results into container
2025-04-19 19:58:39,329:INFO:Uploading model into container now
2025-04-19 19:58:39,329:INFO:_master_model_container: 9
2025-04-19 19:58:39,329:INFO:_display_container: 2
2025-04-19 19:58:39,329:INFO:PassiveAggressiveRegressor(random_state=42)
2025-04-19 19:58:39,329:INFO:create_model() successfully completed......................................
2025-04-19 19:58:39,503:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:39,504:INFO:Creating metrics dataframe
2025-04-19 19:58:39,520:INFO:Initializing Huber Regressor
2025-04-19 19:58:39,520:INFO:Total runtime is 0.35174815654754643 minutes
2025-04-19 19:58:39,521:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:39,521:INFO:Initializing create_model()
2025-04-19 19:58:39,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:39,522:INFO:Checking exceptions
2025-04-19 19:58:39,522:INFO:Importing libraries
2025-04-19 19:58:39,522:INFO:Copying training dataset
2025-04-19 19:58:39,531:INFO:Defining folds
2025-04-19 19:58:39,531:INFO:Declaring metric variables
2025-04-19 19:58:39,531:INFO:Importing untrained model
2025-04-19 19:58:39,532:INFO:Huber Regressor Imported successfully
2025-04-19 19:58:39,533:INFO:Starting cross validation
2025-04-19 19:58:39,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:41,265:INFO:Calculating mean and std
2025-04-19 19:58:41,268:INFO:Creating metrics dataframe
2025-04-19 19:58:41,573:INFO:Uploading results into container
2025-04-19 19:58:41,575:INFO:Uploading model into container now
2025-04-19 19:58:41,577:INFO:_master_model_container: 10
2025-04-19 19:58:41,577:INFO:_display_container: 2
2025-04-19 19:58:41,577:INFO:HuberRegressor()
2025-04-19 19:58:41,577:INFO:create_model() successfully completed......................................
2025-04-19 19:58:41,759:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:41,759:INFO:Creating metrics dataframe
2025-04-19 19:58:41,771:INFO:Initializing K Neighbors Regressor
2025-04-19 19:58:41,771:INFO:Total runtime is 0.38925676743189497 minutes
2025-04-19 19:58:41,771:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:41,772:INFO:Initializing create_model()
2025-04-19 19:58:41,772:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:41,772:INFO:Checking exceptions
2025-04-19 19:58:41,772:INFO:Importing libraries
2025-04-19 19:58:41,772:INFO:Copying training dataset
2025-04-19 19:58:41,777:INFO:Defining folds
2025-04-19 19:58:41,777:INFO:Declaring metric variables
2025-04-19 19:58:41,777:INFO:Importing untrained model
2025-04-19 19:58:41,778:INFO:K Neighbors Regressor Imported successfully
2025-04-19 19:58:41,778:INFO:Starting cross validation
2025-04-19 19:58:41,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:43,578:INFO:Calculating mean and std
2025-04-19 19:58:43,579:INFO:Creating metrics dataframe
2025-04-19 19:58:43,877:INFO:Uploading results into container
2025-04-19 19:58:43,878:INFO:Uploading model into container now
2025-04-19 19:58:43,879:INFO:_master_model_container: 11
2025-04-19 19:58:43,879:INFO:_display_container: 2
2025-04-19 19:58:43,879:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-19 19:58:43,879:INFO:create_model() successfully completed......................................
2025-04-19 19:58:44,038:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:44,038:INFO:Creating metrics dataframe
2025-04-19 19:58:44,052:INFO:Initializing Decision Tree Regressor
2025-04-19 19:58:44,052:INFO:Total runtime is 0.4272794365882874 minutes
2025-04-19 19:58:44,053:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:44,053:INFO:Initializing create_model()
2025-04-19 19:58:44,053:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:44,054:INFO:Checking exceptions
2025-04-19 19:58:44,054:INFO:Importing libraries
2025-04-19 19:58:44,054:INFO:Copying training dataset
2025-04-19 19:58:44,061:INFO:Defining folds
2025-04-19 19:58:44,061:INFO:Declaring metric variables
2025-04-19 19:58:44,062:INFO:Importing untrained model
2025-04-19 19:58:44,062:INFO:Decision Tree Regressor Imported successfully
2025-04-19 19:58:44,062:INFO:Starting cross validation
2025-04-19 19:58:44,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:45,878:INFO:Calculating mean and std
2025-04-19 19:58:45,878:INFO:Creating metrics dataframe
2025-04-19 19:58:46,129:INFO:Uploading results into container
2025-04-19 19:58:46,132:INFO:Uploading model into container now
2025-04-19 19:58:46,133:INFO:_master_model_container: 12
2025-04-19 19:58:46,133:INFO:_display_container: 2
2025-04-19 19:58:46,134:INFO:DecisionTreeRegressor(random_state=42)
2025-04-19 19:58:46,134:INFO:create_model() successfully completed......................................
2025-04-19 19:58:46,288:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:46,288:INFO:Creating metrics dataframe
2025-04-19 19:58:46,294:INFO:Initializing Random Forest Regressor
2025-04-19 19:58:46,294:INFO:Total runtime is 0.46463956832885744 minutes
2025-04-19 19:58:46,295:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:46,295:INFO:Initializing create_model()
2025-04-19 19:58:46,295:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:46,295:INFO:Checking exceptions
2025-04-19 19:58:46,295:INFO:Importing libraries
2025-04-19 19:58:46,295:INFO:Copying training dataset
2025-04-19 19:58:46,299:INFO:Defining folds
2025-04-19 19:58:46,300:INFO:Declaring metric variables
2025-04-19 19:58:46,300:INFO:Importing untrained model
2025-04-19 19:58:46,301:INFO:Random Forest Regressor Imported successfully
2025-04-19 19:58:46,301:INFO:Starting cross validation
2025-04-19 19:58:46,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:48,510:INFO:Calculating mean and std
2025-04-19 19:58:48,511:INFO:Creating metrics dataframe
2025-04-19 19:58:48,733:INFO:Uploading results into container
2025-04-19 19:58:48,734:INFO:Uploading model into container now
2025-04-19 19:58:48,734:INFO:_master_model_container: 13
2025-04-19 19:58:48,734:INFO:_display_container: 2
2025-04-19 19:58:48,736:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:58:48,736:INFO:create_model() successfully completed......................................
2025-04-19 19:58:48,896:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:48,896:INFO:Creating metrics dataframe
2025-04-19 19:58:48,903:INFO:Initializing Extra Trees Regressor
2025-04-19 19:58:48,903:INFO:Total runtime is 0.5081275780995687 minutes
2025-04-19 19:58:48,904:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:48,904:INFO:Initializing create_model()
2025-04-19 19:58:48,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:48,904:INFO:Checking exceptions
2025-04-19 19:58:48,904:INFO:Importing libraries
2025-04-19 19:58:48,904:INFO:Copying training dataset
2025-04-19 19:58:48,909:INFO:Defining folds
2025-04-19 19:58:48,909:INFO:Declaring metric variables
2025-04-19 19:58:48,909:INFO:Importing untrained model
2025-04-19 19:58:48,909:INFO:Extra Trees Regressor Imported successfully
2025-04-19 19:58:48,910:INFO:Starting cross validation
2025-04-19 19:58:48,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:51,252:INFO:Calculating mean and std
2025-04-19 19:58:51,253:INFO:Creating metrics dataframe
2025-04-19 19:58:51,572:INFO:Uploading results into container
2025-04-19 19:58:51,574:INFO:Uploading model into container now
2025-04-19 19:58:51,574:INFO:_master_model_container: 14
2025-04-19 19:58:51,576:INFO:_display_container: 2
2025-04-19 19:58:51,576:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:58:51,576:INFO:create_model() successfully completed......................................
2025-04-19 19:58:51,731:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:51,731:INFO:Creating metrics dataframe
2025-04-19 19:58:51,737:INFO:Initializing AdaBoost Regressor
2025-04-19 19:58:51,737:INFO:Total runtime is 0.5553517818450927 minutes
2025-04-19 19:58:51,738:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:51,738:INFO:Initializing create_model()
2025-04-19 19:58:51,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:51,738:INFO:Checking exceptions
2025-04-19 19:58:51,738:INFO:Importing libraries
2025-04-19 19:58:51,738:INFO:Copying training dataset
2025-04-19 19:58:51,742:INFO:Defining folds
2025-04-19 19:58:51,743:INFO:Declaring metric variables
2025-04-19 19:58:51,743:INFO:Importing untrained model
2025-04-19 19:58:51,744:INFO:AdaBoost Regressor Imported successfully
2025-04-19 19:58:51,744:INFO:Starting cross validation
2025-04-19 19:58:51,756:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:53,683:INFO:Calculating mean and std
2025-04-19 19:58:53,683:INFO:Creating metrics dataframe
2025-04-19 19:58:54,046:INFO:Uploading results into container
2025-04-19 19:58:54,048:INFO:Uploading model into container now
2025-04-19 19:58:54,049:INFO:_master_model_container: 15
2025-04-19 19:58:54,049:INFO:_display_container: 2
2025-04-19 19:58:54,049:INFO:AdaBoostRegressor(random_state=42)
2025-04-19 19:58:54,049:INFO:create_model() successfully completed......................................
2025-04-19 19:58:54,175:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:54,175:INFO:Creating metrics dataframe
2025-04-19 19:58:54,188:INFO:Initializing Gradient Boosting Regressor
2025-04-19 19:58:54,188:INFO:Total runtime is 0.5962149302164713 minutes
2025-04-19 19:58:54,188:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:54,190:INFO:Initializing create_model()
2025-04-19 19:58:54,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:54,190:INFO:Checking exceptions
2025-04-19 19:58:54,190:INFO:Importing libraries
2025-04-19 19:58:54,190:INFO:Copying training dataset
2025-04-19 19:58:54,195:INFO:Defining folds
2025-04-19 19:58:54,195:INFO:Declaring metric variables
2025-04-19 19:58:54,196:INFO:Importing untrained model
2025-04-19 19:58:54,197:INFO:Gradient Boosting Regressor Imported successfully
2025-04-19 19:58:54,197:INFO:Starting cross validation
2025-04-19 19:58:54,213:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:56,038:INFO:Calculating mean and std
2025-04-19 19:58:56,039:INFO:Creating metrics dataframe
2025-04-19 19:58:56,338:INFO:Uploading results into container
2025-04-19 19:58:56,340:INFO:Uploading model into container now
2025-04-19 19:58:56,341:INFO:_master_model_container: 16
2025-04-19 19:58:56,342:INFO:_display_container: 2
2025-04-19 19:58:56,342:INFO:GradientBoostingRegressor(random_state=42)
2025-04-19 19:58:56,342:INFO:create_model() successfully completed......................................
2025-04-19 19:58:56,502:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:56,502:INFO:Creating metrics dataframe
2025-04-19 19:58:56,513:INFO:Initializing Light Gradient Boosting Machine
2025-04-19 19:58:56,513:INFO:Total runtime is 0.6349568009376525 minutes
2025-04-19 19:58:56,513:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:56,514:INFO:Initializing create_model()
2025-04-19 19:58:56,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:56,514:INFO:Checking exceptions
2025-04-19 19:58:56,514:INFO:Importing libraries
2025-04-19 19:58:56,514:INFO:Copying training dataset
2025-04-19 19:58:56,518:INFO:Defining folds
2025-04-19 19:58:56,518:INFO:Declaring metric variables
2025-04-19 19:58:56,520:INFO:Importing untrained model
2025-04-19 19:58:56,520:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-19 19:58:56,520:INFO:Starting cross validation
2025-04-19 19:58:56,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:58:58,746:INFO:Calculating mean and std
2025-04-19 19:58:58,746:INFO:Creating metrics dataframe
2025-04-19 19:58:59,044:INFO:Uploading results into container
2025-04-19 19:58:59,045:INFO:Uploading model into container now
2025-04-19 19:58:59,045:INFO:_master_model_container: 17
2025-04-19 19:58:59,046:INFO:_display_container: 2
2025-04-19 19:58:59,047:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-04-19 19:58:59,047:INFO:create_model() successfully completed......................................
2025-04-19 19:58:59,235:INFO:SubProcess create_model() end ==================================
2025-04-19 19:58:59,235:INFO:Creating metrics dataframe
2025-04-19 19:58:59,243:INFO:Initializing Dummy Regressor
2025-04-19 19:58:59,243:INFO:Total runtime is 0.6804616610209147 minutes
2025-04-19 19:58:59,244:INFO:SubProcess create_model() called ==================================
2025-04-19 19:58:59,244:INFO:Initializing create_model()
2025-04-19 19:58:59,244:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E110340>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:58:59,244:INFO:Checking exceptions
2025-04-19 19:58:59,244:INFO:Importing libraries
2025-04-19 19:58:59,244:INFO:Copying training dataset
2025-04-19 19:58:59,251:INFO:Defining folds
2025-04-19 19:58:59,252:INFO:Declaring metric variables
2025-04-19 19:58:59,252:INFO:Importing untrained model
2025-04-19 19:58:59,252:INFO:Dummy Regressor Imported successfully
2025-04-19 19:58:59,253:INFO:Starting cross validation
2025-04-19 19:58:59,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:01,058:INFO:Calculating mean and std
2025-04-19 19:59:01,059:INFO:Creating metrics dataframe
2025-04-19 19:59:01,360:INFO:Uploading results into container
2025-04-19 19:59:01,362:INFO:Uploading model into container now
2025-04-19 19:59:01,363:INFO:_master_model_container: 18
2025-04-19 19:59:01,364:INFO:_display_container: 2
2025-04-19 19:59:01,364:INFO:DummyRegressor()
2025-04-19 19:59:01,364:INFO:create_model() successfully completed......................................
2025-04-19 19:59:01,504:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:01,504:INFO:Creating metrics dataframe
2025-04-19 19:59:01,515:INFO:Initializing create_model()
2025-04-19 19:59:01,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:01,515:INFO:Checking exceptions
2025-04-19 19:59:01,516:INFO:Importing libraries
2025-04-19 19:59:01,516:INFO:Copying training dataset
2025-04-19 19:59:01,520:INFO:Defining folds
2025-04-19 19:59:01,520:INFO:Declaring metric variables
2025-04-19 19:59:01,520:INFO:Importing untrained model
2025-04-19 19:59:01,521:INFO:Declaring custom model
2025-04-19 19:59:01,521:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 19:59:01,542:INFO:Cross validation set to False
2025-04-19 19:59:01,542:INFO:Fitting Model
2025-04-19 19:59:01,766:INFO:OrthogonalMatchingPursuit()
2025-04-19 19:59:01,766:INFO:create_model() successfully completed......................................
2025-04-19 19:59:01,888:INFO:Initializing create_model()
2025-04-19 19:59:01,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=Ridge(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:01,888:INFO:Checking exceptions
2025-04-19 19:59:01,888:INFO:Importing libraries
2025-04-19 19:59:01,888:INFO:Copying training dataset
2025-04-19 19:59:01,890:INFO:Defining folds
2025-04-19 19:59:01,890:INFO:Declaring metric variables
2025-04-19 19:59:01,891:INFO:Importing untrained model
2025-04-19 19:59:01,891:INFO:Declaring custom model
2025-04-19 19:59:01,891:INFO:Ridge Regression Imported successfully
2025-04-19 19:59:01,902:INFO:Cross validation set to False
2025-04-19 19:59:01,902:INFO:Fitting Model
2025-04-19 19:59:02,121:INFO:Ridge(random_state=42)
2025-04-19 19:59:02,121:INFO:create_model() successfully completed......................................
2025-04-19 19:59:02,252:INFO:Initializing create_model()
2025-04-19 19:59:02,252:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:02,252:INFO:Checking exceptions
2025-04-19 19:59:02,253:INFO:Importing libraries
2025-04-19 19:59:02,253:INFO:Copying training dataset
2025-04-19 19:59:02,256:INFO:Defining folds
2025-04-19 19:59:02,256:INFO:Declaring metric variables
2025-04-19 19:59:02,256:INFO:Importing untrained model
2025-04-19 19:59:02,256:INFO:Declaring custom model
2025-04-19 19:59:02,256:INFO:Linear Regression Imported successfully
2025-04-19 19:59:02,264:INFO:Cross validation set to False
2025-04-19 19:59:02,264:INFO:Fitting Model
2025-04-19 19:59:02,506:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:59:02,506:INFO:create_model() successfully completed......................................
2025-04-19 19:59:02,649:INFO:_master_model_container: 18
2025-04-19 19:59:02,649:INFO:_display_container: 2
2025-04-19 19:59:02,650:INFO:[OrthogonalMatchingPursuit(), Ridge(random_state=42), LinearRegression(n_jobs=-1)]
2025-04-19 19:59:02,650:INFO:compare_models() successfully completed......................................
2025-04-19 19:59:02,651:INFO:Initializing tune_model()
2025-04-19 19:59:02,651:INFO:tune_model(estimator=OrthogonalMatchingPursuit(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>)
2025-04-19 19:59:02,651:INFO:Checking exceptions
2025-04-19 19:59:02,654:INFO:Copying training dataset
2025-04-19 19:59:02,658:INFO:Checking base model
2025-04-19 19:59:02,659:INFO:Base model : Orthogonal Matching Pursuit
2025-04-19 19:59:02,659:INFO:Declaring metric variables
2025-04-19 19:59:02,659:INFO:Defining Hyperparameters
2025-04-19 19:59:02,659:INFO:10 is bigger than total combinations 6, setting search algorithm to grid
2025-04-19 19:59:02,801:INFO:Tuning with n_jobs=-1
2025-04-19 19:59:02,801:INFO:Initializing GridSearchCV
2025-04-19 19:59:13,817:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__n_nonzero_coefs': 1}
2025-04-19 19:59:13,818:INFO:Hyperparameter search completed
2025-04-19 19:59:13,818:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:13,818:INFO:Initializing create_model()
2025-04-19 19:59:13,818:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0C43760>, model_only=True, return_train_score=False, kwargs={'fit_intercept': False, 'n_nonzero_coefs': 1})
2025-04-19 19:59:13,818:INFO:Checking exceptions
2025-04-19 19:59:13,818:INFO:Importing libraries
2025-04-19 19:59:13,818:INFO:Copying training dataset
2025-04-19 19:59:13,824:INFO:Defining folds
2025-04-19 19:59:13,826:INFO:Declaring metric variables
2025-04-19 19:59:13,826:INFO:Importing untrained model
2025-04-19 19:59:13,826:INFO:Declaring custom model
2025-04-19 19:59:13,826:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 19:59:13,826:INFO:Starting cross validation
2025-04-19 19:59:13,838:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:15,313:INFO:Calculating mean and std
2025-04-19 19:59:15,314:INFO:Creating metrics dataframe
2025-04-19 19:59:15,316:INFO:Finalizing model
2025-04-19 19:59:15,708:INFO:Uploading results into container
2025-04-19 19:59:15,710:INFO:Uploading model into container now
2025-04-19 19:59:15,711:INFO:_master_model_container: 19
2025-04-19 19:59:15,711:INFO:_display_container: 3
2025-04-19 19:59:15,711:INFO:OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1)
2025-04-19 19:59:15,711:INFO:create_model() successfully completed......................................
2025-04-19 19:59:15,850:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:15,850:INFO:choose_better activated
2025-04-19 19:59:15,851:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:15,851:INFO:Initializing create_model()
2025-04-19 19:59:15,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=OrthogonalMatchingPursuit(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:15,851:INFO:Checking exceptions
2025-04-19 19:59:15,852:INFO:Importing libraries
2025-04-19 19:59:15,852:INFO:Copying training dataset
2025-04-19 19:59:15,854:INFO:Defining folds
2025-04-19 19:59:15,854:INFO:Declaring metric variables
2025-04-19 19:59:15,854:INFO:Importing untrained model
2025-04-19 19:59:15,854:INFO:Declaring custom model
2025-04-19 19:59:15,855:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 19:59:15,855:INFO:Starting cross validation
2025-04-19 19:59:15,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:17,442:INFO:Calculating mean and std
2025-04-19 19:59:17,443:INFO:Creating metrics dataframe
2025-04-19 19:59:17,445:INFO:Finalizing model
2025-04-19 19:59:17,855:INFO:Uploading results into container
2025-04-19 19:59:17,856:INFO:Uploading model into container now
2025-04-19 19:59:17,857:INFO:_master_model_container: 20
2025-04-19 19:59:17,857:INFO:_display_container: 4
2025-04-19 19:59:17,857:INFO:OrthogonalMatchingPursuit()
2025-04-19 19:59:17,857:INFO:create_model() successfully completed......................................
2025-04-19 19:59:17,978:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:17,979:INFO:OrthogonalMatchingPursuit() result for R2 is -0.5964
2025-04-19 19:59:17,979:INFO:OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1) result for R2 is -0.5921
2025-04-19 19:59:17,980:INFO:OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1) is best model
2025-04-19 19:59:17,980:INFO:choose_better completed
2025-04-19 19:59:17,996:INFO:_master_model_container: 20
2025-04-19 19:59:17,996:INFO:_display_container: 3
2025-04-19 19:59:17,996:INFO:OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1)
2025-04-19 19:59:17,996:INFO:tune_model() successfully completed......................................
2025-04-19 19:59:18,252:INFO:Initializing tune_model()
2025-04-19 19:59:18,252:INFO:tune_model(estimator=Ridge(random_state=42), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>)
2025-04-19 19:59:18,252:INFO:Checking exceptions
2025-04-19 19:59:18,254:INFO:Copying training dataset
2025-04-19 19:59:18,257:INFO:Checking base model
2025-04-19 19:59:18,257:INFO:Base model : Ridge Regression
2025-04-19 19:59:18,257:INFO:Declaring metric variables
2025-04-19 19:59:18,257:INFO:Defining Hyperparameters
2025-04-19 19:59:18,401:INFO:Tuning with n_jobs=-1
2025-04-19 19:59:18,401:INFO:Initializing RandomizedSearchCV
2025-04-19 19:59:37,815:INFO:best_params: {'actual_estimator__fit_intercept': False, 'actual_estimator__alpha': 7.3}
2025-04-19 19:59:37,815:INFO:Hyperparameter search completed
2025-04-19 19:59:37,815:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:37,817:INFO:Initializing create_model()
2025-04-19 19:59:37,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=Ridge(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002ADA0BBD9F0>, model_only=True, return_train_score=False, kwargs={'fit_intercept': False, 'alpha': 7.3})
2025-04-19 19:59:37,817:INFO:Checking exceptions
2025-04-19 19:59:37,817:INFO:Importing libraries
2025-04-19 19:59:37,817:INFO:Copying training dataset
2025-04-19 19:59:37,822:INFO:Defining folds
2025-04-19 19:59:37,822:INFO:Declaring metric variables
2025-04-19 19:59:37,823:INFO:Importing untrained model
2025-04-19 19:59:37,823:INFO:Declaring custom model
2025-04-19 19:59:37,824:INFO:Ridge Regression Imported successfully
2025-04-19 19:59:37,824:INFO:Starting cross validation
2025-04-19 19:59:37,835:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:39,444:INFO:Calculating mean and std
2025-04-19 19:59:39,444:INFO:Creating metrics dataframe
2025-04-19 19:59:39,447:INFO:Finalizing model
2025-04-19 19:59:39,816:INFO:Uploading results into container
2025-04-19 19:59:39,817:INFO:Uploading model into container now
2025-04-19 19:59:39,817:INFO:_master_model_container: 21
2025-04-19 19:59:39,817:INFO:_display_container: 4
2025-04-19 19:59:39,818:INFO:Ridge(alpha=7.3, fit_intercept=False, random_state=42)
2025-04-19 19:59:39,818:INFO:create_model() successfully completed......................................
2025-04-19 19:59:39,938:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:39,940:INFO:choose_better activated
2025-04-19 19:59:39,940:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:39,941:INFO:Initializing create_model()
2025-04-19 19:59:39,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=Ridge(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:39,941:INFO:Checking exceptions
2025-04-19 19:59:39,942:INFO:Importing libraries
2025-04-19 19:59:39,942:INFO:Copying training dataset
2025-04-19 19:59:39,944:INFO:Defining folds
2025-04-19 19:59:39,944:INFO:Declaring metric variables
2025-04-19 19:59:39,945:INFO:Importing untrained model
2025-04-19 19:59:39,945:INFO:Declaring custom model
2025-04-19 19:59:39,945:INFO:Ridge Regression Imported successfully
2025-04-19 19:59:39,945:INFO:Starting cross validation
2025-04-19 19:59:39,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:41,465:INFO:Calculating mean and std
2025-04-19 19:59:41,465:INFO:Creating metrics dataframe
2025-04-19 19:59:41,467:INFO:Finalizing model
2025-04-19 19:59:41,904:INFO:Uploading results into container
2025-04-19 19:59:41,906:INFO:Uploading model into container now
2025-04-19 19:59:41,907:INFO:_master_model_container: 22
2025-04-19 19:59:41,907:INFO:_display_container: 5
2025-04-19 19:59:41,907:INFO:Ridge(random_state=42)
2025-04-19 19:59:41,907:INFO:create_model() successfully completed......................................
2025-04-19 19:59:42,031:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:42,032:INFO:Ridge(random_state=42) result for R2 is -0.6814
2025-04-19 19:59:42,033:INFO:Ridge(alpha=7.3, fit_intercept=False, random_state=42) result for R2 is -0.6517
2025-04-19 19:59:42,033:INFO:Ridge(alpha=7.3, fit_intercept=False, random_state=42) is best model
2025-04-19 19:59:42,033:INFO:choose_better completed
2025-04-19 19:59:42,042:INFO:_master_model_container: 22
2025-04-19 19:59:42,042:INFO:_display_container: 4
2025-04-19 19:59:42,042:INFO:Ridge(alpha=7.3, fit_intercept=False, random_state=42)
2025-04-19 19:59:42,043:INFO:tune_model() successfully completed......................................
2025-04-19 19:59:42,310:INFO:Initializing tune_model()
2025-04-19 19:59:42,310:INFO:tune_model(estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>)
2025-04-19 19:59:42,310:INFO:Checking exceptions
2025-04-19 19:59:42,317:INFO:Copying training dataset
2025-04-19 19:59:42,322:INFO:Checking base model
2025-04-19 19:59:42,322:INFO:Base model : Linear Regression
2025-04-19 19:59:42,323:INFO:Declaring metric variables
2025-04-19 19:59:42,323:INFO:Defining Hyperparameters
2025-04-19 19:59:42,323:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2025-04-19 19:59:42,493:INFO:Tuning with n_jobs=-1
2025-04-19 19:59:42,493:INFO:Initializing GridSearchCV
2025-04-19 19:59:45,895:INFO:best_params: {'actual_estimator__fit_intercept': False}
2025-04-19 19:59:45,896:INFO:Hyperparameter search completed
2025-04-19 19:59:45,896:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:45,896:INFO:Initializing create_model()
2025-04-19 19:59:45,897:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9E057460>, model_only=True, return_train_score=False, kwargs={'fit_intercept': False})
2025-04-19 19:59:45,897:INFO:Checking exceptions
2025-04-19 19:59:45,897:INFO:Importing libraries
2025-04-19 19:59:45,897:INFO:Copying training dataset
2025-04-19 19:59:45,901:INFO:Defining folds
2025-04-19 19:59:45,902:INFO:Declaring metric variables
2025-04-19 19:59:45,902:INFO:Importing untrained model
2025-04-19 19:59:45,903:INFO:Declaring custom model
2025-04-19 19:59:45,903:INFO:Linear Regression Imported successfully
2025-04-19 19:59:45,904:INFO:Starting cross validation
2025-04-19 19:59:45,916:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:47,414:INFO:Calculating mean and std
2025-04-19 19:59:47,416:INFO:Creating metrics dataframe
2025-04-19 19:59:47,418:INFO:Finalizing model
2025-04-19 19:59:47,794:INFO:Uploading results into container
2025-04-19 19:59:47,797:INFO:Uploading model into container now
2025-04-19 19:59:47,797:INFO:_master_model_container: 23
2025-04-19 19:59:47,798:INFO:_display_container: 5
2025-04-19 19:59:47,798:INFO:LinearRegression(fit_intercept=False, n_jobs=-1)
2025-04-19 19:59:47,798:INFO:create_model() successfully completed......................................
2025-04-19 19:59:47,923:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:47,923:INFO:choose_better activated
2025-04-19 19:59:47,924:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:47,924:INFO:Initializing create_model()
2025-04-19 19:59:47,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:47,924:INFO:Checking exceptions
2025-04-19 19:59:47,925:INFO:Importing libraries
2025-04-19 19:59:47,925:INFO:Copying training dataset
2025-04-19 19:59:47,927:INFO:Defining folds
2025-04-19 19:59:47,928:INFO:Declaring metric variables
2025-04-19 19:59:47,928:INFO:Importing untrained model
2025-04-19 19:59:47,928:INFO:Declaring custom model
2025-04-19 19:59:47,928:INFO:Linear Regression Imported successfully
2025-04-19 19:59:47,928:INFO:Starting cross validation
2025-04-19 19:59:47,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:49,361:INFO:Calculating mean and std
2025-04-19 19:59:49,362:INFO:Creating metrics dataframe
2025-04-19 19:59:49,365:INFO:Finalizing model
2025-04-19 19:59:49,723:INFO:Uploading results into container
2025-04-19 19:59:49,724:INFO:Uploading model into container now
2025-04-19 19:59:49,724:INFO:_master_model_container: 24
2025-04-19 19:59:49,724:INFO:_display_container: 6
2025-04-19 19:59:49,725:INFO:LinearRegression(n_jobs=-1)
2025-04-19 19:59:49,725:INFO:create_model() successfully completed......................................
2025-04-19 19:59:49,846:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:49,848:INFO:LinearRegression(n_jobs=-1) result for R2 is -0.6847
2025-04-19 19:59:49,849:INFO:LinearRegression(fit_intercept=False, n_jobs=-1) result for R2 is -0.6716
2025-04-19 19:59:49,849:INFO:LinearRegression(fit_intercept=False, n_jobs=-1) is best model
2025-04-19 19:59:49,849:INFO:choose_better completed
2025-04-19 19:59:49,866:INFO:_master_model_container: 24
2025-04-19 19:59:49,867:INFO:_display_container: 5
2025-04-19 19:59:49,867:INFO:LinearRegression(fit_intercept=False, n_jobs=-1)
2025-04-19 19:59:49,867:INFO:tune_model() successfully completed......................................
2025-04-19 19:59:50,089:INFO:Initializing blend_models()
2025-04-19 19:59:50,089:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator_list=[OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1), Ridge(alpha=7.3, fit_intercept=False, random_state=42), LinearRegression(fit_intercept=False, n_jobs=-1)], fold=None, round=4, choose_better=False, optimize=R2, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 19:59:50,089:INFO:Checking exceptions
2025-04-19 19:59:50,092:INFO:Importing libraries
2025-04-19 19:59:50,092:INFO:Copying training dataset
2025-04-19 19:59:50,092:INFO:Getting model names
2025-04-19 19:59:50,092:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:50,097:INFO:Initializing create_model()
2025-04-19 19:59:50,098:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9B2556F0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:50,098:INFO:Checking exceptions
2025-04-19 19:59:50,098:INFO:Importing libraries
2025-04-19 19:59:50,098:INFO:Copying training dataset
2025-04-19 19:59:50,103:INFO:Defining folds
2025-04-19 19:59:50,103:INFO:Declaring metric variables
2025-04-19 19:59:50,104:INFO:Importing untrained model
2025-04-19 19:59:50,104:INFO:Declaring custom model
2025-04-19 19:59:50,106:INFO:Voting Regressor Imported successfully
2025-04-19 19:59:50,107:INFO:Starting cross validation
2025-04-19 19:59:50,117:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:51,756:INFO:Calculating mean and std
2025-04-19 19:59:51,757:INFO:Creating metrics dataframe
2025-04-19 19:59:51,758:INFO:Finalizing model
2025-04-19 19:59:52,119:INFO:Uploading results into container
2025-04-19 19:59:52,120:INFO:Uploading model into container now
2025-04-19 19:59:52,121:INFO:_master_model_container: 25
2025-04-19 19:59:52,121:INFO:_display_container: 6
2025-04-19 19:59:52,126:INFO:VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1)
2025-04-19 19:59:52,126:INFO:create_model() successfully completed......................................
2025-04-19 19:59:52,256:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:52,270:INFO:_master_model_container: 25
2025-04-19 19:59:52,272:INFO:_display_container: 6
2025-04-19 19:59:52,276:INFO:VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1)
2025-04-19 19:59:52,276:INFO:blend_models() successfully completed......................................
2025-04-19 19:59:52,398:INFO:Initializing stack_models()
2025-04-19 19:59:52,398:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator_list=[OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1), Ridge(alpha=7.3, fit_intercept=False, random_state=42), LinearRegression(fit_intercept=False, n_jobs=-1)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 19:59:52,398:INFO:Checking exceptions
2025-04-19 19:59:52,399:INFO:Defining meta model
2025-04-19 19:59:52,401:INFO:Getting model names
2025-04-19 19:59:52,402:INFO:[('Orthogonal Matching Pursuit', OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1)), ('Ridge Regression', Ridge(alpha=7.3, fit_intercept=False, random_state=42)), ('Linear Regression', LinearRegression(fit_intercept=False, n_jobs=-1))]
2025-04-19 19:59:52,402:INFO:SubProcess create_model() called ==================================
2025-04-19 19:59:52,405:INFO:Initializing create_model()
2025-04-19 19:59:52,405:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, estimator=StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AD9F353AF0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 19:59:52,405:INFO:Checking exceptions
2025-04-19 19:59:52,405:INFO:Importing libraries
2025-04-19 19:59:52,405:INFO:Copying training dataset
2025-04-19 19:59:52,408:INFO:Defining folds
2025-04-19 19:59:52,408:INFO:Declaring metric variables
2025-04-19 19:59:52,408:INFO:Importing untrained model
2025-04-19 19:59:52,408:INFO:Declaring custom model
2025-04-19 19:59:52,410:INFO:Stacking Regressor Imported successfully
2025-04-19 19:59:52,411:INFO:Starting cross validation
2025-04-19 19:59:52,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 19:59:54,167:INFO:Calculating mean and std
2025-04-19 19:59:54,168:INFO:Creating metrics dataframe
2025-04-19 19:59:54,170:INFO:Finalizing model
2025-04-19 19:59:54,576:INFO:Uploading results into container
2025-04-19 19:59:54,577:INFO:Uploading model into container now
2025-04-19 19:59:54,577:INFO:_master_model_container: 26
2025-04-19 19:59:54,577:INFO:_display_container: 7
2025-04-19 19:59:54,583:INFO:StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 19:59:54,583:INFO:create_model() successfully completed......................................
2025-04-19 19:59:54,725:INFO:SubProcess create_model() end ==================================
2025-04-19 19:59:54,736:INFO:_master_model_container: 26
2025-04-19 19:59:54,736:INFO:_display_container: 7
2025-04-19 19:59:54,742:INFO:StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 19:59:54,742:INFO:stack_models() successfully completed......................................
2025-04-19 19:59:54,884:INFO:Initializing save_model()
2025-04-19 19:59:54,884:INFO:save_model(model=VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1), model_name=models/model_1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:59:54,884:INFO:Adding model into prep_pipe
2025-04-19 19:59:54,948:INFO:models/model_1.pkl saved in current working directory
2025-04-19 19:59:54,964:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                                              OrthogonalMatchingPursuit(fit_intercept=False,
                                                                        n_nonzero_coefs=1)),
                                             ('Ridge Regression',
                                              Ridge(alpha=7.3,
                                                    fit_intercept=False,
                                                    random_state=42)),
                                             ('Linear Regression',
                                              LinearRegression(fit_intercept=False,
                                                               n_jobs=-1))],
                                 n_jobs=-1))])
2025-04-19 19:59:54,964:INFO:save_model() successfully completed......................................
2025-04-19 19:59:55,208:INFO:Initializing plot_model()
2025-04-19 19:59:55,208:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,208:INFO:Checking exceptions
2025-04-19 19:59:55,213:INFO:Initializing plot_model()
2025-04-19 19:59:55,213:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,213:INFO:Checking exceptions
2025-04-19 19:59:55,221:INFO:Initializing plot_model()
2025-04-19 19:59:55,221:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,221:INFO:Checking exceptions
2025-04-19 19:59:55,226:INFO:Initializing plot_model()
2025-04-19 19:59:55,226:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Orthogonal Matching Pursuit',
                             OrthogonalMatchingPursuit(fit_intercept=False,
                                                       n_nonzero_coefs=1)),
                            ('Ridge Regression',
                             Ridge(alpha=7.3, fit_intercept=False,
                                   random_state=42)),
                            ('Linear Regression',
                             LinearRegression(fit_intercept=False, n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,226:INFO:Checking exceptions
2025-04-19 19:59:55,244:INFO:Initializing save_model()
2025-04-19 19:59:55,244:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), model_name=models/model_2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:59:55,244:INFO:Adding model into prep_pipe
2025-04-19 19:59:55,327:INFO:models/model_2.pkl saved in current working directory
2025-04-19 19:59:55,344:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_...
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Orthogonal Matching Pursuit',
                                                OrthogonalMatchingPursuit(fit_intercept=False,
                                                                          n_nonzero_coefs=1)),
                                               ('Ridge Regression',
                                                Ridge(alpha=7.3,
                                                      fit_intercept=False,
                                                      random_state=42)),
                                               ('Linear Regression',
                                                LinearRegression(fit_intercept=False,
                                                                 n_jobs=-1))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1, passthrough=True))])
2025-04-19 19:59:55,344:INFO:save_model() successfully completed......................................
2025-04-19 19:59:55,696:INFO:Initializing plot_model()
2025-04-19 19:59:55,697:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,697:INFO:Checking exceptions
2025-04-19 19:59:55,702:INFO:Initializing plot_model()
2025-04-19 19:59:55,703:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,703:INFO:Checking exceptions
2025-04-19 19:59:55,706:INFO:Initializing plot_model()
2025-04-19 19:59:55,706:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,706:INFO:Checking exceptions
2025-04-19 19:59:55,710:INFO:Initializing plot_model()
2025-04-19 19:59:55,710:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Orthogonal Matching Pursuit',
                               OrthogonalMatchingPursuit(fit_intercept=False,
                                                         n_nonzero_coefs=1)),
                              ('Ridge Regression',
                               Ridge(alpha=7.3, fit_intercept=False,
                                     random_state=42)),
                              ('Linear Regression',
                               LinearRegression(fit_intercept=False,
                                                n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:55,710:INFO:Checking exceptions
2025-04-19 19:59:55,722:INFO:Initializing save_model()
2025-04-19 19:59:55,722:INFO:save_model(model=OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1), model_name=models/model_3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:59:55,722:INFO:Adding model into prep_pipe
2025-04-19 19:59:55,775:INFO:models/model_3.pkl saved in current working directory
2025-04-19 19:59:55,794:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 OrthogonalMatchingPursuit(fit_intercept=False,
                                           n_nonzero_coefs=1))])
2025-04-19 19:59:55,794:INFO:save_model() successfully completed......................................
2025-04-19 19:59:56,038:INFO:Initializing plot_model()
2025-04-19 19:59:56,040:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,040:INFO:Checking exceptions
2025-04-19 19:59:56,040:INFO:Initializing plot_model()
2025-04-19 19:59:56,040:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,040:INFO:Checking exceptions
2025-04-19 19:59:56,040:INFO:Initializing plot_model()
2025-04-19 19:59:56,040:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,040:INFO:Checking exceptions
2025-04-19 19:59:56,041:INFO:Initializing plot_model()
2025-04-19 19:59:56,041:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=OrthogonalMatchingPursuit(fit_intercept=False, n_nonzero_coefs=1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,041:INFO:Checking exceptions
2025-04-19 19:59:56,053:INFO:Initializing save_model()
2025-04-19 19:59:56,053:INFO:save_model(model=Ridge(alpha=7.3, fit_intercept=False, random_state=42), model_name=models/model_4, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:59:56,053:INFO:Adding model into prep_pipe
2025-04-19 19:59:56,120:INFO:models/model_4.pkl saved in current working directory
2025-04-19 19:59:56,132:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 Ridge(alpha=7.3, fit_intercept=False, random_state=42))])
2025-04-19 19:59:56,132:INFO:save_model() successfully completed......................................
2025-04-19 19:59:56,390:INFO:Initializing plot_model()
2025-04-19 19:59:56,390:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=Ridge(alpha=7.3, fit_intercept=False, random_state=42), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,390:INFO:Checking exceptions
2025-04-19 19:59:56,390:INFO:Initializing plot_model()
2025-04-19 19:59:56,390:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=Ridge(alpha=7.3, fit_intercept=False, random_state=42), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,390:INFO:Checking exceptions
2025-04-19 19:59:56,391:INFO:Initializing plot_model()
2025-04-19 19:59:56,391:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=Ridge(alpha=7.3, fit_intercept=False, random_state=42), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,391:INFO:Checking exceptions
2025-04-19 19:59:56,391:INFO:Initializing plot_model()
2025-04-19 19:59:56,392:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=Ridge(alpha=7.3, fit_intercept=False, random_state=42), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,392:INFO:Checking exceptions
2025-04-19 19:59:56,412:INFO:Initializing save_model()
2025-04-19 19:59:56,412:INFO:save_model(model=LinearRegression(fit_intercept=False, n_jobs=-1), model_name=models/model_5, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 19:59:56,412:INFO:Adding model into prep_pipe
2025-04-19 19:59:56,477:INFO:models/model_5.pkl saved in current working directory
2025-04-19 19:59:56,495:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_1', 'feature_2',
                                             'feature_3'],
                                    transformer=SimpleImputer())),
                ('categorical_...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 LinearRegression(fit_intercept=False, n_jobs=-1))])
2025-04-19 19:59:56,496:INFO:save_model() successfully completed......................................
2025-04-19 19:59:56,743:INFO:Initializing plot_model()
2025-04-19 19:59:56,743:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(fit_intercept=False, n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,743:INFO:Checking exceptions
2025-04-19 19:59:56,743:INFO:Initializing plot_model()
2025-04-19 19:59:56,743:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(fit_intercept=False, n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,743:INFO:Checking exceptions
2025-04-19 19:59:56,743:INFO:Initializing plot_model()
2025-04-19 19:59:56,743:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(fit_intercept=False, n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,744:INFO:Checking exceptions
2025-04-19 19:59:56,744:INFO:Initializing plot_model()
2025-04-19 19:59:56,744:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(fit_intercept=False, n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AD9DF46E00>, system=True)
2025-04-19 19:59:56,744:INFO:Checking exceptions
2025-04-19 20:02:57,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:02:57,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:02:57,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:02:57,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:03:52,167:INFO:PyCaret RegressionExperiment
2025-04-19 20:03:52,167:INFO:Logging name: agn_modeling
2025-04-19 20:03:52,167:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-19 20:03:52,167:INFO:version 3.0.4
2025-04-19 20:03:52,167:INFO:Initializing setup()
2025-04-19 20:03:52,167:INFO:self.USI: 4697
2025-04-19 20:03:52,167:INFO:self._variable_keys: {'n_jobs_param', 'idx', 'fold_groups_param', 'exp_id', 'X_train', 'transform_target_param', 'logging_param', 'X_test', 'html_param', 'y_train', 'memory', 'USI', 'gpu_param', 'fold_generator', 'X', 'log_plots_param', '_available_plots', 'target_param', 'data', 'pipeline', '_ml_usecase', 'y_test', 'exp_name_log', 'seed', 'y', 'fold_shuffle_param', 'gpu_n_jobs_param'}
2025-04-19 20:03:52,167:INFO:Checking environment
2025-04-19 20:03:52,167:INFO:python_version: 3.10.9
2025-04-19 20:03:52,167:INFO:python_build: ('tags/v3.10.9:1dd9be6', 'Dec  6 2022 20:01:21')
2025-04-19 20:03:52,167:INFO:machine: AMD64
2025-04-19 20:03:52,167:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-19 20:03:52,184:INFO:Memory: svmem(total=16952647680, available=4135411712, percent=75.6, used=12817235968, free=4135411712)
2025-04-19 20:03:52,184:INFO:Physical Core: 4
2025-04-19 20:03:52,184:INFO:Logical Core: 8
2025-04-19 20:03:52,184:INFO:Checking libraries
2025-04-19 20:03:52,184:INFO:System:
2025-04-19 20:03:52,184:INFO:    python: 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 20:01:21) [MSC v.1934 64 bit (AMD64)]
2025-04-19 20:03:52,185:INFO:executable: D:\College\agn\venv_py310\Scripts\python.exe
2025-04-19 20:03:52,185:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-19 20:03:52,185:INFO:PyCaret required dependencies:
2025-04-19 20:03:52,216:INFO:                 pip: 25.0.1
2025-04-19 20:03:52,217:INFO:          setuptools: 65.5.0
2025-04-19 20:03:52,217:INFO:             pycaret: 3.0.4
2025-04-19 20:03:52,217:INFO:             IPython: 8.35.0
2025-04-19 20:03:52,217:INFO:          ipywidgets: 8.1.6
2025-04-19 20:03:52,217:INFO:                tqdm: 4.67.1
2025-04-19 20:03:52,217:INFO:               numpy: 1.23.5
2025-04-19 20:03:52,217:INFO:              pandas: 1.5.3
2025-04-19 20:03:52,217:INFO:              jinja2: 3.1.6
2025-04-19 20:03:52,217:INFO:               scipy: 1.10.1
2025-04-19 20:03:52,217:INFO:              joblib: 1.2.0
2025-04-19 20:03:52,218:INFO:             sklearn: 1.2.2
2025-04-19 20:03:52,218:INFO:                pyod: 2.0.4
2025-04-19 20:03:52,218:INFO:            imblearn: 0.12.4
2025-04-19 20:03:52,218:INFO:   category_encoders: 2.7.0
2025-04-19 20:03:52,218:INFO:            lightgbm: 4.6.0
2025-04-19 20:03:52,218:INFO:               numba: 0.60.0
2025-04-19 20:03:52,218:INFO:            requests: 2.32.3
2025-04-19 20:03:52,218:INFO:          matplotlib: 3.7.1
2025-04-19 20:03:52,218:INFO:          scikitplot: 0.3.7
2025-04-19 20:03:52,218:INFO:         yellowbrick: 1.5
2025-04-19 20:03:52,218:INFO:              plotly: 5.24.1
2025-04-19 20:03:52,218:INFO:    plotly-resampler: Not installed
2025-04-19 20:03:52,218:INFO:             kaleido: 0.2.1
2025-04-19 20:03:52,218:INFO:           schemdraw: 0.15
2025-04-19 20:03:52,218:INFO:         statsmodels: 0.14.4
2025-04-19 20:03:52,218:INFO:              sktime: 0.21.1
2025-04-19 20:03:52,218:INFO:               tbats: 1.1.3
2025-04-19 20:03:52,218:INFO:            pmdarima: 2.0.4
2025-04-19 20:03:52,218:INFO:              psutil: 7.0.0
2025-04-19 20:03:52,218:INFO:          markupsafe: 3.0.2
2025-04-19 20:03:52,218:INFO:             pickle5: Not installed
2025-04-19 20:03:52,218:INFO:         cloudpickle: 3.1.1
2025-04-19 20:03:52,218:INFO:         deprecation: 2.1.0
2025-04-19 20:03:52,219:INFO:              xxhash: 3.5.0
2025-04-19 20:03:52,219:INFO:           wurlitzer: Not installed
2025-04-19 20:03:52,219:INFO:PyCaret optional dependencies:
2025-04-19 20:03:52,594:INFO:                shap: Not installed
2025-04-19 20:03:52,594:INFO:           interpret: Not installed
2025-04-19 20:03:52,594:INFO:                umap: Not installed
2025-04-19 20:03:52,594:INFO:    pandas_profiling: Not installed
2025-04-19 20:03:52,594:INFO:  explainerdashboard: Not installed
2025-04-19 20:03:52,594:INFO:             autoviz: Not installed
2025-04-19 20:03:52,594:INFO:           fairlearn: Not installed
2025-04-19 20:03:52,594:INFO:          deepchecks: Not installed
2025-04-19 20:03:52,594:INFO:             xgboost: Not installed
2025-04-19 20:03:52,594:INFO:            catboost: Not installed
2025-04-19 20:03:52,594:INFO:              kmodes: Not installed
2025-04-19 20:03:52,594:INFO:             mlxtend: Not installed
2025-04-19 20:03:52,595:INFO:       statsforecast: Not installed
2025-04-19 20:03:52,595:INFO:        tune_sklearn: Not installed
2025-04-19 20:03:52,595:INFO:                 ray: Not installed
2025-04-19 20:03:52,595:INFO:            hyperopt: Not installed
2025-04-19 20:03:52,595:INFO:              optuna: Not installed
2025-04-19 20:03:52,595:INFO:               skopt: Not installed
2025-04-19 20:03:52,595:INFO:              mlflow: 2.21.3
2025-04-19 20:03:52,595:INFO:              gradio: Not installed
2025-04-19 20:03:52,595:INFO:             fastapi: 0.115.12
2025-04-19 20:03:52,595:INFO:             uvicorn: 0.34.2
2025-04-19 20:03:52,595:INFO:              m2cgen: Not installed
2025-04-19 20:03:52,595:INFO:           evidently: Not installed
2025-04-19 20:03:52,595:INFO:               fugue: Not installed
2025-04-19 20:03:52,595:INFO:           streamlit: Not installed
2025-04-19 20:03:52,595:INFO:             prophet: Not installed
2025-04-19 20:03:52,595:INFO:None
2025-04-19 20:03:52,595:INFO:Set up data.
2025-04-19 20:03:52,603:INFO:Set up train/test split.
2025-04-19 20:03:52,607:INFO:Set up index.
2025-04-19 20:03:52,607:INFO:Set up folding strategy.
2025-04-19 20:03:52,608:INFO:Assigning column types.
2025-04-19 20:03:52,610:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-19 20:03:52,610:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,616:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,621:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,676:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,718:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:52,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:52,718:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,718:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,718:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,768:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:52,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:52,818:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-19 20:03:52,818:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,818:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,878:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:52,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:52,928:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,934:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:03:52,992:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,041:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-19 20:03:53,044:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,110:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,163:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,175:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,230:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,273:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,273:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-19 20:03:53,336:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,465:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-19 20:03:53,515:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,614:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:03:53,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,646:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-19 20:03:53,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:53,852:INFO:Preparing preprocessing pipeline...
2025-04-19 20:03:53,852:INFO:Set up target transformation.
2025-04-19 20:03:53,852:INFO:Set up simple imputation.
2025-04-19 20:03:53,852:INFO:Set up removing multicollinearity.
2025-04-19 20:03:53,852:INFO:Set up removing outliers.
2025-04-19 20:03:53,852:INFO:Set up feature normalization.
2025-04-19 20:03:54,038:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:03:54,365:INFO:Finished creating preprocessing pipeline.
2025-04-19 20:03:54,375:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-04-19 20:03:54,375:INFO:Creating final display dataframe.
2025-04-19 20:03:54,589:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:03:55,166:INFO:Setup _display_container:                     Description         Value
0                    Session id            42
1                        Target        target
2                   Target type    Regression
3           Original data shape     (7999, 7)
4        Transformed data shape     (7719, 7)
5   Transformed train set shape     (5319, 7)
6    Transformed test set shape     (2400, 7)
7              Numeric features             6
8      Rows with missing values         11.6%
9                    Preprocess          True
10              Imputation type        simple
11           Numeric imputation          mean
12       Categorical imputation          mode
13     Remove multicollinearity          True
14  Multicollinearity threshold           0.9
15              Remove outliers          True
16           Outliers threshold          0.05
17                    Normalize          True
18             Normalize method        zscore
19             Transform target          True
20      Transform target method   yeo-johnson
21               Fold Generator         KFold
22                  Fold Number            10
23                     CPU Jobs            -1
24                      Use GPU         False
25               Log Experiment         False
26              Experiment Name  agn_modeling
27                          USI          4697
2025-04-19 20:03:55,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:55,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:55,365:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:55,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:03:55,367:INFO:setup() successfully completed in 3.3s...............
2025-04-19 20:03:55,367:INFO:Initializing compare_models()
2025-04-19 20:03:55,367:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, 'include': None, 'exclude': ['catboost'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=['catboost'])
2025-04-19 20:03:55,367:INFO:Checking exceptions
2025-04-19 20:03:55,367:INFO:Preparing display monitor
2025-04-19 20:03:55,367:INFO:Initializing Linear Regression
2025-04-19 20:03:55,367:INFO:Total runtime is 0.0 minutes
2025-04-19 20:03:55,367:INFO:SubProcess create_model() called ==================================
2025-04-19 20:03:55,367:INFO:Initializing create_model()
2025-04-19 20:03:55,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:03:55,367:INFO:Checking exceptions
2025-04-19 20:03:55,367:INFO:Importing libraries
2025-04-19 20:03:55,367:INFO:Copying training dataset
2025-04-19 20:03:55,367:INFO:Defining folds
2025-04-19 20:03:55,367:INFO:Declaring metric variables
2025-04-19 20:03:55,367:INFO:Importing untrained model
2025-04-19 20:03:55,367:INFO:Linear Regression Imported successfully
2025-04-19 20:03:55,367:INFO:Starting cross validation
2025-04-19 20:03:55,387:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:00,214:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:00,220:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:00,236:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:00,343:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:00,359:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:00,363:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:00,474:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:00,488:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:01,427:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:01,471:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:04:02,029:INFO:Calculating mean and std
2025-04-19 20:04:02,029:INFO:Creating metrics dataframe
2025-04-19 20:04:02,179:INFO:Uploading results into container
2025-04-19 20:04:02,179:INFO:Uploading model into container now
2025-04-19 20:04:02,179:INFO:_master_model_container: 1
2025-04-19 20:04:02,179:INFO:_display_container: 2
2025-04-19 20:04:02,179:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:04:02,179:INFO:create_model() successfully completed......................................
2025-04-19 20:04:02,342:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:02,342:INFO:Creating metrics dataframe
2025-04-19 20:04:02,346:INFO:Initializing Lasso Regression
2025-04-19 20:04:02,346:INFO:Total runtime is 0.11632699569066365 minutes
2025-04-19 20:04:02,346:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:02,346:INFO:Initializing create_model()
2025-04-19 20:04:02,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:02,346:INFO:Checking exceptions
2025-04-19 20:04:02,346:INFO:Importing libraries
2025-04-19 20:04:02,346:INFO:Copying training dataset
2025-04-19 20:04:02,348:INFO:Defining folds
2025-04-19 20:04:02,348:INFO:Declaring metric variables
2025-04-19 20:04:02,348:INFO:Importing untrained model
2025-04-19 20:04:02,348:INFO:Lasso Regression Imported successfully
2025-04-19 20:04:02,348:INFO:Starting cross validation
2025-04-19 20:04:02,348:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:03,432:INFO:Calculating mean and std
2025-04-19 20:04:03,432:INFO:Creating metrics dataframe
2025-04-19 20:04:03,571:INFO:Uploading results into container
2025-04-19 20:04:03,571:INFO:Uploading model into container now
2025-04-19 20:04:03,572:INFO:_master_model_container: 2
2025-04-19 20:04:03,572:INFO:_display_container: 2
2025-04-19 20:04:03,572:INFO:Lasso(random_state=42)
2025-04-19 20:04:03,572:INFO:create_model() successfully completed......................................
2025-04-19 20:04:03,779:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:03,779:INFO:Creating metrics dataframe
2025-04-19 20:04:03,782:INFO:Initializing Ridge Regression
2025-04-19 20:04:03,784:INFO:Total runtime is 0.14028347730636598 minutes
2025-04-19 20:04:03,784:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:03,784:INFO:Initializing create_model()
2025-04-19 20:04:03,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:03,784:INFO:Checking exceptions
2025-04-19 20:04:03,784:INFO:Importing libraries
2025-04-19 20:04:03,784:INFO:Copying training dataset
2025-04-19 20:04:03,784:INFO:Defining folds
2025-04-19 20:04:03,784:INFO:Declaring metric variables
2025-04-19 20:04:03,784:INFO:Importing untrained model
2025-04-19 20:04:03,784:INFO:Ridge Regression Imported successfully
2025-04-19 20:04:03,784:INFO:Starting cross validation
2025-04-19 20:04:03,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:04,866:INFO:Calculating mean and std
2025-04-19 20:04:04,866:INFO:Creating metrics dataframe
2025-04-19 20:04:05,013:INFO:Uploading results into container
2025-04-19 20:04:05,013:INFO:Uploading model into container now
2025-04-19 20:04:05,013:INFO:_master_model_container: 3
2025-04-19 20:04:05,013:INFO:_display_container: 2
2025-04-19 20:04:05,013:INFO:Ridge(random_state=42)
2025-04-19 20:04:05,013:INFO:create_model() successfully completed......................................
2025-04-19 20:04:05,109:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:05,109:INFO:Creating metrics dataframe
2025-04-19 20:04:05,115:INFO:Initializing Elastic Net
2025-04-19 20:04:05,116:INFO:Total runtime is 0.1624899427096049 minutes
2025-04-19 20:04:05,116:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:05,116:INFO:Initializing create_model()
2025-04-19 20:04:05,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:05,117:INFO:Checking exceptions
2025-04-19 20:04:05,117:INFO:Importing libraries
2025-04-19 20:04:05,117:INFO:Copying training dataset
2025-04-19 20:04:05,120:INFO:Defining folds
2025-04-19 20:04:05,120:INFO:Declaring metric variables
2025-04-19 20:04:05,120:INFO:Importing untrained model
2025-04-19 20:04:05,120:INFO:Elastic Net Imported successfully
2025-04-19 20:04:05,120:INFO:Starting cross validation
2025-04-19 20:04:05,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:06,161:INFO:Calculating mean and std
2025-04-19 20:04:06,177:INFO:Creating metrics dataframe
2025-04-19 20:04:06,316:INFO:Uploading results into container
2025-04-19 20:04:06,316:INFO:Uploading model into container now
2025-04-19 20:04:06,316:INFO:_master_model_container: 4
2025-04-19 20:04:06,316:INFO:_display_container: 2
2025-04-19 20:04:06,316:INFO:ElasticNet(random_state=42)
2025-04-19 20:04:06,316:INFO:create_model() successfully completed......................................
2025-04-19 20:04:06,410:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:06,410:INFO:Creating metrics dataframe
2025-04-19 20:04:06,415:INFO:Initializing Least Angle Regression
2025-04-19 20:04:06,415:INFO:Total runtime is 0.18413679997126262 minutes
2025-04-19 20:04:06,415:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:06,415:INFO:Initializing create_model()
2025-04-19 20:04:06,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:06,415:INFO:Checking exceptions
2025-04-19 20:04:06,415:INFO:Importing libraries
2025-04-19 20:04:06,415:INFO:Copying training dataset
2025-04-19 20:04:06,417:INFO:Defining folds
2025-04-19 20:04:06,417:INFO:Declaring metric variables
2025-04-19 20:04:06,417:INFO:Importing untrained model
2025-04-19 20:04:06,417:INFO:Least Angle Regression Imported successfully
2025-04-19 20:04:06,417:INFO:Starting cross validation
2025-04-19 20:04:06,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:07,506:INFO:Calculating mean and std
2025-04-19 20:04:07,506:INFO:Creating metrics dataframe
2025-04-19 20:04:07,649:INFO:Uploading results into container
2025-04-19 20:04:07,649:INFO:Uploading model into container now
2025-04-19 20:04:07,649:INFO:_master_model_container: 5
2025-04-19 20:04:07,649:INFO:_display_container: 2
2025-04-19 20:04:07,649:INFO:Lars(random_state=42)
2025-04-19 20:04:07,649:INFO:create_model() successfully completed......................................
2025-04-19 20:04:07,751:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:07,751:INFO:Creating metrics dataframe
2025-04-19 20:04:07,751:INFO:Initializing Lasso Least Angle Regression
2025-04-19 20:04:07,751:INFO:Total runtime is 0.206407097975413 minutes
2025-04-19 20:04:07,751:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:07,751:INFO:Initializing create_model()
2025-04-19 20:04:07,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:07,751:INFO:Checking exceptions
2025-04-19 20:04:07,751:INFO:Importing libraries
2025-04-19 20:04:07,751:INFO:Copying training dataset
2025-04-19 20:04:07,751:INFO:Defining folds
2025-04-19 20:04:07,751:INFO:Declaring metric variables
2025-04-19 20:04:07,751:INFO:Importing untrained model
2025-04-19 20:04:07,751:INFO:Lasso Least Angle Regression Imported successfully
2025-04-19 20:04:07,751:INFO:Starting cross validation
2025-04-19 20:04:07,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:08,875:INFO:Calculating mean and std
2025-04-19 20:04:08,875:INFO:Creating metrics dataframe
2025-04-19 20:04:09,014:INFO:Uploading results into container
2025-04-19 20:04:09,014:INFO:Uploading model into container now
2025-04-19 20:04:09,014:INFO:_master_model_container: 6
2025-04-19 20:04:09,014:INFO:_display_container: 2
2025-04-19 20:04:09,014:INFO:LassoLars(random_state=42)
2025-04-19 20:04:09,014:INFO:create_model() successfully completed......................................
2025-04-19 20:04:09,103:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:09,103:INFO:Creating metrics dataframe
2025-04-19 20:04:09,103:INFO:Initializing Orthogonal Matching Pursuit
2025-04-19 20:04:09,103:INFO:Total runtime is 0.22893290917078654 minutes
2025-04-19 20:04:09,103:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:09,103:INFO:Initializing create_model()
2025-04-19 20:04:09,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:09,103:INFO:Checking exceptions
2025-04-19 20:04:09,103:INFO:Importing libraries
2025-04-19 20:04:09,103:INFO:Copying training dataset
2025-04-19 20:04:09,115:INFO:Defining folds
2025-04-19 20:04:09,115:INFO:Declaring metric variables
2025-04-19 20:04:09,115:INFO:Importing untrained model
2025-04-19 20:04:09,115:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 20:04:09,115:INFO:Starting cross validation
2025-04-19 20:04:09,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:10,204:INFO:Calculating mean and std
2025-04-19 20:04:10,204:INFO:Creating metrics dataframe
2025-04-19 20:04:10,348:INFO:Uploading results into container
2025-04-19 20:04:10,348:INFO:Uploading model into container now
2025-04-19 20:04:10,348:INFO:_master_model_container: 7
2025-04-19 20:04:10,348:INFO:_display_container: 2
2025-04-19 20:04:10,357:INFO:OrthogonalMatchingPursuit()
2025-04-19 20:04:10,357:INFO:create_model() successfully completed......................................
2025-04-19 20:04:10,452:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:10,452:INFO:Creating metrics dataframe
2025-04-19 20:04:10,456:INFO:Initializing Bayesian Ridge
2025-04-19 20:04:10,456:INFO:Total runtime is 0.2514942208925883 minutes
2025-04-19 20:04:10,456:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:10,457:INFO:Initializing create_model()
2025-04-19 20:04:10,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:10,457:INFO:Checking exceptions
2025-04-19 20:04:10,457:INFO:Importing libraries
2025-04-19 20:04:10,457:INFO:Copying training dataset
2025-04-19 20:04:10,460:INFO:Defining folds
2025-04-19 20:04:10,460:INFO:Declaring metric variables
2025-04-19 20:04:10,461:INFO:Importing untrained model
2025-04-19 20:04:10,461:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:04:10,461:INFO:Starting cross validation
2025-04-19 20:04:10,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:11,527:INFO:Calculating mean and std
2025-04-19 20:04:11,527:INFO:Creating metrics dataframe
2025-04-19 20:04:11,679:INFO:Uploading results into container
2025-04-19 20:04:11,679:INFO:Uploading model into container now
2025-04-19 20:04:11,681:INFO:_master_model_container: 8
2025-04-19 20:04:11,681:INFO:_display_container: 2
2025-04-19 20:04:11,682:INFO:BayesianRidge()
2025-04-19 20:04:11,682:INFO:create_model() successfully completed......................................
2025-04-19 20:04:11,765:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:11,765:INFO:Creating metrics dataframe
2025-04-19 20:04:11,765:INFO:Initializing Passive Aggressive Regressor
2025-04-19 20:04:11,765:INFO:Total runtime is 0.27331218719482425 minutes
2025-04-19 20:04:11,765:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:11,765:INFO:Initializing create_model()
2025-04-19 20:04:11,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:11,765:INFO:Checking exceptions
2025-04-19 20:04:11,765:INFO:Importing libraries
2025-04-19 20:04:11,765:INFO:Copying training dataset
2025-04-19 20:04:11,781:INFO:Defining folds
2025-04-19 20:04:11,781:INFO:Declaring metric variables
2025-04-19 20:04:11,781:INFO:Importing untrained model
2025-04-19 20:04:11,781:INFO:Passive Aggressive Regressor Imported successfully
2025-04-19 20:04:11,781:INFO:Starting cross validation
2025-04-19 20:04:11,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:12,875:INFO:Calculating mean and std
2025-04-19 20:04:12,875:INFO:Creating metrics dataframe
2025-04-19 20:04:13,012:INFO:Uploading results into container
2025-04-19 20:04:13,012:INFO:Uploading model into container now
2025-04-19 20:04:13,012:INFO:_master_model_container: 9
2025-04-19 20:04:13,012:INFO:_display_container: 2
2025-04-19 20:04:13,012:INFO:PassiveAggressiveRegressor(random_state=42)
2025-04-19 20:04:13,012:INFO:create_model() successfully completed......................................
2025-04-19 20:04:13,109:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:13,109:INFO:Creating metrics dataframe
2025-04-19 20:04:13,114:INFO:Initializing Huber Regressor
2025-04-19 20:04:13,114:INFO:Total runtime is 0.2957910418510437 minutes
2025-04-19 20:04:13,114:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:13,114:INFO:Initializing create_model()
2025-04-19 20:04:13,114:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:13,114:INFO:Checking exceptions
2025-04-19 20:04:13,114:INFO:Importing libraries
2025-04-19 20:04:13,114:INFO:Copying training dataset
2025-04-19 20:04:13,118:INFO:Defining folds
2025-04-19 20:04:13,118:INFO:Declaring metric variables
2025-04-19 20:04:13,121:INFO:Importing untrained model
2025-04-19 20:04:13,121:INFO:Huber Regressor Imported successfully
2025-04-19 20:04:13,121:INFO:Starting cross validation
2025-04-19 20:04:13,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:14,309:INFO:Calculating mean and std
2025-04-19 20:04:14,311:INFO:Creating metrics dataframe
2025-04-19 20:04:14,451:INFO:Uploading results into container
2025-04-19 20:04:14,451:INFO:Uploading model into container now
2025-04-19 20:04:14,451:INFO:_master_model_container: 10
2025-04-19 20:04:14,451:INFO:_display_container: 2
2025-04-19 20:04:14,451:INFO:HuberRegressor()
2025-04-19 20:04:14,451:INFO:create_model() successfully completed......................................
2025-04-19 20:04:14,545:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:14,545:INFO:Creating metrics dataframe
2025-04-19 20:04:14,548:INFO:Initializing K Neighbors Regressor
2025-04-19 20:04:14,549:INFO:Total runtime is 0.31970237890879316 minutes
2025-04-19 20:04:14,549:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:14,549:INFO:Initializing create_model()
2025-04-19 20:04:14,549:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:14,549:INFO:Checking exceptions
2025-04-19 20:04:14,549:INFO:Importing libraries
2025-04-19 20:04:14,549:INFO:Copying training dataset
2025-04-19 20:04:14,549:INFO:Defining folds
2025-04-19 20:04:14,549:INFO:Declaring metric variables
2025-04-19 20:04:14,549:INFO:Importing untrained model
2025-04-19 20:04:14,549:INFO:K Neighbors Regressor Imported successfully
2025-04-19 20:04:14,549:INFO:Starting cross validation
2025-04-19 20:04:14,554:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:15,653:INFO:Calculating mean and std
2025-04-19 20:04:15,655:INFO:Creating metrics dataframe
2025-04-19 20:04:15,823:INFO:Uploading results into container
2025-04-19 20:04:15,823:INFO:Uploading model into container now
2025-04-19 20:04:15,823:INFO:_master_model_container: 11
2025-04-19 20:04:15,825:INFO:_display_container: 2
2025-04-19 20:04:15,825:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-19 20:04:15,825:INFO:create_model() successfully completed......................................
2025-04-19 20:04:15,935:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:15,935:INFO:Creating metrics dataframe
2025-04-19 20:04:15,940:INFO:Initializing Decision Tree Regressor
2025-04-19 20:04:15,940:INFO:Total runtime is 0.34288920958836877 minutes
2025-04-19 20:04:15,940:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:15,940:INFO:Initializing create_model()
2025-04-19 20:04:15,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:15,941:INFO:Checking exceptions
2025-04-19 20:04:15,941:INFO:Importing libraries
2025-04-19 20:04:15,941:INFO:Copying training dataset
2025-04-19 20:04:15,944:INFO:Defining folds
2025-04-19 20:04:15,944:INFO:Declaring metric variables
2025-04-19 20:04:15,944:INFO:Importing untrained model
2025-04-19 20:04:15,945:INFO:Decision Tree Regressor Imported successfully
2025-04-19 20:04:15,945:INFO:Starting cross validation
2025-04-19 20:04:15,951:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:17,203:INFO:Calculating mean and std
2025-04-19 20:04:17,203:INFO:Creating metrics dataframe
2025-04-19 20:04:17,363:INFO:Uploading results into container
2025-04-19 20:04:17,363:INFO:Uploading model into container now
2025-04-19 20:04:17,363:INFO:_master_model_container: 12
2025-04-19 20:04:17,363:INFO:_display_container: 2
2025-04-19 20:04:17,363:INFO:DecisionTreeRegressor(random_state=42)
2025-04-19 20:04:17,363:INFO:create_model() successfully completed......................................
2025-04-19 20:04:17,463:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:17,464:INFO:Creating metrics dataframe
2025-04-19 20:04:17,468:INFO:Initializing Random Forest Regressor
2025-04-19 20:04:17,468:INFO:Total runtime is 0.3683547894159953 minutes
2025-04-19 20:04:17,468:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:17,469:INFO:Initializing create_model()
2025-04-19 20:04:17,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:17,469:INFO:Checking exceptions
2025-04-19 20:04:17,469:INFO:Importing libraries
2025-04-19 20:04:17,469:INFO:Copying training dataset
2025-04-19 20:04:17,469:INFO:Defining folds
2025-04-19 20:04:17,469:INFO:Declaring metric variables
2025-04-19 20:04:17,469:INFO:Importing untrained model
2025-04-19 20:04:17,469:INFO:Random Forest Regressor Imported successfully
2025-04-19 20:04:17,469:INFO:Starting cross validation
2025-04-19 20:04:17,478:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:22,334:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:04:22,858:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:04:23,647:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:04:23,832:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 1.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2025-04-19 20:04:26,430:INFO:Calculating mean and std
2025-04-19 20:04:26,431:INFO:Creating metrics dataframe
2025-04-19 20:04:26,617:INFO:Uploading results into container
2025-04-19 20:04:26,617:INFO:Uploading model into container now
2025-04-19 20:04:26,617:INFO:_master_model_container: 13
2025-04-19 20:04:26,617:INFO:_display_container: 2
2025-04-19 20:04:26,617:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-04-19 20:04:26,617:INFO:create_model() successfully completed......................................
2025-04-19 20:04:26,724:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:26,724:INFO:Creating metrics dataframe
2025-04-19 20:04:26,728:INFO:Initializing Extra Trees Regressor
2025-04-19 20:04:26,736:INFO:Total runtime is 0.5228294094403585 minutes
2025-04-19 20:04:26,737:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:26,737:INFO:Initializing create_model()
2025-04-19 20:04:26,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:26,737:INFO:Checking exceptions
2025-04-19 20:04:26,737:INFO:Importing libraries
2025-04-19 20:04:26,737:INFO:Copying training dataset
2025-04-19 20:04:26,737:INFO:Defining folds
2025-04-19 20:04:26,737:INFO:Declaring metric variables
2025-04-19 20:04:26,737:INFO:Importing untrained model
2025-04-19 20:04:26,737:INFO:Extra Trees Regressor Imported successfully
2025-04-19 20:04:26,737:INFO:Starting cross validation
2025-04-19 20:04:26,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:30,554:INFO:Calculating mean and std
2025-04-19 20:04:30,555:INFO:Creating metrics dataframe
2025-04-19 20:04:30,718:INFO:Uploading results into container
2025-04-19 20:04:30,719:INFO:Uploading model into container now
2025-04-19 20:04:30,719:INFO:_master_model_container: 14
2025-04-19 20:04:30,719:INFO:_display_container: 2
2025-04-19 20:04:30,720:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-04-19 20:04:30,720:INFO:create_model() successfully completed......................................
2025-04-19 20:04:30,827:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:30,828:INFO:Creating metrics dataframe
2025-04-19 20:04:30,832:INFO:Initializing AdaBoost Regressor
2025-04-19 20:04:30,832:INFO:Total runtime is 0.5910951018333435 minutes
2025-04-19 20:04:30,832:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:30,832:INFO:Initializing create_model()
2025-04-19 20:04:30,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:30,832:INFO:Checking exceptions
2025-04-19 20:04:30,832:INFO:Importing libraries
2025-04-19 20:04:30,832:INFO:Copying training dataset
2025-04-19 20:04:30,836:INFO:Defining folds
2025-04-19 20:04:30,836:INFO:Declaring metric variables
2025-04-19 20:04:30,836:INFO:Importing untrained model
2025-04-19 20:04:30,837:INFO:AdaBoost Regressor Imported successfully
2025-04-19 20:04:30,837:INFO:Starting cross validation
2025-04-19 20:04:30,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:32,274:INFO:Calculating mean and std
2025-04-19 20:04:32,274:INFO:Creating metrics dataframe
2025-04-19 20:04:32,436:INFO:Uploading results into container
2025-04-19 20:04:32,436:INFO:Uploading model into container now
2025-04-19 20:04:32,436:INFO:_master_model_container: 15
2025-04-19 20:04:32,436:INFO:_display_container: 2
2025-04-19 20:04:32,436:INFO:AdaBoostRegressor(random_state=42)
2025-04-19 20:04:32,436:INFO:create_model() successfully completed......................................
2025-04-19 20:04:32,516:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:32,516:INFO:Creating metrics dataframe
2025-04-19 20:04:32,516:INFO:Initializing Gradient Boosting Regressor
2025-04-19 20:04:32,516:INFO:Total runtime is 0.6191580931345622 minutes
2025-04-19 20:04:32,516:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:32,516:INFO:Initializing create_model()
2025-04-19 20:04:32,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:32,516:INFO:Checking exceptions
2025-04-19 20:04:32,516:INFO:Importing libraries
2025-04-19 20:04:32,516:INFO:Copying training dataset
2025-04-19 20:04:32,532:INFO:Defining folds
2025-04-19 20:04:32,532:INFO:Declaring metric variables
2025-04-19 20:04:32,532:INFO:Importing untrained model
2025-04-19 20:04:32,536:INFO:Gradient Boosting Regressor Imported successfully
2025-04-19 20:04:32,536:INFO:Starting cross validation
2025-04-19 20:04:32,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:35,193:INFO:Calculating mean and std
2025-04-19 20:04:35,193:INFO:Creating metrics dataframe
2025-04-19 20:04:35,349:INFO:Uploading results into container
2025-04-19 20:04:35,349:INFO:Uploading model into container now
2025-04-19 20:04:35,349:INFO:_master_model_container: 16
2025-04-19 20:04:35,349:INFO:_display_container: 2
2025-04-19 20:04:35,349:INFO:GradientBoostingRegressor(random_state=42)
2025-04-19 20:04:35,349:INFO:create_model() successfully completed......................................
2025-04-19 20:04:35,465:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:35,465:INFO:Creating metrics dataframe
2025-04-19 20:04:35,467:INFO:Initializing Light Gradient Boosting Machine
2025-04-19 20:04:35,467:INFO:Total runtime is 0.6683476249376933 minutes
2025-04-19 20:04:35,467:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:35,467:INFO:Initializing create_model()
2025-04-19 20:04:35,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:35,467:INFO:Checking exceptions
2025-04-19 20:04:35,467:INFO:Importing libraries
2025-04-19 20:04:35,467:INFO:Copying training dataset
2025-04-19 20:04:35,467:INFO:Defining folds
2025-04-19 20:04:35,467:INFO:Declaring metric variables
2025-04-19 20:04:35,467:INFO:Importing untrained model
2025-04-19 20:04:35,467:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-19 20:04:35,467:INFO:Starting cross validation
2025-04-19 20:04:35,486:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:37,474:INFO:Calculating mean and std
2025-04-19 20:04:37,474:INFO:Creating metrics dataframe
2025-04-19 20:04:37,640:INFO:Uploading results into container
2025-04-19 20:04:37,641:INFO:Uploading model into container now
2025-04-19 20:04:37,641:INFO:_master_model_container: 17
2025-04-19 20:04:37,641:INFO:_display_container: 2
2025-04-19 20:04:37,641:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-04-19 20:04:37,641:INFO:create_model() successfully completed......................................
2025-04-19 20:04:37,732:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:37,732:INFO:Creating metrics dataframe
2025-04-19 20:04:37,732:INFO:Initializing Dummy Regressor
2025-04-19 20:04:37,732:INFO:Total runtime is 0.706092623869578 minutes
2025-04-19 20:04:37,732:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:37,732:INFO:Initializing create_model()
2025-04-19 20:04:37,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80D263E50>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:37,732:INFO:Checking exceptions
2025-04-19 20:04:37,732:INFO:Importing libraries
2025-04-19 20:04:37,732:INFO:Copying training dataset
2025-04-19 20:04:37,741:INFO:Defining folds
2025-04-19 20:04:37,741:INFO:Declaring metric variables
2025-04-19 20:04:37,741:INFO:Importing untrained model
2025-04-19 20:04:37,741:INFO:Dummy Regressor Imported successfully
2025-04-19 20:04:37,741:INFO:Starting cross validation
2025-04-19 20:04:37,751:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:38,907:INFO:Calculating mean and std
2025-04-19 20:04:38,909:INFO:Creating metrics dataframe
2025-04-19 20:04:39,059:INFO:Uploading results into container
2025-04-19 20:04:39,059:INFO:Uploading model into container now
2025-04-19 20:04:39,059:INFO:_master_model_container: 18
2025-04-19 20:04:39,059:INFO:_display_container: 2
2025-04-19 20:04:39,059:INFO:DummyRegressor()
2025-04-19 20:04:39,059:INFO:create_model() successfully completed......................................
2025-04-19 20:04:39,154:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:39,154:INFO:Creating metrics dataframe
2025-04-19 20:04:39,164:INFO:Initializing create_model()
2025-04-19 20:04:39,164:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:39,164:INFO:Checking exceptions
2025-04-19 20:04:39,164:INFO:Importing libraries
2025-04-19 20:04:39,164:INFO:Copying training dataset
2025-04-19 20:04:39,164:INFO:Defining folds
2025-04-19 20:04:39,164:INFO:Declaring metric variables
2025-04-19 20:04:39,164:INFO:Importing untrained model
2025-04-19 20:04:39,164:INFO:Declaring custom model
2025-04-19 20:04:39,164:INFO:Huber Regressor Imported successfully
2025-04-19 20:04:39,174:INFO:Cross validation set to False
2025-04-19 20:04:39,174:INFO:Fitting Model
2025-04-19 20:04:39,345:INFO:HuberRegressor()
2025-04-19 20:04:39,345:INFO:create_model() successfully completed......................................
2025-04-19 20:04:39,441:INFO:Initializing create_model()
2025-04-19 20:04:39,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:39,441:INFO:Checking exceptions
2025-04-19 20:04:39,441:INFO:Importing libraries
2025-04-19 20:04:39,441:INFO:Copying training dataset
2025-04-19 20:04:39,443:INFO:Defining folds
2025-04-19 20:04:39,443:INFO:Declaring metric variables
2025-04-19 20:04:39,443:INFO:Importing untrained model
2025-04-19 20:04:39,443:INFO:Declaring custom model
2025-04-19 20:04:39,443:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:04:39,443:INFO:Cross validation set to False
2025-04-19 20:04:39,443:INFO:Fitting Model
2025-04-19 20:04:39,593:INFO:BayesianRidge()
2025-04-19 20:04:39,593:INFO:create_model() successfully completed......................................
2025-04-19 20:04:39,673:INFO:Initializing create_model()
2025-04-19 20:04:39,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:39,673:INFO:Checking exceptions
2025-04-19 20:04:39,673:INFO:Importing libraries
2025-04-19 20:04:39,673:INFO:Copying training dataset
2025-04-19 20:04:39,689:INFO:Defining folds
2025-04-19 20:04:39,689:INFO:Declaring metric variables
2025-04-19 20:04:39,689:INFO:Importing untrained model
2025-04-19 20:04:39,689:INFO:Declaring custom model
2025-04-19 20:04:39,689:INFO:Linear Regression Imported successfully
2025-04-19 20:04:39,689:INFO:Cross validation set to False
2025-04-19 20:04:39,689:INFO:Fitting Model
2025-04-19 20:04:39,844:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:04:39,844:INFO:create_model() successfully completed......................................
2025-04-19 20:04:39,945:INFO:_master_model_container: 18
2025-04-19 20:04:39,945:INFO:_display_container: 2
2025-04-19 20:04:39,945:INFO:[HuberRegressor(), BayesianRidge(), LinearRegression(n_jobs=-1)]
2025-04-19 20:04:39,945:INFO:compare_models() successfully completed......................................
2025-04-19 20:04:39,945:INFO:Initializing tune_model()
2025-04-19 20:04:39,945:INFO:tune_model(estimator=HuberRegressor(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>)
2025-04-19 20:04:39,945:INFO:Checking exceptions
2025-04-19 20:04:39,945:INFO:Copying training dataset
2025-04-19 20:04:39,945:INFO:Checking base model
2025-04-19 20:04:39,945:INFO:Base model : Huber Regressor
2025-04-19 20:04:39,945:INFO:Declaring metric variables
2025-04-19 20:04:39,945:INFO:Defining Hyperparameters
2025-04-19 20:04:40,066:INFO:Tuning with n_jobs=-1
2025-04-19 20:04:40,066:INFO:Initializing RandomizedSearchCV
2025-04-19 20:04:53,768:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.3, 'actual_estimator__alpha': 0.3}
2025-04-19 20:04:53,781:INFO:Hyperparameter search completed
2025-04-19 20:04:53,781:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:53,781:INFO:Initializing create_model()
2025-04-19 20:04:53,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C806FDD300>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.3, 'alpha': 0.3})
2025-04-19 20:04:53,781:INFO:Checking exceptions
2025-04-19 20:04:53,781:INFO:Importing libraries
2025-04-19 20:04:53,781:INFO:Copying training dataset
2025-04-19 20:04:53,785:INFO:Defining folds
2025-04-19 20:04:53,785:INFO:Declaring metric variables
2025-04-19 20:04:53,785:INFO:Importing untrained model
2025-04-19 20:04:53,785:INFO:Declaring custom model
2025-04-19 20:04:53,785:INFO:Huber Regressor Imported successfully
2025-04-19 20:04:53,785:INFO:Starting cross validation
2025-04-19 20:04:53,789:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:54,987:INFO:Calculating mean and std
2025-04-19 20:04:54,988:INFO:Creating metrics dataframe
2025-04-19 20:04:54,990:INFO:Finalizing model
2025-04-19 20:04:55,224:INFO:Uploading results into container
2025-04-19 20:04:55,225:INFO:Uploading model into container now
2025-04-19 20:04:55,225:INFO:_master_model_container: 19
2025-04-19 20:04:55,225:INFO:_display_container: 3
2025-04-19 20:04:55,225:INFO:HuberRegressor(alpha=0.3, epsilon=1.3)
2025-04-19 20:04:55,225:INFO:create_model() successfully completed......................................
2025-04-19 20:04:55,332:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:55,332:INFO:choose_better activated
2025-04-19 20:04:55,333:INFO:SubProcess create_model() called ==================================
2025-04-19 20:04:55,333:INFO:Initializing create_model()
2025-04-19 20:04:55,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:04:55,333:INFO:Checking exceptions
2025-04-19 20:04:55,334:INFO:Importing libraries
2025-04-19 20:04:55,334:INFO:Copying training dataset
2025-04-19 20:04:55,338:INFO:Defining folds
2025-04-19 20:04:55,338:INFO:Declaring metric variables
2025-04-19 20:04:55,338:INFO:Importing untrained model
2025-04-19 20:04:55,338:INFO:Declaring custom model
2025-04-19 20:04:55,340:INFO:Huber Regressor Imported successfully
2025-04-19 20:04:55,340:INFO:Starting cross validation
2025-04-19 20:04:55,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:04:56,574:INFO:Calculating mean and std
2025-04-19 20:04:56,574:INFO:Creating metrics dataframe
2025-04-19 20:04:56,574:INFO:Finalizing model
2025-04-19 20:04:56,782:INFO:Uploading results into container
2025-04-19 20:04:56,782:INFO:Uploading model into container now
2025-04-19 20:04:56,782:INFO:_master_model_container: 20
2025-04-19 20:04:56,782:INFO:_display_container: 4
2025-04-19 20:04:56,782:INFO:HuberRegressor()
2025-04-19 20:04:56,782:INFO:create_model() successfully completed......................................
2025-04-19 20:04:56,868:INFO:SubProcess create_model() end ==================================
2025-04-19 20:04:56,868:INFO:HuberRegressor() result for R2 is 0.002
2025-04-19 20:04:56,869:INFO:HuberRegressor(alpha=0.3, epsilon=1.3) result for R2 is 0.0019
2025-04-19 20:04:56,869:INFO:HuberRegressor() is best model
2025-04-19 20:04:56,869:INFO:choose_better completed
2025-04-19 20:04:56,869:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-19 20:04:56,876:INFO:_master_model_container: 20
2025-04-19 20:04:56,876:INFO:_display_container: 3
2025-04-19 20:04:56,876:INFO:HuberRegressor()
2025-04-19 20:04:56,876:INFO:tune_model() successfully completed......................................
2025-04-19 20:04:57,079:INFO:Initializing tune_model()
2025-04-19 20:04:57,079:INFO:tune_model(estimator=BayesianRidge(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>)
2025-04-19 20:04:57,079:INFO:Checking exceptions
2025-04-19 20:04:57,079:INFO:Copying training dataset
2025-04-19 20:04:57,079:INFO:Checking base model
2025-04-19 20:04:57,079:INFO:Base model : Bayesian Ridge
2025-04-19 20:04:57,079:INFO:Declaring metric variables
2025-04-19 20:04:57,079:INFO:Defining Hyperparameters
2025-04-19 20:04:57,181:INFO:Tuning with n_jobs=-1
2025-04-19 20:04:57,181:INFO:Initializing RandomizedSearchCV
2025-04-19 20:05:10,343:INFO:best_params: {'actual_estimator__lambda_2': 0.005, 'actual_estimator__lambda_1': 1e-06, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.3}
2025-04-19 20:05:10,344:INFO:Hyperparameter search completed
2025-04-19 20:05:10,344:INFO:SubProcess create_model() called ==================================
2025-04-19 20:05:10,344:INFO:Initializing create_model()
2025-04-19 20:05:10,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C806FDC070>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.005, 'lambda_1': 1e-06, 'fit_intercept': True, 'compute_score': True, 'alpha_2': 0.3, 'alpha_1': 0.3})
2025-04-19 20:05:10,345:INFO:Checking exceptions
2025-04-19 20:05:10,345:INFO:Importing libraries
2025-04-19 20:05:10,345:INFO:Copying training dataset
2025-04-19 20:05:10,349:INFO:Defining folds
2025-04-19 20:05:10,349:INFO:Declaring metric variables
2025-04-19 20:05:10,349:INFO:Importing untrained model
2025-04-19 20:05:10,349:INFO:Declaring custom model
2025-04-19 20:05:10,350:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:05:10,350:INFO:Starting cross validation
2025-04-19 20:05:10,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:05:11,951:INFO:Calculating mean and std
2025-04-19 20:05:11,952:INFO:Creating metrics dataframe
2025-04-19 20:05:11,955:INFO:Finalizing model
2025-04-19 20:05:12,196:INFO:Uploading results into container
2025-04-19 20:05:12,197:INFO:Uploading model into container now
2025-04-19 20:05:12,198:INFO:_master_model_container: 21
2025-04-19 20:05:12,198:INFO:_display_container: 4
2025-04-19 20:05:12,198:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005)
2025-04-19 20:05:12,198:INFO:create_model() successfully completed......................................
2025-04-19 20:05:12,311:INFO:SubProcess create_model() end ==================================
2025-04-19 20:05:12,311:INFO:choose_better activated
2025-04-19 20:05:12,311:INFO:SubProcess create_model() called ==================================
2025-04-19 20:05:12,312:INFO:Initializing create_model()
2025-04-19 20:05:12,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:05:12,312:INFO:Checking exceptions
2025-04-19 20:05:12,313:INFO:Importing libraries
2025-04-19 20:05:12,313:INFO:Copying training dataset
2025-04-19 20:05:12,317:INFO:Defining folds
2025-04-19 20:05:12,317:INFO:Declaring metric variables
2025-04-19 20:05:12,317:INFO:Importing untrained model
2025-04-19 20:05:12,317:INFO:Declaring custom model
2025-04-19 20:05:12,318:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:05:12,318:INFO:Starting cross validation
2025-04-19 20:05:12,325:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:05:13,550:INFO:Calculating mean and std
2025-04-19 20:05:13,551:INFO:Creating metrics dataframe
2025-04-19 20:05:13,552:INFO:Finalizing model
2025-04-19 20:05:13,779:INFO:Uploading results into container
2025-04-19 20:05:13,779:INFO:Uploading model into container now
2025-04-19 20:05:13,779:INFO:_master_model_container: 22
2025-04-19 20:05:13,779:INFO:_display_container: 5
2025-04-19 20:05:13,781:INFO:BayesianRidge()
2025-04-19 20:05:13,781:INFO:create_model() successfully completed......................................
2025-04-19 20:05:13,864:INFO:SubProcess create_model() end ==================================
2025-04-19 20:05:13,864:INFO:BayesianRidge() result for R2 is -0.0031
2025-04-19 20:05:13,864:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005) result for R2 is -0.0031
2025-04-19 20:05:13,864:INFO:BayesianRidge() is best model
2025-04-19 20:05:13,864:INFO:choose_better completed
2025-04-19 20:05:13,864:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-19 20:05:13,886:INFO:_master_model_container: 22
2025-04-19 20:05:13,886:INFO:_display_container: 4
2025-04-19 20:05:13,886:INFO:BayesianRidge()
2025-04-19 20:05:13,886:INFO:tune_model() successfully completed......................................
2025-04-19 20:05:14,131:INFO:Initializing tune_model()
2025-04-19 20:05:14,132:INFO:tune_model(estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>)
2025-04-19 20:05:14,132:INFO:Checking exceptions
2025-04-19 20:05:14,132:INFO:Copying training dataset
2025-04-19 20:05:14,132:INFO:Checking base model
2025-04-19 20:05:14,132:INFO:Base model : Linear Regression
2025-04-19 20:05:14,132:INFO:Declaring metric variables
2025-04-19 20:05:14,132:INFO:Defining Hyperparameters
2025-04-19 20:05:14,132:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2025-04-19 20:05:14,249:INFO:Tuning with n_jobs=-1
2025-04-19 20:05:14,249:INFO:Initializing GridSearchCV
2025-04-19 20:05:17,082:INFO:best_params: {'actual_estimator__fit_intercept': True}
2025-04-19 20:05:17,082:INFO:Hyperparameter search completed
2025-04-19 20:05:17,082:INFO:SubProcess create_model() called ==================================
2025-04-19 20:05:17,082:INFO:Initializing create_model()
2025-04-19 20:05:17,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C80E6671F0>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True})
2025-04-19 20:05:17,082:INFO:Checking exceptions
2025-04-19 20:05:17,082:INFO:Importing libraries
2025-04-19 20:05:17,082:INFO:Copying training dataset
2025-04-19 20:05:17,087:INFO:Defining folds
2025-04-19 20:05:17,087:INFO:Declaring metric variables
2025-04-19 20:05:17,087:INFO:Importing untrained model
2025-04-19 20:05:17,087:INFO:Declaring custom model
2025-04-19 20:05:17,087:INFO:Linear Regression Imported successfully
2025-04-19 20:05:17,087:INFO:Starting cross validation
2025-04-19 20:05:17,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:05:18,285:INFO:Calculating mean and std
2025-04-19 20:05:18,286:INFO:Creating metrics dataframe
2025-04-19 20:05:18,290:INFO:Finalizing model
2025-04-19 20:05:18,503:INFO:Uploading results into container
2025-04-19 20:05:18,503:INFO:Uploading model into container now
2025-04-19 20:05:18,504:INFO:_master_model_container: 23
2025-04-19 20:05:18,504:INFO:_display_container: 5
2025-04-19 20:05:18,504:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:05:18,504:INFO:create_model() successfully completed......................................
2025-04-19 20:05:18,601:INFO:SubProcess create_model() end ==================================
2025-04-19 20:05:18,601:INFO:choose_better activated
2025-04-19 20:05:18,601:INFO:SubProcess create_model() called ==================================
2025-04-19 20:05:18,602:INFO:Initializing create_model()
2025-04-19 20:05:18,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:05:18,602:INFO:Checking exceptions
2025-04-19 20:05:18,603:INFO:Importing libraries
2025-04-19 20:05:18,603:INFO:Copying training dataset
2025-04-19 20:05:18,605:INFO:Defining folds
2025-04-19 20:05:18,606:INFO:Declaring metric variables
2025-04-19 20:05:18,606:INFO:Importing untrained model
2025-04-19 20:05:18,606:INFO:Declaring custom model
2025-04-19 20:05:18,606:INFO:Linear Regression Imported successfully
2025-04-19 20:05:18,606:INFO:Starting cross validation
2025-04-19 20:05:18,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:05:19,837:INFO:Calculating mean and std
2025-04-19 20:05:19,837:INFO:Creating metrics dataframe
2025-04-19 20:05:19,838:INFO:Finalizing model
2025-04-19 20:05:20,045:INFO:Uploading results into container
2025-04-19 20:05:20,046:INFO:Uploading model into container now
2025-04-19 20:05:20,046:INFO:_master_model_container: 24
2025-04-19 20:05:20,046:INFO:_display_container: 6
2025-04-19 20:05:20,047:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:05:20,047:INFO:create_model() successfully completed......................................
2025-04-19 20:05:20,131:INFO:SubProcess create_model() end ==================================
2025-04-19 20:05:20,131:INFO:LinearRegression(n_jobs=-1) result for R2 is -0.0032
2025-04-19 20:05:20,131:INFO:LinearRegression(n_jobs=-1) result for R2 is -0.0032
2025-04-19 20:05:20,131:INFO:LinearRegression(n_jobs=-1) is best model
2025-04-19 20:05:20,131:INFO:choose_better completed
2025-04-19 20:05:20,131:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-19 20:05:20,131:INFO:_master_model_container: 24
2025-04-19 20:05:20,131:INFO:_display_container: 5
2025-04-19 20:05:20,141:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:05:20,141:INFO:tune_model() successfully completed......................................
2025-04-19 20:05:20,345:INFO:Initializing blend_models()
2025-04-19 20:05:20,345:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator_list=[HuberRegressor(), BayesianRidge(), LinearRegression(n_jobs=-1)], fold=None, round=4, choose_better=False, optimize=R2, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 20:05:20,345:INFO:Checking exceptions
2025-04-19 20:05:20,345:INFO:Importing libraries
2025-04-19 20:05:20,345:INFO:Copying training dataset
2025-04-19 20:05:20,345:INFO:Getting model names
2025-04-19 20:05:20,345:INFO:SubProcess create_model() called ==================================
2025-04-19 20:05:20,359:INFO:Initializing create_model()
2025-04-19 20:05:20,359:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C803A35BD0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:05:20,359:INFO:Checking exceptions
2025-04-19 20:05:20,359:INFO:Importing libraries
2025-04-19 20:05:20,359:INFO:Copying training dataset
2025-04-19 20:05:20,361:INFO:Defining folds
2025-04-19 20:05:20,361:INFO:Declaring metric variables
2025-04-19 20:05:20,361:INFO:Importing untrained model
2025-04-19 20:05:20,361:INFO:Declaring custom model
2025-04-19 20:05:20,363:INFO:Voting Regressor Imported successfully
2025-04-19 20:05:20,363:INFO:Starting cross validation
2025-04-19 20:05:20,367:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:05:21,739:INFO:Calculating mean and std
2025-04-19 20:05:21,739:INFO:Creating metrics dataframe
2025-04-19 20:05:21,739:INFO:Finalizing model
2025-04-19 20:05:22,012:INFO:Uploading results into container
2025-04-19 20:05:22,013:INFO:Uploading model into container now
2025-04-19 20:05:22,015:INFO:_master_model_container: 25
2025-04-19 20:05:22,015:INFO:_display_container: 6
2025-04-19 20:05:22,017:INFO:VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1)
2025-04-19 20:05:22,017:INFO:create_model() successfully completed......................................
2025-04-19 20:05:22,115:INFO:SubProcess create_model() end ==================================
2025-04-19 20:05:22,122:INFO:_master_model_container: 25
2025-04-19 20:05:22,122:INFO:_display_container: 6
2025-04-19 20:05:22,123:INFO:VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1)
2025-04-19 20:05:22,124:INFO:blend_models() successfully completed......................................
2025-04-19 20:05:22,279:INFO:Initializing stack_models()
2025-04-19 20:05:22,279:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator_list=[HuberRegressor(), BayesianRidge(), LinearRegression(n_jobs=-1)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 20:05:22,279:INFO:Checking exceptions
2025-04-19 20:05:22,279:INFO:Defining meta model
2025-04-19 20:05:22,279:INFO:Getting model names
2025-04-19 20:05:22,283:INFO:[('Huber Regressor', HuberRegressor()), ('Bayesian Ridge', BayesianRidge()), ('Linear Regression', LinearRegression(n_jobs=-1))]
2025-04-19 20:05:22,283:INFO:SubProcess create_model() called ==================================
2025-04-19 20:05:22,283:INFO:Initializing create_model()
2025-04-19 20:05:22,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C803975810>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:05:22,283:INFO:Checking exceptions
2025-04-19 20:05:22,283:INFO:Importing libraries
2025-04-19 20:05:22,283:INFO:Copying training dataset
2025-04-19 20:05:22,283:INFO:Defining folds
2025-04-19 20:05:22,283:INFO:Declaring metric variables
2025-04-19 20:05:22,283:INFO:Importing untrained model
2025-04-19 20:05:22,283:INFO:Declaring custom model
2025-04-19 20:05:22,283:INFO:Stacking Regressor Imported successfully
2025-04-19 20:05:22,283:INFO:Starting cross validation
2025-04-19 20:05:22,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:05:24,005:INFO:Calculating mean and std
2025-04-19 20:05:24,006:INFO:Creating metrics dataframe
2025-04-19 20:05:24,007:INFO:Finalizing model
2025-04-19 20:05:24,354:INFO:Uploading results into container
2025-04-19 20:05:24,355:INFO:Uploading model into container now
2025-04-19 20:05:24,355:INFO:_master_model_container: 26
2025-04-19 20:05:24,355:INFO:_display_container: 7
2025-04-19 20:05:24,356:INFO:StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 20:05:24,356:INFO:create_model() successfully completed......................................
2025-04-19 20:05:24,465:INFO:SubProcess create_model() end ==================================
2025-04-19 20:05:24,472:INFO:_master_model_container: 26
2025-04-19 20:05:24,472:INFO:_display_container: 7
2025-04-19 20:05:24,474:INFO:StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 20:05:24,474:INFO:stack_models() successfully completed......................................
2025-04-19 20:05:24,600:INFO:Initializing save_model()
2025-04-19 20:05:24,600:INFO:save_model(model=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), model_name=models/model_1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:05:24,600:INFO:Adding model into prep_pipe
2025-04-19 20:05:24,638:INFO:models/model_1.pkl saved in current working directory
2025-04-19 20:05:24,654:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 VotingRegressor(estimators=[('Huber Regressor',
                                              HuberRegressor()),
                                             ('Bayesian Ridge',
                                              BayesianRidge()),
                                             ('Linear Regression',
                                              LinearRegression(n_jobs=-1))],
                                 n_jobs=-1))])
2025-04-19 20:05:24,654:INFO:save_model() successfully completed......................................
2025-04-19 20:05:24,861:INFO:Initializing plot_model()
2025-04-19 20:05:24,861:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:24,861:INFO:Checking exceptions
2025-04-19 20:05:24,863:INFO:Initializing plot_model()
2025-04-19 20:05:24,864:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:24,864:INFO:Checking exceptions
2025-04-19 20:05:24,866:INFO:Initializing plot_model()
2025-04-19 20:05:24,866:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:24,866:INFO:Checking exceptions
2025-04-19 20:05:24,868:INFO:Initializing plot_model()
2025-04-19 20:05:24,868:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=VotingRegressor(estimators=[('Huber Regressor', HuberRegressor()),
                            ('Bayesian Ridge', BayesianRidge()),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:24,868:INFO:Checking exceptions
2025-04-19 20:05:24,873:INFO:Initializing save_model()
2025-04-19 20:05:24,873:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), model_name=models/model_2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:05:24,873:INFO:Adding model into prep_pipe
2025-04-19 20:05:24,921:INFO:models/model_2.pkl saved in current working directory
2025-04-19 20:05:24,937:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Huber Regressor',
                                                HuberRegressor()),
                                               ('Bayesian Ridge',
                                                BayesianRidge()),
                                               ('Linear Regression',
                                                LinearRegression(n_jobs=-1))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1, passthrough=True))])
2025-04-19 20:05:24,937:INFO:save_model() successfully completed......................................
2025-04-19 20:05:25,147:INFO:Initializing plot_model()
2025-04-19 20:05:25,147:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,147:INFO:Checking exceptions
2025-04-19 20:05:25,147:INFO:Initializing plot_model()
2025-04-19 20:05:25,147:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,147:INFO:Checking exceptions
2025-04-19 20:05:25,147:INFO:Initializing plot_model()
2025-04-19 20:05:25,147:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,147:INFO:Checking exceptions
2025-04-19 20:05:25,147:INFO:Initializing plot_model()
2025-04-19 20:05:25,147:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor', HuberRegressor()),
                              ('Bayesian Ridge', BayesianRidge()),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,147:INFO:Checking exceptions
2025-04-19 20:05:25,168:INFO:Initializing save_model()
2025-04-19 20:05:25,168:INFO:save_model(model=HuberRegressor(), model_name=models/model_3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:05:25,168:INFO:Adding model into prep_pipe
2025-04-19 20:05:25,202:INFO:models/model_3.pkl saved in current working directory
2025-04-19 20:05:25,217:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', HuberRegressor())])
2025-04-19 20:05:25,217:INFO:save_model() successfully completed......................................
2025-04-19 20:05:25,430:INFO:Initializing plot_model()
2025-04-19 20:05:25,430:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,430:INFO:Checking exceptions
2025-04-19 20:05:25,430:INFO:Initializing plot_model()
2025-04-19 20:05:25,430:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,430:INFO:Checking exceptions
2025-04-19 20:05:25,430:INFO:Initializing plot_model()
2025-04-19 20:05:25,430:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,430:INFO:Checking exceptions
2025-04-19 20:05:25,430:INFO:Initializing plot_model()
2025-04-19 20:05:25,430:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=HuberRegressor(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,430:INFO:Checking exceptions
2025-04-19 20:05:25,446:INFO:Initializing save_model()
2025-04-19 20:05:25,447:INFO:save_model(model=BayesianRidge(), model_name=models/model_4, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:05:25,447:INFO:Adding model into prep_pipe
2025-04-19 20:05:25,501:INFO:models/model_4.pkl saved in current working directory
2025-04-19 20:05:25,515:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', BayesianRidge())])
2025-04-19 20:05:25,515:INFO:save_model() successfully completed......................................
2025-04-19 20:05:25,872:INFO:Initializing plot_model()
2025-04-19 20:05:25,872:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,872:INFO:Checking exceptions
2025-04-19 20:05:25,873:INFO:Initializing plot_model()
2025-04-19 20:05:25,873:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,873:INFO:Checking exceptions
2025-04-19 20:05:25,873:INFO:Initializing plot_model()
2025-04-19 20:05:25,873:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,873:INFO:Checking exceptions
2025-04-19 20:05:25,873:INFO:Initializing plot_model()
2025-04-19 20:05:25,873:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=BayesianRidge(), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:25,873:INFO:Checking exceptions
2025-04-19 20:05:25,882:INFO:Initializing save_model()
2025-04-19 20:05:25,882:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=models/model_5, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:05:25,882:INFO:Adding model into prep_pipe
2025-04-19 20:05:25,920:INFO:models/model_5.pkl saved in current working directory
2025-04-19 20:05:25,932:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_11', 'feature_49',
                                             'feature_43', 'feature_19',
                                             'feature_92', 'feature_68'],
                                    tr...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2025-04-19 20:05:25,932:INFO:save_model() successfully completed......................................
2025-04-19 20:05:26,140:INFO:Initializing plot_model()
2025-04-19 20:05:26,141:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:26,141:INFO:Checking exceptions
2025-04-19 20:05:26,141:INFO:Initializing plot_model()
2025-04-19 20:05:26,141:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:26,141:INFO:Checking exceptions
2025-04-19 20:05:26,141:INFO:Initializing plot_model()
2025-04-19 20:05:26,141:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:26,141:INFO:Checking exceptions
2025-04-19 20:05:26,141:INFO:Initializing plot_model()
2025-04-19 20:05:26,141:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=png, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=2, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C80FAE08B0>, system=True)
2025-04-19 20:05:26,141:INFO:Checking exceptions
2025-04-19 20:08:19,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:08:19,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:08:19,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:08:19,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:09:06,461:INFO:PyCaret RegressionExperiment
2025-04-19 20:09:06,461:INFO:Logging name: agn_modeling
2025-04-19 20:09:06,461:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-19 20:09:06,461:INFO:version 3.0.4
2025-04-19 20:09:06,461:INFO:Initializing setup()
2025-04-19 20:09:06,461:INFO:self.USI: c0ef
2025-04-19 20:09:06,461:INFO:self._variable_keys: {'X_train', 'X_test', 'y_train', 'fold_generator', 'pipeline', 'idx', 'n_jobs_param', '_ml_usecase', 'gpu_param', 'exp_name_log', 'data', 'USI', 'fold_groups_param', 'gpu_n_jobs_param', 'y', 'exp_id', 'y_test', 'X', 'log_plots_param', 'seed', '_available_plots', 'transform_target_param', 'fold_shuffle_param', 'html_param', 'target_param', 'logging_param', 'memory'}
2025-04-19 20:09:06,461:INFO:Checking environment
2025-04-19 20:09:06,461:INFO:python_version: 3.10.9
2025-04-19 20:09:06,461:INFO:python_build: ('tags/v3.10.9:1dd9be6', 'Dec  6 2022 20:01:21')
2025-04-19 20:09:06,461:INFO:machine: AMD64
2025-04-19 20:09:06,471:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-19 20:09:06,472:INFO:Memory: svmem(total=16952647680, available=4276047872, percent=74.8, used=12676599808, free=4276047872)
2025-04-19 20:09:06,472:INFO:Physical Core: 4
2025-04-19 20:09:06,472:INFO:Logical Core: 8
2025-04-19 20:09:06,472:INFO:Checking libraries
2025-04-19 20:09:06,472:INFO:System:
2025-04-19 20:09:06,472:INFO:    python: 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 20:01:21) [MSC v.1934 64 bit (AMD64)]
2025-04-19 20:09:06,472:INFO:executable: D:\College\agn\venv_py310\Scripts\python.exe
2025-04-19 20:09:06,472:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-19 20:09:06,472:INFO:PyCaret required dependencies:
2025-04-19 20:09:06,495:INFO:                 pip: 25.0.1
2025-04-19 20:09:06,495:INFO:          setuptools: 65.5.0
2025-04-19 20:09:06,495:INFO:             pycaret: 3.0.4
2025-04-19 20:09:06,495:INFO:             IPython: 8.35.0
2025-04-19 20:09:06,495:INFO:          ipywidgets: 8.1.6
2025-04-19 20:09:06,495:INFO:                tqdm: 4.67.1
2025-04-19 20:09:06,495:INFO:               numpy: 1.23.5
2025-04-19 20:09:06,495:INFO:              pandas: 1.5.3
2025-04-19 20:09:06,495:INFO:              jinja2: 3.1.6
2025-04-19 20:09:06,495:INFO:               scipy: 1.10.1
2025-04-19 20:09:06,495:INFO:              joblib: 1.2.0
2025-04-19 20:09:06,495:INFO:             sklearn: 1.2.2
2025-04-19 20:09:06,495:INFO:                pyod: 2.0.4
2025-04-19 20:09:06,495:INFO:            imblearn: 0.12.4
2025-04-19 20:09:06,495:INFO:   category_encoders: 2.7.0
2025-04-19 20:09:06,495:INFO:            lightgbm: 4.6.0
2025-04-19 20:09:06,495:INFO:               numba: 0.60.0
2025-04-19 20:09:06,495:INFO:            requests: 2.32.3
2025-04-19 20:09:06,495:INFO:          matplotlib: 3.7.1
2025-04-19 20:09:06,495:INFO:          scikitplot: 0.3.7
2025-04-19 20:09:06,495:INFO:         yellowbrick: 1.5
2025-04-19 20:09:06,495:INFO:              plotly: 5.24.1
2025-04-19 20:09:06,495:INFO:    plotly-resampler: Not installed
2025-04-19 20:09:06,495:INFO:             kaleido: 0.2.1
2025-04-19 20:09:06,495:INFO:           schemdraw: 0.15
2025-04-19 20:09:06,495:INFO:         statsmodels: 0.14.4
2025-04-19 20:09:06,495:INFO:              sktime: 0.21.1
2025-04-19 20:09:06,495:INFO:               tbats: 1.1.3
2025-04-19 20:09:06,495:INFO:            pmdarima: 2.0.4
2025-04-19 20:09:06,495:INFO:              psutil: 7.0.0
2025-04-19 20:09:06,495:INFO:          markupsafe: 3.0.2
2025-04-19 20:09:06,495:INFO:             pickle5: Not installed
2025-04-19 20:09:06,495:INFO:         cloudpickle: 3.1.1
2025-04-19 20:09:06,495:INFO:         deprecation: 2.1.0
2025-04-19 20:09:06,495:INFO:              xxhash: 3.5.0
2025-04-19 20:09:06,495:INFO:           wurlitzer: Not installed
2025-04-19 20:09:06,497:INFO:PyCaret optional dependencies:
2025-04-19 20:09:06,718:INFO:                shap: Not installed
2025-04-19 20:09:06,718:INFO:           interpret: Not installed
2025-04-19 20:09:06,718:INFO:                umap: Not installed
2025-04-19 20:09:06,718:INFO:    pandas_profiling: Not installed
2025-04-19 20:09:06,718:INFO:  explainerdashboard: Not installed
2025-04-19 20:09:06,718:INFO:             autoviz: Not installed
2025-04-19 20:09:06,718:INFO:           fairlearn: Not installed
2025-04-19 20:09:06,718:INFO:          deepchecks: Not installed
2025-04-19 20:09:06,718:INFO:             xgboost: Not installed
2025-04-19 20:09:06,718:INFO:            catboost: Not installed
2025-04-19 20:09:06,718:INFO:              kmodes: Not installed
2025-04-19 20:09:06,718:INFO:             mlxtend: Not installed
2025-04-19 20:09:06,718:INFO:       statsforecast: Not installed
2025-04-19 20:09:06,718:INFO:        tune_sklearn: Not installed
2025-04-19 20:09:06,718:INFO:                 ray: Not installed
2025-04-19 20:09:06,718:INFO:            hyperopt: Not installed
2025-04-19 20:09:06,718:INFO:              optuna: Not installed
2025-04-19 20:09:06,718:INFO:               skopt: Not installed
2025-04-19 20:09:06,718:INFO:              mlflow: 2.21.3
2025-04-19 20:09:06,718:INFO:              gradio: Not installed
2025-04-19 20:09:06,718:INFO:             fastapi: 0.115.12
2025-04-19 20:09:06,718:INFO:             uvicorn: 0.34.2
2025-04-19 20:09:06,718:INFO:              m2cgen: Not installed
2025-04-19 20:09:06,718:INFO:           evidently: Not installed
2025-04-19 20:09:06,718:INFO:               fugue: Not installed
2025-04-19 20:09:06,718:INFO:           streamlit: Not installed
2025-04-19 20:09:06,718:INFO:             prophet: Not installed
2025-04-19 20:09:06,718:INFO:None
2025-04-19 20:09:06,718:INFO:Set up data.
2025-04-19 20:09:06,722:INFO:Set up train/test split.
2025-04-19 20:09:06,726:INFO:Set up index.
2025-04-19 20:09:06,726:INFO:Set up folding strategy.
2025-04-19 20:09:06,726:INFO:Assigning column types.
2025-04-19 20:09:06,728:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-19 20:09:06,728:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,732:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,736:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:06,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:06,818:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,822:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,824:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,870:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:06,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:06,913:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-19 20:09:06,919:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:09:06,925:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,001:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,050:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,060:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,129:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,173:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-19 20:09:07,181:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,241:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,287:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,348:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,383:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-19 20:09:07,430:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,478:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,554:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,584:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-19 20:09:07,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,679:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,679:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,726:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:09:07,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,774:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-19 20:09:07,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:07,958:INFO:Preparing preprocessing pipeline...
2025-04-19 20:09:07,958:INFO:Set up target transformation.
2025-04-19 20:09:07,958:INFO:Set up simple imputation.
2025-04-19 20:09:07,958:INFO:Set up removing multicollinearity.
2025-04-19 20:09:07,958:INFO:Set up removing outliers.
2025-04-19 20:09:07,958:INFO:Set up feature normalization.
2025-04-19 20:09:08,117:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:08,444:INFO:Finished creating preprocessing pipeline.
2025-04-19 20:09:08,450:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-04-19 20:09:08,450:INFO:Creating final display dataframe.
2025-04-19 20:09:08,608:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:09,038:INFO:Setup _display_container:                     Description         Value
0                    Session id            42
1                        Target        target
2                   Target type    Regression
3           Original data shape     (7999, 6)
4        Transformed data shape     (7719, 6)
5   Transformed train set shape     (5319, 6)
6    Transformed test set shape     (2400, 6)
7              Numeric features             5
8      Rows with missing values          9.6%
9                    Preprocess          True
10              Imputation type        simple
11           Numeric imputation          mean
12       Categorical imputation          mode
13     Remove multicollinearity          True
14  Multicollinearity threshold           0.9
15              Remove outliers          True
16           Outliers threshold          0.05
17                    Normalize          True
18             Normalize method        zscore
19             Transform target          True
20      Transform target method   yeo-johnson
21               Fold Generator         KFold
22                  Fold Number            10
23                     CPU Jobs            -1
24                      Use GPU         False
25               Log Experiment         False
26              Experiment Name  agn_modeling
27                          USI          c0ef
2025-04-19 20:09:09,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:09,123:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:09,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:09,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:09:09,222:INFO:setup() successfully completed in 2.87s...............
2025-04-19 20:09:09,222:INFO:Initializing compare_models()
2025-04-19 20:09:09,222:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, 'include': None, 'exclude': ['catboost'], 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=['catboost'])
2025-04-19 20:09:09,222:INFO:Checking exceptions
2025-04-19 20:09:09,222:INFO:Preparing display monitor
2025-04-19 20:09:09,222:INFO:Initializing Linear Regression
2025-04-19 20:09:09,222:INFO:Total runtime is 0.0 minutes
2025-04-19 20:09:09,222:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:09,222:INFO:Initializing create_model()
2025-04-19 20:09:09,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:09,222:INFO:Checking exceptions
2025-04-19 20:09:09,222:INFO:Importing libraries
2025-04-19 20:09:09,222:INFO:Copying training dataset
2025-04-19 20:09:09,237:INFO:Defining folds
2025-04-19 20:09:09,237:INFO:Declaring metric variables
2025-04-19 20:09:09,237:INFO:Importing untrained model
2025-04-19 20:09:09,237:INFO:Linear Regression Imported successfully
2025-04-19 20:09:09,237:INFO:Starting cross validation
2025-04-19 20:09:09,249:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:13,715:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:13,744:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:13,756:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:13,758:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:13,818:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:13,838:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:13,846:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:14,022:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:14,894:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:14,914:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names
  warnings.warn(

2025-04-19 20:09:15,634:INFO:Calculating mean and std
2025-04-19 20:09:15,634:INFO:Creating metrics dataframe
2025-04-19 20:09:15,785:INFO:Uploading results into container
2025-04-19 20:09:15,785:INFO:Uploading model into container now
2025-04-19 20:09:15,785:INFO:_master_model_container: 1
2025-04-19 20:09:15,785:INFO:_display_container: 2
2025-04-19 20:09:15,801:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:09:15,801:INFO:create_model() successfully completed......................................
2025-04-19 20:09:15,957:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:15,957:INFO:Creating metrics dataframe
2025-04-19 20:09:15,957:INFO:Initializing Lasso Regression
2025-04-19 20:09:15,957:INFO:Total runtime is 0.11224723259607951 minutes
2025-04-19 20:09:15,957:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:15,957:INFO:Initializing create_model()
2025-04-19 20:09:15,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:15,957:INFO:Checking exceptions
2025-04-19 20:09:15,957:INFO:Importing libraries
2025-04-19 20:09:15,957:INFO:Copying training dataset
2025-04-19 20:09:15,965:INFO:Defining folds
2025-04-19 20:09:15,965:INFO:Declaring metric variables
2025-04-19 20:09:15,965:INFO:Importing untrained model
2025-04-19 20:09:15,965:INFO:Lasso Regression Imported successfully
2025-04-19 20:09:15,965:INFO:Starting cross validation
2025-04-19 20:09:15,974:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:17,246:INFO:Calculating mean and std
2025-04-19 20:09:17,246:INFO:Creating metrics dataframe
2025-04-19 20:09:17,420:INFO:Uploading results into container
2025-04-19 20:09:17,420:INFO:Uploading model into container now
2025-04-19 20:09:17,420:INFO:_master_model_container: 2
2025-04-19 20:09:17,420:INFO:_display_container: 2
2025-04-19 20:09:17,420:INFO:Lasso(random_state=42)
2025-04-19 20:09:17,420:INFO:create_model() successfully completed......................................
2025-04-19 20:09:17,608:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:17,608:INFO:Creating metrics dataframe
2025-04-19 20:09:17,620:INFO:Initializing Ridge Regression
2025-04-19 20:09:17,620:INFO:Total runtime is 0.13996280034383138 minutes
2025-04-19 20:09:17,620:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:17,620:INFO:Initializing create_model()
2025-04-19 20:09:17,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:17,620:INFO:Checking exceptions
2025-04-19 20:09:17,620:INFO:Importing libraries
2025-04-19 20:09:17,620:INFO:Copying training dataset
2025-04-19 20:09:17,620:INFO:Defining folds
2025-04-19 20:09:17,620:INFO:Declaring metric variables
2025-04-19 20:09:17,620:INFO:Importing untrained model
2025-04-19 20:09:17,620:INFO:Ridge Regression Imported successfully
2025-04-19 20:09:17,620:INFO:Starting cross validation
2025-04-19 20:09:17,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:18,813:INFO:Calculating mean and std
2025-04-19 20:09:18,813:INFO:Creating metrics dataframe
2025-04-19 20:09:18,976:INFO:Uploading results into container
2025-04-19 20:09:18,976:INFO:Uploading model into container now
2025-04-19 20:09:18,976:INFO:_master_model_container: 3
2025-04-19 20:09:18,976:INFO:_display_container: 2
2025-04-19 20:09:18,976:INFO:Ridge(random_state=42)
2025-04-19 20:09:18,976:INFO:create_model() successfully completed......................................
2025-04-19 20:09:19,055:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:19,055:INFO:Creating metrics dataframe
2025-04-19 20:09:19,071:INFO:Initializing Elastic Net
2025-04-19 20:09:19,071:INFO:Total runtime is 0.1641473094622294 minutes
2025-04-19 20:09:19,071:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:19,071:INFO:Initializing create_model()
2025-04-19 20:09:19,071:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:19,071:INFO:Checking exceptions
2025-04-19 20:09:19,071:INFO:Importing libraries
2025-04-19 20:09:19,071:INFO:Copying training dataset
2025-04-19 20:09:19,071:INFO:Defining folds
2025-04-19 20:09:19,071:INFO:Declaring metric variables
2025-04-19 20:09:19,071:INFO:Importing untrained model
2025-04-19 20:09:19,071:INFO:Elastic Net Imported successfully
2025-04-19 20:09:19,071:INFO:Starting cross validation
2025-04-19 20:09:19,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:20,269:INFO:Calculating mean and std
2025-04-19 20:09:20,269:INFO:Creating metrics dataframe
2025-04-19 20:09:20,434:INFO:Uploading results into container
2025-04-19 20:09:20,434:INFO:Uploading model into container now
2025-04-19 20:09:20,434:INFO:_master_model_container: 4
2025-04-19 20:09:20,434:INFO:_display_container: 2
2025-04-19 20:09:20,434:INFO:ElasticNet(random_state=42)
2025-04-19 20:09:20,434:INFO:create_model() successfully completed......................................
2025-04-19 20:09:20,539:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:20,539:INFO:Creating metrics dataframe
2025-04-19 20:09:20,539:INFO:Initializing Least Angle Regression
2025-04-19 20:09:20,539:INFO:Total runtime is 0.18861246903737386 minutes
2025-04-19 20:09:20,539:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:20,539:INFO:Initializing create_model()
2025-04-19 20:09:20,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:20,539:INFO:Checking exceptions
2025-04-19 20:09:20,539:INFO:Importing libraries
2025-04-19 20:09:20,539:INFO:Copying training dataset
2025-04-19 20:09:20,539:INFO:Defining folds
2025-04-19 20:09:20,539:INFO:Declaring metric variables
2025-04-19 20:09:20,539:INFO:Importing untrained model
2025-04-19 20:09:20,539:INFO:Least Angle Regression Imported successfully
2025-04-19 20:09:20,539:INFO:Starting cross validation
2025-04-19 20:09:20,558:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:21,751:INFO:Calculating mean and std
2025-04-19 20:09:21,751:INFO:Creating metrics dataframe
2025-04-19 20:09:21,917:INFO:Uploading results into container
2025-04-19 20:09:21,917:INFO:Uploading model into container now
2025-04-19 20:09:21,917:INFO:_master_model_container: 5
2025-04-19 20:09:21,917:INFO:_display_container: 2
2025-04-19 20:09:21,917:INFO:Lars(random_state=42)
2025-04-19 20:09:21,917:INFO:create_model() successfully completed......................................
2025-04-19 20:09:22,005:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:22,005:INFO:Creating metrics dataframe
2025-04-19 20:09:22,017:INFO:Initializing Lasso Least Angle Regression
2025-04-19 20:09:22,017:INFO:Total runtime is 0.21325114170710247 minutes
2025-04-19 20:09:22,017:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:22,017:INFO:Initializing create_model()
2025-04-19 20:09:22,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:22,017:INFO:Checking exceptions
2025-04-19 20:09:22,017:INFO:Importing libraries
2025-04-19 20:09:22,017:INFO:Copying training dataset
2025-04-19 20:09:22,020:INFO:Defining folds
2025-04-19 20:09:22,020:INFO:Declaring metric variables
2025-04-19 20:09:22,021:INFO:Importing untrained model
2025-04-19 20:09:22,021:INFO:Lasso Least Angle Regression Imported successfully
2025-04-19 20:09:22,021:INFO:Starting cross validation
2025-04-19 20:09:22,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:23,301:INFO:Calculating mean and std
2025-04-19 20:09:23,301:INFO:Creating metrics dataframe
2025-04-19 20:09:23,454:INFO:Uploading results into container
2025-04-19 20:09:23,454:INFO:Uploading model into container now
2025-04-19 20:09:23,454:INFO:_master_model_container: 6
2025-04-19 20:09:23,454:INFO:_display_container: 2
2025-04-19 20:09:23,454:INFO:LassoLars(random_state=42)
2025-04-19 20:09:23,454:INFO:create_model() successfully completed......................................
2025-04-19 20:09:23,555:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:23,555:INFO:Creating metrics dataframe
2025-04-19 20:09:23,559:INFO:Initializing Orthogonal Matching Pursuit
2025-04-19 20:09:23,559:INFO:Total runtime is 0.23895650704701743 minutes
2025-04-19 20:09:23,559:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:23,559:INFO:Initializing create_model()
2025-04-19 20:09:23,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:23,559:INFO:Checking exceptions
2025-04-19 20:09:23,559:INFO:Importing libraries
2025-04-19 20:09:23,559:INFO:Copying training dataset
2025-04-19 20:09:23,559:INFO:Defining folds
2025-04-19 20:09:23,559:INFO:Declaring metric variables
2025-04-19 20:09:23,559:INFO:Importing untrained model
2025-04-19 20:09:23,559:INFO:Orthogonal Matching Pursuit Imported successfully
2025-04-19 20:09:23,559:INFO:Starting cross validation
2025-04-19 20:09:23,572:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:24,806:INFO:Calculating mean and std
2025-04-19 20:09:24,806:INFO:Creating metrics dataframe
2025-04-19 20:09:24,951:INFO:Uploading results into container
2025-04-19 20:09:24,951:INFO:Uploading model into container now
2025-04-19 20:09:24,951:INFO:_master_model_container: 7
2025-04-19 20:09:24,951:INFO:_display_container: 2
2025-04-19 20:09:24,951:INFO:OrthogonalMatchingPursuit()
2025-04-19 20:09:24,951:INFO:create_model() successfully completed......................................
2025-04-19 20:09:25,056:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:25,056:INFO:Creating metrics dataframe
2025-04-19 20:09:25,056:INFO:Initializing Bayesian Ridge
2025-04-19 20:09:25,056:INFO:Total runtime is 0.26389920711517334 minutes
2025-04-19 20:09:25,056:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:25,056:INFO:Initializing create_model()
2025-04-19 20:09:25,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:25,056:INFO:Checking exceptions
2025-04-19 20:09:25,056:INFO:Importing libraries
2025-04-19 20:09:25,056:INFO:Copying training dataset
2025-04-19 20:09:25,056:INFO:Defining folds
2025-04-19 20:09:25,056:INFO:Declaring metric variables
2025-04-19 20:09:25,056:INFO:Importing untrained model
2025-04-19 20:09:25,056:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:09:25,056:INFO:Starting cross validation
2025-04-19 20:09:25,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:26,261:INFO:Calculating mean and std
2025-04-19 20:09:26,261:INFO:Creating metrics dataframe
2025-04-19 20:09:26,422:INFO:Uploading results into container
2025-04-19 20:09:26,422:INFO:Uploading model into container now
2025-04-19 20:09:26,422:INFO:_master_model_container: 8
2025-04-19 20:09:26,422:INFO:_display_container: 2
2025-04-19 20:09:26,422:INFO:BayesianRidge()
2025-04-19 20:09:26,422:INFO:create_model() successfully completed......................................
2025-04-19 20:09:26,504:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:26,504:INFO:Creating metrics dataframe
2025-04-19 20:09:26,522:INFO:Initializing Passive Aggressive Regressor
2025-04-19 20:09:26,522:INFO:Total runtime is 0.2883356293042501 minutes
2025-04-19 20:09:26,522:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:26,522:INFO:Initializing create_model()
2025-04-19 20:09:26,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:26,522:INFO:Checking exceptions
2025-04-19 20:09:26,522:INFO:Importing libraries
2025-04-19 20:09:26,522:INFO:Copying training dataset
2025-04-19 20:09:26,522:INFO:Defining folds
2025-04-19 20:09:26,522:INFO:Declaring metric variables
2025-04-19 20:09:26,522:INFO:Importing untrained model
2025-04-19 20:09:26,522:INFO:Passive Aggressive Regressor Imported successfully
2025-04-19 20:09:26,522:INFO:Starting cross validation
2025-04-19 20:09:26,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:27,701:INFO:Calculating mean and std
2025-04-19 20:09:27,701:INFO:Creating metrics dataframe
2025-04-19 20:09:27,863:INFO:Uploading results into container
2025-04-19 20:09:27,868:INFO:Uploading model into container now
2025-04-19 20:09:27,868:INFO:_master_model_container: 9
2025-04-19 20:09:27,868:INFO:_display_container: 2
2025-04-19 20:09:27,868:INFO:PassiveAggressiveRegressor(random_state=42)
2025-04-19 20:09:27,868:INFO:create_model() successfully completed......................................
2025-04-19 20:09:27,956:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:27,956:INFO:Creating metrics dataframe
2025-04-19 20:09:27,956:INFO:Initializing Huber Regressor
2025-04-19 20:09:27,956:INFO:Total runtime is 0.3122352560361227 minutes
2025-04-19 20:09:27,956:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:27,956:INFO:Initializing create_model()
2025-04-19 20:09:27,956:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:27,956:INFO:Checking exceptions
2025-04-19 20:09:27,956:INFO:Importing libraries
2025-04-19 20:09:27,956:INFO:Copying training dataset
2025-04-19 20:09:27,956:INFO:Defining folds
2025-04-19 20:09:27,956:INFO:Declaring metric variables
2025-04-19 20:09:27,956:INFO:Importing untrained model
2025-04-19 20:09:27,956:INFO:Huber Regressor Imported successfully
2025-04-19 20:09:27,956:INFO:Starting cross validation
2025-04-19 20:09:27,971:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:29,163:INFO:Calculating mean and std
2025-04-19 20:09:29,163:INFO:Creating metrics dataframe
2025-04-19 20:09:29,333:INFO:Uploading results into container
2025-04-19 20:09:29,333:INFO:Uploading model into container now
2025-04-19 20:09:29,333:INFO:_master_model_container: 10
2025-04-19 20:09:29,333:INFO:_display_container: 2
2025-04-19 20:09:29,333:INFO:HuberRegressor()
2025-04-19 20:09:29,333:INFO:create_model() successfully completed......................................
2025-04-19 20:09:29,425:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:29,425:INFO:Creating metrics dataframe
2025-04-19 20:09:29,425:INFO:Initializing K Neighbors Regressor
2025-04-19 20:09:29,425:INFO:Total runtime is 0.33671800692876186 minutes
2025-04-19 20:09:29,425:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:29,425:INFO:Initializing create_model()
2025-04-19 20:09:29,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:29,425:INFO:Checking exceptions
2025-04-19 20:09:29,425:INFO:Importing libraries
2025-04-19 20:09:29,425:INFO:Copying training dataset
2025-04-19 20:09:29,425:INFO:Defining folds
2025-04-19 20:09:29,425:INFO:Declaring metric variables
2025-04-19 20:09:29,425:INFO:Importing untrained model
2025-04-19 20:09:29,425:INFO:K Neighbors Regressor Imported successfully
2025-04-19 20:09:29,425:INFO:Starting cross validation
2025-04-19 20:09:29,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:30,741:INFO:Calculating mean and std
2025-04-19 20:09:30,741:INFO:Creating metrics dataframe
2025-04-19 20:09:30,924:INFO:Uploading results into container
2025-04-19 20:09:30,924:INFO:Uploading model into container now
2025-04-19 20:09:30,924:INFO:_master_model_container: 11
2025-04-19 20:09:30,924:INFO:_display_container: 2
2025-04-19 20:09:30,927:INFO:KNeighborsRegressor(n_jobs=-1)
2025-04-19 20:09:30,927:INFO:create_model() successfully completed......................................
2025-04-19 20:09:31,039:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:31,039:INFO:Creating metrics dataframe
2025-04-19 20:09:31,039:INFO:Initializing Decision Tree Regressor
2025-04-19 20:09:31,039:INFO:Total runtime is 0.3636156876881918 minutes
2025-04-19 20:09:31,039:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:31,039:INFO:Initializing create_model()
2025-04-19 20:09:31,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:31,039:INFO:Checking exceptions
2025-04-19 20:09:31,039:INFO:Importing libraries
2025-04-19 20:09:31,039:INFO:Copying training dataset
2025-04-19 20:09:31,039:INFO:Defining folds
2025-04-19 20:09:31,039:INFO:Declaring metric variables
2025-04-19 20:09:31,039:INFO:Importing untrained model
2025-04-19 20:09:31,039:INFO:Decision Tree Regressor Imported successfully
2025-04-19 20:09:31,039:INFO:Starting cross validation
2025-04-19 20:09:31,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:32,417:INFO:Calculating mean and std
2025-04-19 20:09:32,417:INFO:Creating metrics dataframe
2025-04-19 20:09:32,567:INFO:Uploading results into container
2025-04-19 20:09:32,567:INFO:Uploading model into container now
2025-04-19 20:09:32,567:INFO:_master_model_container: 12
2025-04-19 20:09:32,583:INFO:_display_container: 2
2025-04-19 20:09:32,583:INFO:DecisionTreeRegressor(random_state=42)
2025-04-19 20:09:32,583:INFO:create_model() successfully completed......................................
2025-04-19 20:09:32,671:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:32,671:INFO:Creating metrics dataframe
2025-04-19 20:09:32,671:INFO:Initializing Random Forest Regressor
2025-04-19 20:09:32,671:INFO:Total runtime is 0.39081786870956425 minutes
2025-04-19 20:09:32,671:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:32,671:INFO:Initializing create_model()
2025-04-19 20:09:32,671:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:32,671:INFO:Checking exceptions
2025-04-19 20:09:32,671:INFO:Importing libraries
2025-04-19 20:09:32,671:INFO:Copying training dataset
2025-04-19 20:09:32,671:INFO:Defining folds
2025-04-19 20:09:32,671:INFO:Declaring metric variables
2025-04-19 20:09:32,671:INFO:Importing untrained model
2025-04-19 20:09:32,671:INFO:Random Forest Regressor Imported successfully
2025-04-19 20:09:32,671:INFO:Starting cross validation
2025-04-19 20:09:32,687:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:36,910:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:09:36,966:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:09:37,064:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:09:38,300:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2025-04-19 20:09:40,856:INFO:Calculating mean and std
2025-04-19 20:09:40,857:INFO:Creating metrics dataframe
2025-04-19 20:09:41,036:INFO:Uploading results into container
2025-04-19 20:09:41,036:INFO:Uploading model into container now
2025-04-19 20:09:41,036:INFO:_master_model_container: 13
2025-04-19 20:09:41,036:INFO:_display_container: 2
2025-04-19 20:09:41,036:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-04-19 20:09:41,036:INFO:create_model() successfully completed......................................
2025-04-19 20:09:41,155:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:41,155:INFO:Creating metrics dataframe
2025-04-19 20:09:41,165:INFO:Initializing Extra Trees Regressor
2025-04-19 20:09:41,165:INFO:Total runtime is 0.5323838432629904 minutes
2025-04-19 20:09:41,165:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:41,165:INFO:Initializing create_model()
2025-04-19 20:09:41,165:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:41,165:INFO:Checking exceptions
2025-04-19 20:09:41,165:INFO:Importing libraries
2025-04-19 20:09:41,165:INFO:Copying training dataset
2025-04-19 20:09:41,171:INFO:Defining folds
2025-04-19 20:09:41,171:INFO:Declaring metric variables
2025-04-19 20:09:41,171:INFO:Importing untrained model
2025-04-19 20:09:41,171:INFO:Extra Trees Regressor Imported successfully
2025-04-19 20:09:41,171:INFO:Starting cross validation
2025-04-19 20:09:41,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:42,819:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:09:43,096:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:09:43,126:WARNING:D:\College\agn\venv_py310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2025-04-19 20:09:44,996:INFO:Calculating mean and std
2025-04-19 20:09:44,997:INFO:Creating metrics dataframe
2025-04-19 20:09:45,156:INFO:Uploading results into container
2025-04-19 20:09:45,156:INFO:Uploading model into container now
2025-04-19 20:09:45,156:INFO:_master_model_container: 14
2025-04-19 20:09:45,156:INFO:_display_container: 2
2025-04-19 20:09:45,156:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-04-19 20:09:45,156:INFO:create_model() successfully completed......................................
2025-04-19 20:09:45,269:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:45,269:INFO:Creating metrics dataframe
2025-04-19 20:09:45,273:INFO:Initializing AdaBoost Regressor
2025-04-19 20:09:45,273:INFO:Total runtime is 0.6008487820625306 minutes
2025-04-19 20:09:45,273:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:45,273:INFO:Initializing create_model()
2025-04-19 20:09:45,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:45,274:INFO:Checking exceptions
2025-04-19 20:09:45,274:INFO:Importing libraries
2025-04-19 20:09:45,274:INFO:Copying training dataset
2025-04-19 20:09:45,277:INFO:Defining folds
2025-04-19 20:09:45,278:INFO:Declaring metric variables
2025-04-19 20:09:45,278:INFO:Importing untrained model
2025-04-19 20:09:45,278:INFO:AdaBoost Regressor Imported successfully
2025-04-19 20:09:45,278:INFO:Starting cross validation
2025-04-19 20:09:45,285:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:46,754:INFO:Calculating mean and std
2025-04-19 20:09:46,756:INFO:Creating metrics dataframe
2025-04-19 20:09:46,964:INFO:Uploading results into container
2025-04-19 20:09:46,964:INFO:Uploading model into container now
2025-04-19 20:09:46,965:INFO:_master_model_container: 15
2025-04-19 20:09:46,965:INFO:_display_container: 2
2025-04-19 20:09:46,965:INFO:AdaBoostRegressor(random_state=42)
2025-04-19 20:09:46,965:INFO:create_model() successfully completed......................................
2025-04-19 20:09:47,070:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:47,070:INFO:Creating metrics dataframe
2025-04-19 20:09:47,075:INFO:Initializing Gradient Boosting Regressor
2025-04-19 20:09:47,075:INFO:Total runtime is 0.6308820645014446 minutes
2025-04-19 20:09:47,075:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:47,075:INFO:Initializing create_model()
2025-04-19 20:09:47,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:47,075:INFO:Checking exceptions
2025-04-19 20:09:47,076:INFO:Importing libraries
2025-04-19 20:09:47,076:INFO:Copying training dataset
2025-04-19 20:09:47,079:INFO:Defining folds
2025-04-19 20:09:47,079:INFO:Declaring metric variables
2025-04-19 20:09:47,079:INFO:Importing untrained model
2025-04-19 20:09:47,080:INFO:Gradient Boosting Regressor Imported successfully
2025-04-19 20:09:47,080:INFO:Starting cross validation
2025-04-19 20:09:47,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:49,807:INFO:Calculating mean and std
2025-04-19 20:09:49,808:INFO:Creating metrics dataframe
2025-04-19 20:09:50,010:INFO:Uploading results into container
2025-04-19 20:09:50,010:INFO:Uploading model into container now
2025-04-19 20:09:50,011:INFO:_master_model_container: 16
2025-04-19 20:09:50,011:INFO:_display_container: 2
2025-04-19 20:09:50,011:INFO:GradientBoostingRegressor(random_state=42)
2025-04-19 20:09:50,011:INFO:create_model() successfully completed......................................
2025-04-19 20:09:50,111:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:50,111:INFO:Creating metrics dataframe
2025-04-19 20:09:50,115:INFO:Initializing Light Gradient Boosting Machine
2025-04-19 20:09:50,115:INFO:Total runtime is 0.6815548062324525 minutes
2025-04-19 20:09:50,115:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:50,116:INFO:Initializing create_model()
2025-04-19 20:09:50,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:50,116:INFO:Checking exceptions
2025-04-19 20:09:50,116:INFO:Importing libraries
2025-04-19 20:09:50,117:INFO:Copying training dataset
2025-04-19 20:09:50,119:INFO:Defining folds
2025-04-19 20:09:50,120:INFO:Declaring metric variables
2025-04-19 20:09:50,120:INFO:Importing untrained model
2025-04-19 20:09:50,121:INFO:Light Gradient Boosting Machine Imported successfully
2025-04-19 20:09:50,121:INFO:Starting cross validation
2025-04-19 20:09:50,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:52,462:INFO:Calculating mean and std
2025-04-19 20:09:52,463:INFO:Creating metrics dataframe
2025-04-19 20:09:52,653:INFO:Uploading results into container
2025-04-19 20:09:52,654:INFO:Uploading model into container now
2025-04-19 20:09:52,654:INFO:_master_model_container: 17
2025-04-19 20:09:52,655:INFO:_display_container: 2
2025-04-19 20:09:52,655:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-04-19 20:09:52,655:INFO:create_model() successfully completed......................................
2025-04-19 20:09:52,760:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:52,760:INFO:Creating metrics dataframe
2025-04-19 20:09:52,763:INFO:Initializing Dummy Regressor
2025-04-19 20:09:52,763:INFO:Total runtime is 0.7256776412328085 minutes
2025-04-19 20:09:52,764:INFO:SubProcess create_model() called ==================================
2025-04-19 20:09:52,764:INFO:Initializing create_model()
2025-04-19 20:09:52,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D5FC1C0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:52,764:INFO:Checking exceptions
2025-04-19 20:09:52,764:INFO:Importing libraries
2025-04-19 20:09:52,764:INFO:Copying training dataset
2025-04-19 20:09:52,768:INFO:Defining folds
2025-04-19 20:09:52,768:INFO:Declaring metric variables
2025-04-19 20:09:52,768:INFO:Importing untrained model
2025-04-19 20:09:52,768:INFO:Dummy Regressor Imported successfully
2025-04-19 20:09:52,768:INFO:Starting cross validation
2025-04-19 20:09:52,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:09:54,113:INFO:Calculating mean and std
2025-04-19 20:09:54,114:INFO:Creating metrics dataframe
2025-04-19 20:09:54,296:INFO:Uploading results into container
2025-04-19 20:09:54,297:INFO:Uploading model into container now
2025-04-19 20:09:54,297:INFO:_master_model_container: 18
2025-04-19 20:09:54,297:INFO:_display_container: 2
2025-04-19 20:09:54,297:INFO:DummyRegressor()
2025-04-19 20:09:54,297:INFO:create_model() successfully completed......................................
2025-04-19 20:09:54,392:INFO:SubProcess create_model() end ==================================
2025-04-19 20:09:54,392:INFO:Creating metrics dataframe
2025-04-19 20:09:54,398:INFO:Initializing create_model()
2025-04-19 20:09:54,398:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:54,398:INFO:Checking exceptions
2025-04-19 20:09:54,398:INFO:Importing libraries
2025-04-19 20:09:54,398:INFO:Copying training dataset
2025-04-19 20:09:54,401:INFO:Defining folds
2025-04-19 20:09:54,401:INFO:Declaring metric variables
2025-04-19 20:09:54,401:INFO:Importing untrained model
2025-04-19 20:09:54,401:INFO:Declaring custom model
2025-04-19 20:09:54,402:INFO:Huber Regressor Imported successfully
2025-04-19 20:09:54,409:INFO:Cross validation set to False
2025-04-19 20:09:54,409:INFO:Fitting Model
2025-04-19 20:09:54,604:INFO:HuberRegressor()
2025-04-19 20:09:54,604:INFO:create_model() successfully completed......................................
2025-04-19 20:09:54,706:INFO:Initializing create_model()
2025-04-19 20:09:54,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:54,706:INFO:Checking exceptions
2025-04-19 20:09:54,707:INFO:Importing libraries
2025-04-19 20:09:54,707:INFO:Copying training dataset
2025-04-19 20:09:54,710:INFO:Defining folds
2025-04-19 20:09:54,710:INFO:Declaring metric variables
2025-04-19 20:09:54,710:INFO:Importing untrained model
2025-04-19 20:09:54,710:INFO:Declaring custom model
2025-04-19 20:09:54,710:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:09:54,717:INFO:Cross validation set to False
2025-04-19 20:09:54,717:INFO:Fitting Model
2025-04-19 20:09:54,889:INFO:BayesianRidge()
2025-04-19 20:09:54,889:INFO:create_model() successfully completed......................................
2025-04-19 20:09:54,993:INFO:Initializing create_model()
2025-04-19 20:09:54,993:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:09:54,993:INFO:Checking exceptions
2025-04-19 20:09:54,994:INFO:Importing libraries
2025-04-19 20:09:54,994:INFO:Copying training dataset
2025-04-19 20:09:54,994:INFO:Defining folds
2025-04-19 20:09:54,994:INFO:Declaring metric variables
2025-04-19 20:09:54,994:INFO:Importing untrained model
2025-04-19 20:09:54,994:INFO:Declaring custom model
2025-04-19 20:09:54,994:INFO:Linear Regression Imported successfully
2025-04-19 20:09:55,007:INFO:Cross validation set to False
2025-04-19 20:09:55,007:INFO:Fitting Model
2025-04-19 20:09:55,184:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:09:55,184:INFO:create_model() successfully completed......................................
2025-04-19 20:09:55,321:INFO:_master_model_container: 18
2025-04-19 20:09:55,321:INFO:_display_container: 2
2025-04-19 20:09:55,321:INFO:[HuberRegressor(), BayesianRidge(), LinearRegression(n_jobs=-1)]
2025-04-19 20:09:55,321:INFO:compare_models() successfully completed......................................
2025-04-19 20:09:55,321:INFO:Initializing tune_model()
2025-04-19 20:09:55,321:INFO:tune_model(estimator=HuberRegressor(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>)
2025-04-19 20:09:55,321:INFO:Checking exceptions
2025-04-19 20:09:55,321:INFO:Copying training dataset
2025-04-19 20:09:55,333:INFO:Checking base model
2025-04-19 20:09:55,333:INFO:Base model : Huber Regressor
2025-04-19 20:09:55,333:INFO:Declaring metric variables
2025-04-19 20:09:55,333:INFO:Defining Hyperparameters
2025-04-19 20:09:55,438:INFO:Tuning with n_jobs=-1
2025-04-19 20:09:55,438:INFO:Initializing RandomizedSearchCV
2025-04-19 20:10:13,004:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__epsilon': 1.3, 'actual_estimator__alpha': 0.3}
2025-04-19 20:10:13,004:INFO:Hyperparameter search completed
2025-04-19 20:10:13,004:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:13,004:INFO:Initializing create_model()
2025-04-19 20:10:13,004:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854D483E50>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True, 'epsilon': 1.3, 'alpha': 0.3})
2025-04-19 20:10:13,004:INFO:Checking exceptions
2025-04-19 20:10:13,004:INFO:Importing libraries
2025-04-19 20:10:13,004:INFO:Copying training dataset
2025-04-19 20:10:13,019:INFO:Defining folds
2025-04-19 20:10:13,019:INFO:Declaring metric variables
2025-04-19 20:10:13,020:INFO:Importing untrained model
2025-04-19 20:10:13,020:INFO:Declaring custom model
2025-04-19 20:10:13,020:INFO:Huber Regressor Imported successfully
2025-04-19 20:10:13,020:INFO:Starting cross validation
2025-04-19 20:10:13,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:14,653:INFO:Calculating mean and std
2025-04-19 20:10:14,653:INFO:Creating metrics dataframe
2025-04-19 20:10:14,671:INFO:Finalizing model
2025-04-19 20:10:14,938:INFO:Uploading results into container
2025-04-19 20:10:14,938:INFO:Uploading model into container now
2025-04-19 20:10:14,938:INFO:_master_model_container: 19
2025-04-19 20:10:14,938:INFO:_display_container: 3
2025-04-19 20:10:14,938:INFO:HuberRegressor(alpha=0.3, epsilon=1.3)
2025-04-19 20:10:14,938:INFO:create_model() successfully completed......................................
2025-04-19 20:10:15,037:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:15,037:INFO:choose_better activated
2025-04-19 20:10:15,037:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:15,037:INFO:Initializing create_model()
2025-04-19 20:10:15,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:10:15,037:INFO:Checking exceptions
2025-04-19 20:10:15,037:INFO:Importing libraries
2025-04-19 20:10:15,037:INFO:Copying training dataset
2025-04-19 20:10:15,052:INFO:Defining folds
2025-04-19 20:10:15,052:INFO:Declaring metric variables
2025-04-19 20:10:15,052:INFO:Importing untrained model
2025-04-19 20:10:15,052:INFO:Declaring custom model
2025-04-19 20:10:15,053:INFO:Huber Regressor Imported successfully
2025-04-19 20:10:15,053:INFO:Starting cross validation
2025-04-19 20:10:15,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:16,605:INFO:Calculating mean and std
2025-04-19 20:10:16,605:INFO:Creating metrics dataframe
2025-04-19 20:10:16,613:INFO:Finalizing model
2025-04-19 20:10:16,906:INFO:Uploading results into container
2025-04-19 20:10:16,906:INFO:Uploading model into container now
2025-04-19 20:10:16,906:INFO:_master_model_container: 20
2025-04-19 20:10:16,906:INFO:_display_container: 4
2025-04-19 20:10:16,906:INFO:HuberRegressor()
2025-04-19 20:10:16,906:INFO:create_model() successfully completed......................................
2025-04-19 20:10:17,027:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:17,027:INFO:HuberRegressor() result for R2 is 0.0003
2025-04-19 20:10:17,027:INFO:HuberRegressor(alpha=0.3, epsilon=1.3) result for R2 is 0.0006
2025-04-19 20:10:17,027:INFO:HuberRegressor(alpha=0.3, epsilon=1.3) is best model
2025-04-19 20:10:17,027:INFO:choose_better completed
2025-04-19 20:10:17,036:INFO:_master_model_container: 20
2025-04-19 20:10:17,037:INFO:_display_container: 3
2025-04-19 20:10:17,038:INFO:HuberRegressor(alpha=0.3, epsilon=1.3)
2025-04-19 20:10:17,038:INFO:tune_model() successfully completed......................................
2025-04-19 20:10:17,323:INFO:Initializing tune_model()
2025-04-19 20:10:17,323:INFO:tune_model(estimator=BayesianRidge(), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>)
2025-04-19 20:10:17,323:INFO:Checking exceptions
2025-04-19 20:10:17,327:INFO:Copying training dataset
2025-04-19 20:10:17,327:INFO:Checking base model
2025-04-19 20:10:17,327:INFO:Base model : Bayesian Ridge
2025-04-19 20:10:17,327:INFO:Declaring metric variables
2025-04-19 20:10:17,327:INFO:Defining Hyperparameters
2025-04-19 20:10:17,459:INFO:Tuning with n_jobs=-1
2025-04-19 20:10:17,459:INFO:Initializing RandomizedSearchCV
2025-04-19 20:10:33,515:INFO:best_params: {'actual_estimator__lambda_2': 0.005, 'actual_estimator__lambda_1': 1e-06, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.3}
2025-04-19 20:10:33,515:INFO:Hyperparameter search completed
2025-04-19 20:10:33,515:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:33,515:INFO:Initializing create_model()
2025-04-19 20:10:33,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854E1E3940>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.005, 'lambda_1': 1e-06, 'fit_intercept': True, 'compute_score': True, 'alpha_2': 0.3, 'alpha_1': 0.3})
2025-04-19 20:10:33,515:INFO:Checking exceptions
2025-04-19 20:10:33,515:INFO:Importing libraries
2025-04-19 20:10:33,515:INFO:Copying training dataset
2025-04-19 20:10:33,520:INFO:Defining folds
2025-04-19 20:10:33,520:INFO:Declaring metric variables
2025-04-19 20:10:33,521:INFO:Importing untrained model
2025-04-19 20:10:33,521:INFO:Declaring custom model
2025-04-19 20:10:33,521:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:10:33,521:INFO:Starting cross validation
2025-04-19 20:10:33,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:35,070:INFO:Calculating mean and std
2025-04-19 20:10:35,071:INFO:Creating metrics dataframe
2025-04-19 20:10:35,074:INFO:Finalizing model
2025-04-19 20:10:35,325:INFO:Uploading results into container
2025-04-19 20:10:35,325:INFO:Uploading model into container now
2025-04-19 20:10:35,326:INFO:_master_model_container: 21
2025-04-19 20:10:35,326:INFO:_display_container: 4
2025-04-19 20:10:35,326:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005)
2025-04-19 20:10:35,326:INFO:create_model() successfully completed......................................
2025-04-19 20:10:35,420:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:35,420:INFO:choose_better activated
2025-04-19 20:10:35,420:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:35,420:INFO:Initializing create_model()
2025-04-19 20:10:35,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:10:35,420:INFO:Checking exceptions
2025-04-19 20:10:35,420:INFO:Importing libraries
2025-04-19 20:10:35,420:INFO:Copying training dataset
2025-04-19 20:10:35,420:INFO:Defining folds
2025-04-19 20:10:35,420:INFO:Declaring metric variables
2025-04-19 20:10:35,420:INFO:Importing untrained model
2025-04-19 20:10:35,420:INFO:Declaring custom model
2025-04-19 20:10:35,420:INFO:Bayesian Ridge Imported successfully
2025-04-19 20:10:35,420:INFO:Starting cross validation
2025-04-19 20:10:35,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:36,955:INFO:Calculating mean and std
2025-04-19 20:10:36,955:INFO:Creating metrics dataframe
2025-04-19 20:10:36,959:INFO:Finalizing model
2025-04-19 20:10:37,224:INFO:Uploading results into container
2025-04-19 20:10:37,224:INFO:Uploading model into container now
2025-04-19 20:10:37,224:INFO:_master_model_container: 22
2025-04-19 20:10:37,224:INFO:_display_container: 5
2025-04-19 20:10:37,224:INFO:BayesianRidge()
2025-04-19 20:10:37,224:INFO:create_model() successfully completed......................................
2025-04-19 20:10:37,392:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:37,392:INFO:BayesianRidge() result for R2 is -0.005
2025-04-19 20:10:37,393:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005) result for R2 is -0.0049
2025-04-19 20:10:37,393:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005) is best model
2025-04-19 20:10:37,393:INFO:choose_better completed
2025-04-19 20:10:37,415:INFO:_master_model_container: 22
2025-04-19 20:10:37,415:INFO:_display_container: 4
2025-04-19 20:10:37,416:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005)
2025-04-19 20:10:37,416:INFO:tune_model() successfully completed......................................
2025-04-19 20:10:37,709:INFO:Initializing tune_model()
2025-04-19 20:10:37,709:INFO:tune_model(estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>)
2025-04-19 20:10:37,709:INFO:Checking exceptions
2025-04-19 20:10:37,712:INFO:Copying training dataset
2025-04-19 20:10:37,714:INFO:Checking base model
2025-04-19 20:10:37,714:INFO:Base model : Linear Regression
2025-04-19 20:10:37,715:INFO:Declaring metric variables
2025-04-19 20:10:37,715:INFO:Defining Hyperparameters
2025-04-19 20:10:37,715:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2025-04-19 20:10:37,830:INFO:Tuning with n_jobs=-1
2025-04-19 20:10:37,830:INFO:Initializing GridSearchCV
2025-04-19 20:10:41,306:INFO:best_params: {'actual_estimator__fit_intercept': True}
2025-04-19 20:10:41,307:INFO:Hyperparameter search completed
2025-04-19 20:10:41,307:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:41,308:INFO:Initializing create_model()
2025-04-19 20:10:41,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001854E453760>, model_only=True, return_train_score=False, kwargs={'fit_intercept': True})
2025-04-19 20:10:41,308:INFO:Checking exceptions
2025-04-19 20:10:41,308:INFO:Importing libraries
2025-04-19 20:10:41,308:INFO:Copying training dataset
2025-04-19 20:10:41,308:INFO:Defining folds
2025-04-19 20:10:41,308:INFO:Declaring metric variables
2025-04-19 20:10:41,308:INFO:Importing untrained model
2025-04-19 20:10:41,308:INFO:Declaring custom model
2025-04-19 20:10:41,308:INFO:Linear Regression Imported successfully
2025-04-19 20:10:41,308:INFO:Starting cross validation
2025-04-19 20:10:41,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:42,752:INFO:Calculating mean and std
2025-04-19 20:10:42,752:INFO:Creating metrics dataframe
2025-04-19 20:10:42,752:INFO:Finalizing model
2025-04-19 20:10:43,011:INFO:Uploading results into container
2025-04-19 20:10:43,011:INFO:Uploading model into container now
2025-04-19 20:10:43,012:INFO:_master_model_container: 23
2025-04-19 20:10:43,012:INFO:_display_container: 5
2025-04-19 20:10:43,012:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:10:43,012:INFO:create_model() successfully completed......................................
2025-04-19 20:10:43,109:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:43,109:INFO:choose_better activated
2025-04-19 20:10:43,109:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:43,110:INFO:Initializing create_model()
2025-04-19 20:10:43,110:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:10:43,110:INFO:Checking exceptions
2025-04-19 20:10:43,111:INFO:Importing libraries
2025-04-19 20:10:43,111:INFO:Copying training dataset
2025-04-19 20:10:43,114:INFO:Defining folds
2025-04-19 20:10:43,114:INFO:Declaring metric variables
2025-04-19 20:10:43,114:INFO:Importing untrained model
2025-04-19 20:10:43,114:INFO:Declaring custom model
2025-04-19 20:10:43,114:INFO:Linear Regression Imported successfully
2025-04-19 20:10:43,114:INFO:Starting cross validation
2025-04-19 20:10:43,120:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:44,599:INFO:Calculating mean and std
2025-04-19 20:10:44,599:INFO:Creating metrics dataframe
2025-04-19 20:10:44,599:INFO:Finalizing model
2025-04-19 20:10:44,857:INFO:Uploading results into container
2025-04-19 20:10:44,857:INFO:Uploading model into container now
2025-04-19 20:10:44,857:INFO:_master_model_container: 24
2025-04-19 20:10:44,857:INFO:_display_container: 6
2025-04-19 20:10:44,857:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:10:44,857:INFO:create_model() successfully completed......................................
2025-04-19 20:10:44,957:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:44,957:INFO:LinearRegression(n_jobs=-1) result for R2 is -0.0051
2025-04-19 20:10:44,957:INFO:LinearRegression(n_jobs=-1) result for R2 is -0.0051
2025-04-19 20:10:44,957:INFO:LinearRegression(n_jobs=-1) is best model
2025-04-19 20:10:44,957:INFO:choose_better completed
2025-04-19 20:10:44,957:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-04-19 20:10:44,972:INFO:_master_model_container: 24
2025-04-19 20:10:44,972:INFO:_display_container: 5
2025-04-19 20:10:44,973:INFO:LinearRegression(n_jobs=-1)
2025-04-19 20:10:44,973:INFO:tune_model() successfully completed......................................
2025-04-19 20:10:45,207:INFO:Initializing blend_models()
2025-04-19 20:10:45,207:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator_list=[HuberRegressor(alpha=0.3, epsilon=1.3), BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005), LinearRegression(n_jobs=-1)], fold=None, round=4, choose_better=False, optimize=R2, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 20:10:45,207:INFO:Checking exceptions
2025-04-19 20:10:45,207:INFO:Importing libraries
2025-04-19 20:10:45,207:INFO:Copying training dataset
2025-04-19 20:10:45,207:INFO:Getting model names
2025-04-19 20:10:45,207:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:45,207:INFO:Initializing create_model()
2025-04-19 20:10:45,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018543DB8FA0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:10:45,207:INFO:Checking exceptions
2025-04-19 20:10:45,207:INFO:Importing libraries
2025-04-19 20:10:45,207:INFO:Copying training dataset
2025-04-19 20:10:45,207:INFO:Defining folds
2025-04-19 20:10:45,207:INFO:Declaring metric variables
2025-04-19 20:10:45,207:INFO:Importing untrained model
2025-04-19 20:10:45,207:INFO:Declaring custom model
2025-04-19 20:10:45,207:INFO:Voting Regressor Imported successfully
2025-04-19 20:10:45,219:INFO:Starting cross validation
2025-04-19 20:10:45,228:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:46,842:INFO:Calculating mean and std
2025-04-19 20:10:46,844:INFO:Creating metrics dataframe
2025-04-19 20:10:46,844:INFO:Finalizing model
2025-04-19 20:10:47,177:INFO:Uploading results into container
2025-04-19 20:10:47,177:INFO:Uploading model into container now
2025-04-19 20:10:47,177:INFO:_master_model_container: 25
2025-04-19 20:10:47,177:INFO:_display_container: 6
2025-04-19 20:10:47,177:INFO:VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1)
2025-04-19 20:10:47,177:INFO:create_model() successfully completed......................................
2025-04-19 20:10:47,302:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:47,310:INFO:_master_model_container: 25
2025-04-19 20:10:47,310:INFO:_display_container: 6
2025-04-19 20:10:47,310:INFO:VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1)
2025-04-19 20:10:47,310:INFO:blend_models() successfully completed......................................
2025-04-19 20:10:47,420:INFO:Initializing stack_models()
2025-04-19 20:10:47,420:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator_list=[HuberRegressor(alpha=0.3, epsilon=1.3), BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005), LinearRegression(n_jobs=-1)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2025-04-19 20:10:47,420:INFO:Checking exceptions
2025-04-19 20:10:47,420:INFO:Defining meta model
2025-04-19 20:10:47,420:INFO:Getting model names
2025-04-19 20:10:47,420:INFO:[('Huber Regressor', HuberRegressor(alpha=0.3, epsilon=1.3)), ('Bayesian Ridge', BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005)), ('Linear Regression', LinearRegression(n_jobs=-1))]
2025-04-19 20:10:47,420:INFO:SubProcess create_model() called ==================================
2025-04-19 20:10:47,420:INFO:Initializing create_model()
2025-04-19 20:10:47,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018543DB8FA0>, model_only=True, return_train_score=False, kwargs={})
2025-04-19 20:10:47,420:INFO:Checking exceptions
2025-04-19 20:10:47,420:INFO:Importing libraries
2025-04-19 20:10:47,420:INFO:Copying training dataset
2025-04-19 20:10:47,438:INFO:Defining folds
2025-04-19 20:10:47,438:INFO:Declaring metric variables
2025-04-19 20:10:47,438:INFO:Importing untrained model
2025-04-19 20:10:47,438:INFO:Declaring custom model
2025-04-19 20:10:47,440:INFO:Stacking Regressor Imported successfully
2025-04-19 20:10:47,440:INFO:Starting cross validation
2025-04-19 20:10:47,446:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-19 20:10:49,247:INFO:Calculating mean and std
2025-04-19 20:10:49,247:INFO:Creating metrics dataframe
2025-04-19 20:10:49,247:INFO:Finalizing model
2025-04-19 20:10:49,632:INFO:Uploading results into container
2025-04-19 20:10:49,632:INFO:Uploading model into container now
2025-04-19 20:10:49,632:INFO:_master_model_container: 26
2025-04-19 20:10:49,632:INFO:_display_container: 7
2025-04-19 20:10:49,632:INFO:StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 20:10:49,632:INFO:create_model() successfully completed......................................
2025-04-19 20:10:49,746:INFO:SubProcess create_model() end ==================================
2025-04-19 20:10:49,752:INFO:_master_model_container: 26
2025-04-19 20:10:49,752:INFO:_display_container: 7
2025-04-19 20:10:49,752:INFO:StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True)
2025-04-19 20:10:49,752:INFO:stack_models() successfully completed......................................
2025-04-19 20:10:49,877:INFO:Initializing save_model()
2025-04-19 20:10:49,877:INFO:save_model(model=VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), model_name=models/model_1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:10:49,877:INFO:Adding model into prep_pipe
2025-04-19 20:10:49,917:INFO:models/model_1.pkl saved in current working directory
2025-04-19 20:10:49,935:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 VotingRegressor(estimators=[('Huber Regressor',
                                              HuberRegressor(alpha=0.3,
                                                             epsilon=1.3)),
                                             ('Bayesian Ridge',
                                              BayesianRidge(alpha_1=0.3,
                                                            alpha_2=0.3,
                                                            compute_score=True,
                                                            lambda_2=0.005)),
                                             ('Linear Regression',
                                              LinearRegression(n_jobs=-1))],
                                 n_jobs=-1))])
2025-04-19 20:10:49,935:INFO:save_model() successfully completed......................................
2025-04-19 20:10:50,165:INFO:Initializing plot_model()
2025-04-19 20:10:50,165:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:50,165:INFO:Checking exceptions
2025-04-19 20:10:50,168:INFO:Initializing plot_model()
2025-04-19 20:10:50,168:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:50,169:INFO:Checking exceptions
2025-04-19 20:10:50,171:INFO:Preloading libraries
2025-04-19 20:10:50,171:INFO:Copying training dataset
2025-04-19 20:10:50,172:INFO:Plot type: residuals
2025-04-19 20:10:50,470:INFO:Fitting Model
2025-04-19 20:10:50,470:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-04-19 20:10:50,503:INFO:Scoring test/hold-out set
2025-04-19 20:10:50,534:INFO:Saving 'Residuals.png'
2025-04-19 20:10:51,355:INFO:Visual Rendered Successfully
2025-04-19 20:10:51,509:INFO:plot_model() successfully completed......................................
2025-04-19 20:10:51,753:INFO:Initializing plot_model()
2025-04-19 20:10:51,753:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:51,754:INFO:Checking exceptions
2025-04-19 20:10:51,755:INFO:Preloading libraries
2025-04-19 20:10:51,756:INFO:Copying training dataset
2025-04-19 20:10:51,756:INFO:Plot type: error
2025-04-19 20:10:52,108:INFO:Fitting Model
2025-04-19 20:10:52,108:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-04-19 20:10:52,108:INFO:Scoring test/hold-out set
2025-04-19 20:10:52,136:INFO:Saving 'Prediction Error.png'
2025-04-19 20:10:52,548:INFO:Visual Rendered Successfully
2025-04-19 20:10:52,681:INFO:plot_model() successfully completed......................................
2025-04-19 20:10:52,852:INFO:Initializing plot_model()
2025-04-19 20:10:52,852:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=VotingRegressor(estimators=[('Huber Regressor',
                             HuberRegressor(alpha=0.3, epsilon=1.3)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                           compute_score=True,
                                           lambda_2=0.005)),
                            ('Linear Regression', LinearRegression(n_jobs=-1))],
                n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:52,852:INFO:Checking exceptions
2025-04-19 20:10:52,854:INFO:Preloading libraries
2025-04-19 20:10:52,854:INFO:Copying training dataset
2025-04-19 20:10:52,854:INFO:Plot type: learning
2025-04-19 20:10:53,176:INFO:Fitting Model
2025-04-19 20:10:54,028:INFO:Saving 'Learning Curve.png'
2025-04-19 20:10:54,408:INFO:Visual Rendered Successfully
2025-04-19 20:10:54,521:INFO:plot_model() successfully completed......................................
2025-04-19 20:10:54,694:INFO:Initializing save_model()
2025-04-19 20:10:54,694:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), model_name=models/model_2, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:10:54,694:INFO:Adding model into prep_pipe
2025-04-19 20:10:54,741:INFO:models/model_2.pkl saved in current working directory
2025-04-19 20:10:54,758:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Huber Regressor',
                                                HuberRegressor(alpha=0.3,
                                                               epsilon=1.3)),
                                               ('Bayesian Ridge',
                                                BayesianRidge(alpha_1=0.3,
                                                              alpha_2=0.3,
                                                              compute_score=True,
                                                              lambda_2=0.005)),
                                               ('Linear Regression',
                                                LinearRegression(n_jobs=-1))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1, passthrough=True))])
2025-04-19 20:10:54,758:INFO:save_model() successfully completed......................................
2025-04-19 20:10:55,018:INFO:Initializing plot_model()
2025-04-19 20:10:55,019:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:55,019:INFO:Checking exceptions
2025-04-19 20:10:55,024:INFO:Initializing plot_model()
2025-04-19 20:10:55,024:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:55,024:INFO:Checking exceptions
2025-04-19 20:10:55,027:INFO:Preloading libraries
2025-04-19 20:10:55,028:INFO:Copying training dataset
2025-04-19 20:10:55,029:INFO:Plot type: residuals
2025-04-19 20:10:55,318:INFO:Fitting Model
2025-04-19 20:10:55,318:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-04-19 20:10:55,353:INFO:Scoring test/hold-out set
2025-04-19 20:10:55,388:INFO:Saving 'Residuals.png'
2025-04-19 20:10:56,222:INFO:Visual Rendered Successfully
2025-04-19 20:10:56,358:INFO:plot_model() successfully completed......................................
2025-04-19 20:10:56,497:INFO:Initializing plot_model()
2025-04-19 20:10:56,497:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:56,497:INFO:Checking exceptions
2025-04-19 20:10:56,497:INFO:Preloading libraries
2025-04-19 20:10:56,497:INFO:Copying training dataset
2025-04-19 20:10:56,497:INFO:Plot type: error
2025-04-19 20:10:56,734:INFO:Fitting Model
2025-04-19 20:10:56,735:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-04-19 20:10:56,735:INFO:Scoring test/hold-out set
2025-04-19 20:10:56,752:INFO:Saving 'Prediction Error.png'
2025-04-19 20:10:57,050:INFO:Visual Rendered Successfully
2025-04-19 20:10:57,167:INFO:plot_model() successfully completed......................................
2025-04-19 20:10:57,466:INFO:Initializing plot_model()
2025-04-19 20:10:57,466:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=StackingRegressor(cv=5,
                  estimators=[('Huber Regressor',
                               HuberRegressor(alpha=0.3, epsilon=1.3)),
                              ('Bayesian Ridge',
                               BayesianRidge(alpha_1=0.3, alpha_2=0.3,
                                             compute_score=True,
                                             lambda_2=0.005)),
                              ('Linear Regression',
                               LinearRegression(n_jobs=-1))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1,
                  passthrough=True), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:10:57,466:INFO:Checking exceptions
2025-04-19 20:10:57,473:INFO:Preloading libraries
2025-04-19 20:10:57,473:INFO:Copying training dataset
2025-04-19 20:10:57,473:INFO:Plot type: learning
2025-04-19 20:10:57,786:INFO:Fitting Model
2025-04-19 20:10:59,253:INFO:Saving 'Learning Curve.png'
2025-04-19 20:10:59,655:INFO:Visual Rendered Successfully
2025-04-19 20:10:59,793:INFO:plot_model() successfully completed......................................
2025-04-19 20:10:59,960:INFO:Initializing save_model()
2025-04-19 20:10:59,960:INFO:save_model(model=HuberRegressor(alpha=0.3, epsilon=1.3), model_name=models/model_3, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:10:59,960:INFO:Adding model into prep_pipe
2025-04-19 20:11:00,005:INFO:models/model_3.pkl saved in current working directory
2025-04-19 20:11:00,016:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', HuberRegressor(alpha=0.3, epsilon=1.3))])
2025-04-19 20:11:00,016:INFO:save_model() successfully completed......................................
2025-04-19 20:11:00,257:INFO:Initializing plot_model()
2025-04-19 20:11:00,257:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.3, epsilon=1.3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:00,257:INFO:Checking exceptions
2025-04-19 20:11:00,259:INFO:Preloading libraries
2025-04-19 20:11:00,260:INFO:Copying training dataset
2025-04-19 20:11:00,260:INFO:Plot type: feature
2025-04-19 20:11:00,439:INFO:Saving 'Feature Importance.png'
2025-04-19 20:11:00,575:INFO:Visual Rendered Successfully
2025-04-19 20:11:00,687:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:00,903:INFO:Initializing plot_model()
2025-04-19 20:11:00,903:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.3, epsilon=1.3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:00,903:INFO:Checking exceptions
2025-04-19 20:11:00,905:INFO:Preloading libraries
2025-04-19 20:11:00,905:INFO:Copying training dataset
2025-04-19 20:11:00,905:INFO:Plot type: residuals
2025-04-19 20:11:01,252:INFO:Fitting Model
2025-04-19 20:11:01,252:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-04-19 20:11:01,284:INFO:Scoring test/hold-out set
2025-04-19 20:11:01,303:INFO:Saving 'Residuals.png'
2025-04-19 20:11:01,922:INFO:Visual Rendered Successfully
2025-04-19 20:11:02,028:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:02,254:INFO:Initializing plot_model()
2025-04-19 20:11:02,255:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.3, epsilon=1.3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:02,255:INFO:Checking exceptions
2025-04-19 20:11:02,257:INFO:Preloading libraries
2025-04-19 20:11:02,257:INFO:Copying training dataset
2025-04-19 20:11:02,257:INFO:Plot type: error
2025-04-19 20:11:02,541:INFO:Fitting Model
2025-04-19 20:11:02,541:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but HuberRegressor was fitted with feature names
  warnings.warn(

2025-04-19 20:11:02,541:INFO:Scoring test/hold-out set
2025-04-19 20:11:02,548:INFO:Saving 'Prediction Error.png'
2025-04-19 20:11:02,905:INFO:Visual Rendered Successfully
2025-04-19 20:11:03,000:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:03,174:INFO:Initializing plot_model()
2025-04-19 20:11:03,174:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=HuberRegressor(alpha=0.3, epsilon=1.3), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:03,174:INFO:Checking exceptions
2025-04-19 20:11:03,176:INFO:Preloading libraries
2025-04-19 20:11:03,176:INFO:Copying training dataset
2025-04-19 20:11:03,176:INFO:Plot type: learning
2025-04-19 20:11:03,440:INFO:Fitting Model
2025-04-19 20:11:03,759:INFO:Saving 'Learning Curve.png'
2025-04-19 20:11:04,123:INFO:Visual Rendered Successfully
2025-04-19 20:11:04,241:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:04,463:INFO:Initializing save_model()
2025-04-19 20:11:04,463:INFO:save_model(model=BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005), model_name=models/model_4, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:11:04,463:INFO:Adding model into prep_pipe
2025-04-19 20:11:04,496:INFO:models/model_4.pkl saved in current working directory
2025-04-19 20:11:04,512:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True,
                               lambda_2=0.005))])
2025-04-19 20:11:04,513:INFO:save_model() successfully completed......................................
2025-04-19 20:11:04,736:INFO:Initializing plot_model()
2025-04-19 20:11:04,736:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:04,736:INFO:Checking exceptions
2025-04-19 20:11:04,736:INFO:Preloading libraries
2025-04-19 20:11:04,736:INFO:Copying training dataset
2025-04-19 20:11:04,736:INFO:Plot type: feature
2025-04-19 20:11:04,922:INFO:Saving 'Feature Importance.png'
2025-04-19 20:11:05,098:INFO:Visual Rendered Successfully
2025-04-19 20:11:05,202:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:05,370:INFO:Initializing plot_model()
2025-04-19 20:11:05,370:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:05,370:INFO:Checking exceptions
2025-04-19 20:11:05,370:INFO:Preloading libraries
2025-04-19 20:11:05,370:INFO:Copying training dataset
2025-04-19 20:11:05,370:INFO:Plot type: residuals
2025-04-19 20:11:05,686:INFO:Fitting Model
2025-04-19 20:11:05,686:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but BayesianRidge was fitted with feature names
  warnings.warn(

2025-04-19 20:11:05,719:INFO:Scoring test/hold-out set
2025-04-19 20:11:05,752:INFO:Saving 'Residuals.png'
2025-04-19 20:11:06,492:INFO:Visual Rendered Successfully
2025-04-19 20:11:06,624:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:06,786:INFO:Initializing plot_model()
2025-04-19 20:11:06,786:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:06,786:INFO:Checking exceptions
2025-04-19 20:11:06,786:INFO:Preloading libraries
2025-04-19 20:11:06,786:INFO:Copying training dataset
2025-04-19 20:11:06,786:INFO:Plot type: error
2025-04-19 20:11:07,071:INFO:Fitting Model
2025-04-19 20:11:07,071:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but BayesianRidge was fitted with feature names
  warnings.warn(

2025-04-19 20:11:07,071:INFO:Scoring test/hold-out set
2025-04-19 20:11:07,101:INFO:Saving 'Prediction Error.png'
2025-04-19 20:11:07,488:INFO:Visual Rendered Successfully
2025-04-19 20:11:07,594:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:07,753:INFO:Initializing plot_model()
2025-04-19 20:11:07,753:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.3, compute_score=True, lambda_2=0.005), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:07,753:INFO:Checking exceptions
2025-04-19 20:11:07,753:INFO:Preloading libraries
2025-04-19 20:11:07,753:INFO:Copying training dataset
2025-04-19 20:11:07,753:INFO:Plot type: learning
2025-04-19 20:11:08,051:INFO:Fitting Model
2025-04-19 20:11:08,252:INFO:Saving 'Learning Curve.png'
2025-04-19 20:11:08,633:INFO:Visual Rendered Successfully
2025-04-19 20:11:08,756:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:08,949:INFO:Initializing save_model()
2025-04-19 20:11:08,949:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=models/model_5, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-04-19 20:11:08,949:INFO:Adding model into prep_pipe
2025-04-19 20:11:08,998:INFO:models/model_5.pkl saved in current working directory
2025-04-19 20:11:09,015:INFO:Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_49', 'feature_11',
                                             'feature_20'],
                                    transformer=Sim...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2025-04-19 20:11:09,015:INFO:save_model() successfully completed......................................
2025-04-19 20:11:09,342:INFO:Initializing plot_model()
2025-04-19 20:11:09,342:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:09,342:INFO:Checking exceptions
2025-04-19 20:11:09,342:INFO:Preloading libraries
2025-04-19 20:11:09,342:INFO:Copying training dataset
2025-04-19 20:11:09,342:INFO:Plot type: feature
2025-04-19 20:11:09,568:INFO:Saving 'Feature Importance.png'
2025-04-19 20:11:09,726:INFO:Visual Rendered Successfully
2025-04-19 20:11:09,840:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:09,996:INFO:Initializing plot_model()
2025-04-19 20:11:09,996:INFO:plot_model(plot=residuals, fold=None, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:09,997:INFO:Checking exceptions
2025-04-19 20:11:09,998:INFO:Preloading libraries
2025-04-19 20:11:09,998:INFO:Copying training dataset
2025-04-19 20:11:09,998:INFO:Plot type: residuals
2025-04-19 20:11:10,291:INFO:Fitting Model
2025-04-19 20:11:10,291:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2025-04-19 20:11:10,317:INFO:Scoring test/hold-out set
2025-04-19 20:11:10,346:INFO:Saving 'Residuals.png'
2025-04-19 20:11:11,155:INFO:Visual Rendered Successfully
2025-04-19 20:11:11,331:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:11,481:INFO:Initializing plot_model()
2025-04-19 20:11:11,481:INFO:plot_model(plot=error, fold=None, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:11,481:INFO:Checking exceptions
2025-04-19 20:11:11,482:INFO:Preloading libraries
2025-04-19 20:11:11,483:INFO:Copying training dataset
2025-04-19 20:11:11,483:INFO:Plot type: error
2025-04-19 20:11:11,773:INFO:Fitting Model
2025-04-19 20:11:11,773:WARNING:D:\College\agn\venv_py310\lib\site-packages\sklearn\base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names
  warnings.warn(

2025-04-19 20:11:11,773:INFO:Scoring test/hold-out set
2025-04-19 20:11:11,790:INFO:Saving 'Prediction Error.png'
2025-04-19 20:11:12,101:INFO:Visual Rendered Successfully
2025-04-19 20:11:12,219:INFO:plot_model() successfully completed......................................
2025-04-19 20:11:12,462:INFO:Initializing plot_model()
2025-04-19 20:11:12,462:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=True, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001854FAF25C0>, system=True)
2025-04-19 20:11:12,462:INFO:Checking exceptions
2025-04-19 20:11:12,469:INFO:Preloading libraries
2025-04-19 20:11:12,470:INFO:Copying training dataset
2025-04-19 20:11:12,470:INFO:Plot type: learning
2025-04-19 20:11:12,758:INFO:Fitting Model
2025-04-19 20:11:12,978:INFO:Saving 'Learning Curve.png'
2025-04-19 20:11:13,361:INFO:Visual Rendered Successfully
2025-04-19 20:11:13,488:INFO:plot_model() successfully completed......................................
2025-04-19 20:13:41,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:13:41,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:13:41,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:13:41,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-19 20:14:42,078:INFO:PyCaret RegressionExperiment
2025-04-19 20:14:42,078:INFO:Logging name: agn_modeling
2025-04-19 20:14:42,078:INFO:ML Usecase: MLUsecase.REGRESSION
2025-04-19 20:14:42,078:INFO:version 3.0.4
2025-04-19 20:14:42,078:INFO:Initializing setup()
2025-04-19 20:14:42,078:INFO:self.USI: b262
2025-04-19 20:14:42,078:INFO:self._variable_keys: {'data', 'pipeline', 'html_param', 'y', 'target_param', 'X', 'USI', 'X_train', 'n_jobs_param', 'seed', 'fold_groups_param', '_ml_usecase', 'fold_generator', 'X_test', 'exp_id', 'transform_target_param', 'logging_param', 'log_plots_param', '_available_plots', 'idx', 'exp_name_log', 'gpu_param', 'y_test', 'memory', 'y_train', 'gpu_n_jobs_param', 'fold_shuffle_param'}
2025-04-19 20:14:42,078:INFO:Checking environment
2025-04-19 20:14:42,078:INFO:python_version: 3.10.9
2025-04-19 20:14:42,078:INFO:python_build: ('tags/v3.10.9:1dd9be6', 'Dec  6 2022 20:01:21')
2025-04-19 20:14:42,078:INFO:machine: AMD64
2025-04-19 20:14:42,078:INFO:platform: Windows-10-10.0.26100-SP0
2025-04-19 20:14:42,095:INFO:Memory: svmem(total=16952647680, available=3528785920, percent=79.2, used=13423861760, free=3528785920)
2025-04-19 20:14:42,095:INFO:Physical Core: 4
2025-04-19 20:14:42,095:INFO:Logical Core: 8
2025-04-19 20:14:42,095:INFO:Checking libraries
2025-04-19 20:14:42,095:INFO:System:
2025-04-19 20:14:42,095:INFO:    python: 3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 20:01:21) [MSC v.1934 64 bit (AMD64)]
2025-04-19 20:14:42,095:INFO:executable: D:\College\agn\venv_py310\Scripts\python.exe
2025-04-19 20:14:42,095:INFO:   machine: Windows-10-10.0.26100-SP0
2025-04-19 20:14:42,095:INFO:PyCaret required dependencies:
2025-04-19 20:14:42,147:INFO:                 pip: 25.0.1
2025-04-19 20:14:42,147:INFO:          setuptools: 65.5.0
2025-04-19 20:14:42,147:INFO:             pycaret: 3.0.4
2025-04-19 20:14:42,147:INFO:             IPython: 8.35.0
2025-04-19 20:14:42,147:INFO:          ipywidgets: 8.1.6
2025-04-19 20:14:42,147:INFO:                tqdm: 4.67.1
2025-04-19 20:14:42,147:INFO:               numpy: 1.23.5
2025-04-19 20:14:42,147:INFO:              pandas: 1.5.3
2025-04-19 20:14:42,147:INFO:              jinja2: 3.1.6
2025-04-19 20:14:42,147:INFO:               scipy: 1.10.1
2025-04-19 20:14:42,147:INFO:              joblib: 1.2.0
2025-04-19 20:14:42,147:INFO:             sklearn: 1.2.2
2025-04-19 20:14:42,147:INFO:                pyod: 2.0.4
2025-04-19 20:14:42,147:INFO:            imblearn: 0.12.4
2025-04-19 20:14:42,147:INFO:   category_encoders: 2.7.0
2025-04-19 20:14:42,147:INFO:            lightgbm: 4.6.0
2025-04-19 20:14:42,147:INFO:               numba: 0.60.0
2025-04-19 20:14:42,147:INFO:            requests: 2.32.3
2025-04-19 20:14:42,147:INFO:          matplotlib: 3.7.1
2025-04-19 20:14:42,147:INFO:          scikitplot: 0.3.7
2025-04-19 20:14:42,147:INFO:         yellowbrick: 1.5
2025-04-19 20:14:42,147:INFO:              plotly: 5.24.1
2025-04-19 20:14:42,147:INFO:    plotly-resampler: Not installed
2025-04-19 20:14:42,147:INFO:             kaleido: 0.2.1
2025-04-19 20:14:42,147:INFO:           schemdraw: 0.15
2025-04-19 20:14:42,147:INFO:         statsmodels: 0.14.4
2025-04-19 20:14:42,147:INFO:              sktime: 0.21.1
2025-04-19 20:14:42,147:INFO:               tbats: 1.1.3
2025-04-19 20:14:42,147:INFO:            pmdarima: 2.0.4
2025-04-19 20:14:42,147:INFO:              psutil: 7.0.0
2025-04-19 20:14:42,147:INFO:          markupsafe: 3.0.2
2025-04-19 20:14:42,147:INFO:             pickle5: Not installed
2025-04-19 20:14:42,147:INFO:         cloudpickle: 3.1.1
2025-04-19 20:14:42,147:INFO:         deprecation: 2.1.0
2025-04-19 20:14:42,147:INFO:              xxhash: 3.5.0
2025-04-19 20:14:42,147:INFO:           wurlitzer: Not installed
2025-04-19 20:14:42,147:INFO:PyCaret optional dependencies:
2025-04-19 20:14:42,627:INFO:                shap: Not installed
2025-04-19 20:14:42,627:INFO:           interpret: Not installed
2025-04-19 20:14:42,627:INFO:                umap: Not installed
2025-04-19 20:14:42,627:INFO:    pandas_profiling: Not installed
2025-04-19 20:14:42,627:INFO:  explainerdashboard: Not installed
2025-04-19 20:14:42,627:INFO:             autoviz: Not installed
2025-04-19 20:14:42,627:INFO:           fairlearn: Not installed
2025-04-19 20:14:42,627:INFO:          deepchecks: Not installed
2025-04-19 20:14:42,627:INFO:             xgboost: Not installed
2025-04-19 20:14:42,627:INFO:            catboost: Not installed
2025-04-19 20:14:42,627:INFO:              kmodes: Not installed
2025-04-19 20:14:42,627:INFO:             mlxtend: Not installed
2025-04-19 20:14:42,627:INFO:       statsforecast: Not installed
2025-04-19 20:14:42,627:INFO:        tune_sklearn: Not installed
2025-04-19 20:14:42,627:INFO:                 ray: Not installed
2025-04-19 20:14:42,627:INFO:            hyperopt: Not installed
2025-04-19 20:14:42,627:INFO:              optuna: Not installed
2025-04-19 20:14:42,627:INFO:               skopt: Not installed
2025-04-19 20:14:42,627:INFO:              mlflow: 2.21.3
2025-04-19 20:14:42,627:INFO:              gradio: Not installed
2025-04-19 20:14:42,627:INFO:             fastapi: 0.115.12
2025-04-19 20:14:42,627:INFO:             uvicorn: 0.34.2
2025-04-19 20:14:42,627:INFO:              m2cgen: Not installed
2025-04-19 20:14:42,627:INFO:           evidently: Not installed
2025-04-19 20:14:42,627:INFO:               fugue: Not installed
2025-04-19 20:14:42,627:INFO:           streamlit: Not installed
2025-04-19 20:14:42,627:INFO:             prophet: Not installed
2025-04-19 20:14:42,627:INFO:None
2025-04-19 20:14:42,627:INFO:Set up data.
2025-04-19 20:14:42,627:INFO:Set up train/test split.
2025-04-19 20:14:42,642:INFO:Set up index.
2025-04-19 20:14:42,643:INFO:Set up folding strategy.
2025-04-19 20:14:42,643:INFO:Assigning column types.
2025-04-19 20:14:42,643:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-19 20:14:42,643:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,643:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,643:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:42,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:42,776:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,776:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,799:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,976:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:42,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:42,976:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-04-19 20:14:42,991:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:14:42,991:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,097:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,164:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,168:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,253:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,317:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,318:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-04-19 20:14:43,327:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,395:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,456:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,472:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,557:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,636:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-04-19 20:14:43,749:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,889:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,952:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-19 20:14:43,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:43,952:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-19 20:14:44,093:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:44,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,163:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,269:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-04-19 20:14:44,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,340:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-04-19 20:14:44,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:44,618:INFO:Preparing preprocessing pipeline...
2025-04-19 20:14:44,618:INFO:Set up target transformation.
2025-04-19 20:14:44,618:INFO:Set up simple imputation.
2025-04-19 20:14:44,618:INFO:Set up removing multicollinearity.
2025-04-19 20:14:44,618:INFO:Set up removing outliers.
2025-04-19 20:14:44,618:INFO:Set up feature normalization.
2025-04-19 20:14:44,706:INFO:Finished creating preprocessing pipeline.
2025-04-19 20:14:44,733:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\lenovo\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('numerical_imputer',
                 TransformerWrapper(include=['feature_19', 'feature_21',
                                             'feature_11', 'feature_49',
                                             'feature_20'],
                                    transformer=Sim...
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-04-19 20:14:44,733:INFO:Creating final display dataframe.
2025-04-19 20:14:44,885:INFO:Setup _display_container:                     Description         Value
0                    Session id            42
1                        Target        target
2                   Target type    Regression
3           Original data shape     (7999, 6)
4        Transformed data shape     (7719, 6)
5   Transformed train set shape     (5319, 6)
6    Transformed test set shape     (2400, 6)
7              Numeric features             5
8      Rows with missing values          9.6%
9                    Preprocess          True
10              Imputation type        simple
11           Numeric imputation          mean
12       Categorical imputation          mode
13     Remove multicollinearity          True
14  Multicollinearity threshold           0.9
15              Remove outliers          True
16           Outliers threshold          0.05
17                    Normalize          True
18             Normalize method        zscore
19             Transform target          True
20      Transform target method   yeo-johnson
21               Fold Generator         KFold
22                  Fold Number            10
23                     CPU Jobs            -1
24                      Use GPU         False
25               Log Experiment  MlflowLogger
26              Experiment Name  agn_modeling
27                          USI          b262
2025-04-19 20:14:45,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:45,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:45,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:45,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-19 20:14:45,207:INFO:Logging experiment in loggers
